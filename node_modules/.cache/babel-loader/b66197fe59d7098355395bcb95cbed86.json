{"ast":null,"code":"import React,{useEffect,Suspense}from\"react\";import{Route,Switch,Redirect}from\"react-router-dom\";import{getPersons,fetchMessages}from\"../../store/actions\";import{useDispatch}from\"react-redux\";import Spinner from\"../../components/UI/Spinners/FormSpinner/FormSpinner\";import ContentContainer from\"../ContentContainer/ContentContainer\";import ScrollToTop from\"../../components/UI/ScrollToTop\";var Landing=React.lazy(function(){return import(\"../../components/Landing/Landing\");});var FullMessage=React.lazy(function(){return import(\"../../components/FullMessage/FullMessage\");});var Resources=React.lazy(function(){return import(\"../../components/Resources/Resources\");});var Cockpit=function Cockpit(props){var dispatch=useDispatch();useEffect(function(){Promise.all([dispatch(getPersons()),dispatch(fetchMessages())]);},[dispatch]);var cockpitBody=React.createElement(React.Fragment,null,React.createElement(ScrollToTop,null),React.createElement(Suspense,{fallback:React.createElement(Spinner,null)},React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/message/:id\"},React.createElement(ContentContainer,null,React.createElement(FullMessage,props))),React.createElement(Route,{exact:true,path:\"/resources\"},React.createElement(ContentContainer,null,React.createElement(Resources,props))),React.createElement(Route,{exact:true,path:\"/\"},React.createElement(Landing,props)),React.createElement(Redirect,{to:\"/\"}))));return cockpitBody;};export default Cockpit;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Cockpit/Cockpit.js"],"names":["React","useEffect","Suspense","Route","Switch","Redirect","getPersons","fetchMessages","useDispatch","Spinner","ContentContainer","ScrollToTop","Landing","lazy","FullMessage","Resources","Cockpit","props","dispatch","Promise","all","cockpitBody"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,qBAA1C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sDAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,sCAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAGZ,KAAK,CAACa,IAAN,CAAW,iBAAM,QAAO,kCAAP,CAAN,EAAX,CAAhB,CACA,GAAMC,CAAAA,WAAW,CAAGd,KAAK,CAACa,IAAN,CAAW,iBAC7B,QAAO,0CAAP,CAD6B,EAAX,CAApB,CAGA,GAAME,CAAAA,SAAS,CAAGf,KAAK,CAACa,IAAN,CAAW,iBAC3B,QAAO,sCAAP,CAD2B,EAAX,CAAlB,CAIA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEAP,SAAS,CAAC,UAAM,CACdkB,OAAO,CAACC,GAAR,CAAY,CAACF,QAAQ,CAACZ,UAAU,EAAX,CAAT,CAAyBY,QAAQ,CAACX,aAAa,EAAd,CAAjC,CAAZ,EACD,CAFQ,CAEN,CAACW,QAAD,CAFM,CAAT,CAIA,GAAIG,CAAAA,WAAW,CACb,wCACE,oBAAC,WAAD,MADF,CAEE,oBAAC,QAAD,EAAU,QAAQ,CAAE,oBAAC,OAAD,MAApB,EACE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,cAAlB,EACE,oBAAC,gBAAD,MACE,oBAAC,WAAD,CAAiBJ,KAAjB,CADF,CADF,CADF,CAME,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,YAAlB,EACE,oBAAC,gBAAD,MACE,oBAAC,SAAD,CAAeA,KAAf,CADF,CADF,CANF,CAWE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,EACE,oBAAC,OAAD,CAAaA,KAAb,CADF,CAXF,CAcE,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAdF,CADF,CAFF,CADF,CAwBA,MAAOI,CAAAA,WAAP,CACD,CAhCD,CAkCA,cAAeL,CAAAA,OAAf","sourcesContent":["import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { getPersons, fetchMessages } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\nimport ScrollToTop from \"../../components/UI/ScrollToTop\";\n\nconst Landing = React.lazy(() => import(\"../../components/Landing/Landing\"));\nconst FullMessage = React.lazy(() =>\n  import(\"../../components/FullMessage/FullMessage\")\n);\nconst Resources = React.lazy(() =>\n  import(\"../../components/Resources/Resources\")\n);\n\nconst Cockpit = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([dispatch(getPersons()), dispatch(fetchMessages())]);\n  }, [dispatch]);\n\n  let cockpitBody = (\n    <>\n      <ScrollToTop />\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <Route exact path=\"/message/:id\">\n            <ContentContainer>\n              <FullMessage {...props} />\n            </ContentContainer>\n          </Route>\n          <Route exact path=\"/resources\">\n            <ContentContainer>\n              <Resources {...props} />\n            </ContentContainer>\n          </Route>\n          <Route exact path=\"/\">\n            <Landing {...props} />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </>\n  );\n\n  return cockpitBody;\n};\n\nexport default Cockpit;\n"]},"metadata":{},"sourceType":"module"}