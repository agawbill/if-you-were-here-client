{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/LoadMoreContainer/LoadMoreContainer.js\";\nimport React, { useState } from \"react\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\n\nconst LoadMoreContainer = props => {\n  const [messagesCutoff, setMessagesCutoff] = useState(14);\n  const [filteredCutoff, setFilteredCutoff] = useState(14);\n  let loadedMessages = null;\n  let loadMoreMessages = null;\n  let loadMessages = null;\n\n  if (props.filteredLength > 14) {\n    loadMoreMessages = count => {\n      const marker = props.filteredMessages.length - filteredCutoff >= count ? count : props.filteredMessages.length - filteredCutoff;\n      setFilteredCutoff(prevState => prevState + marker);\n    };\n\n    loadedMessages = props.filteredMessages.slice(14, filteredCutoff).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index + 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    });\n  } else {\n    loadMoreMessages = count => {\n      const marker = props.messages.length - messagesCutoff >= count ? count : props.messages.length - messagesCutoff;\n      setMessagesCutoff(prevState => prevState + marker);\n    };\n\n    loadedMessages = props.messages.slice(14, messagesCutoff).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index + 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, loadedMessages, loadMessages);\n};\n\nexport default LoadMoreContainer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/LoadMoreContainer/LoadMoreContainer.js"],"names":["React","useState","MessageSnapshot","LoadMoreContainer","props","messagesCutoff","setMessagesCutoff","filteredCutoff","setFilteredCutoff","loadedMessages","loadMoreMessages","loadMessages","filteredLength","count","marker","filteredMessages","length","prevState","slice","map","message","index","messages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,kDAA5B;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AAEA,MAAIQ,cAAc,GAAG,IAArB;AACA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,YAAY,GAAG,IAAnB;;AAEA,MAAIP,KAAK,CAACQ,cAAN,GAAuB,EAA3B,EAA+B;AAC7BF,IAAAA,gBAAgB,GAAIG,KAAD,IAAW;AAC5B,YAAMC,MAAM,GACVV,KAAK,CAACW,gBAAN,CAAuBC,MAAvB,GAAgCT,cAAhC,IAAkDM,KAAlD,GACIA,KADJ,GAEIT,KAAK,CAACW,gBAAN,CAAuBC,MAAvB,GAAgCT,cAHtC;AAIAC,MAAAA,iBAAiB,CAAES,SAAD,IAAeA,SAAS,GAAGH,MAA5B,CAAjB;AACD,KAND;;AAQAL,IAAAA,cAAc,GAAGL,KAAK,CAACW,gBAAN,CACdG,KADc,CACR,EADQ,EACJX,cADI,EAEdY,GAFc,CAEV,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAAK,GAAG,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAVc,CAAjB;AAWD,GApBD,MAoBO;AACLX,IAAAA,gBAAgB,GAAIG,KAAD,IAAW;AAC5B,YAAMC,MAAM,GACVV,KAAK,CAACkB,QAAN,CAAeN,MAAf,GAAwBX,cAAxB,IAA0CQ,KAA1C,GACIA,KADJ,GAEIT,KAAK,CAACkB,QAAN,CAAeN,MAAf,GAAwBX,cAH9B;AAIAC,MAAAA,iBAAiB,CAAEW,SAAD,IAAeA,SAAS,GAAGH,MAA5B,CAAjB;AACD,KAND;;AAQAL,IAAAA,cAAc,GAAGL,KAAK,CAACkB,QAAN,CACdJ,KADc,CACR,EADQ,EACJb,cADI,EAEdc,GAFc,CAEV,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAAK,GAAG,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAVc,CAAjB;AAWD;;AAED,SACE,0CACGZ,cADH,EAEGE,YAFH,CADF;AAMD,CAxDD;;AA0DA,eAAeR,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\n\nconst LoadMoreContainer = (props) => {\n  const [messagesCutoff, setMessagesCutoff] = useState(14);\n  const [filteredCutoff, setFilteredCutoff] = useState(14);\n\n  let loadedMessages = null;\n  let loadMoreMessages = null;\n  let loadMessages = null;\n\n  if (props.filteredLength > 14) {\n    loadMoreMessages = (count) => {\n      const marker =\n        props.filteredMessages.length - filteredCutoff >= count\n          ? count\n          : props.filteredMessages.length - filteredCutoff;\n      setFilteredCutoff((prevState) => prevState + marker);\n    };\n\n    loadedMessages = props.filteredMessages\n      .slice(14, filteredCutoff)\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index + 14}\n          ></MessageSnapshot>\n        );\n      });\n  } else {\n    loadMoreMessages = (count) => {\n      const marker =\n        props.messages.length - messagesCutoff >= count\n          ? count\n          : props.messages.length - messagesCutoff;\n      setMessagesCutoff((prevState) => prevState + marker);\n    };\n\n    loadedMessages = props.messages\n      .slice(14, messagesCutoff)\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index + 14}\n          ></MessageSnapshot>\n        );\n      });\n  }\n\n  return (\n    <>\n      {loadedMessages}\n      {loadMessages}\n    </>\n  );\n};\n\nexport default LoadMoreContainer;\n"]},"metadata":{},"sourceType":"module"}