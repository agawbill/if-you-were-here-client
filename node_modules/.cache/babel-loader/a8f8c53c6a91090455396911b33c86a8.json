{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const fetchMessage = messageId => {\n  return async dispatch => {\n    try {\n      dispatch(fetchMessageStart());\n      const response = await fetch(`/api/messasges/${messageId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      dispatch(fetchMessageSuccess(data));\n    } catch (err) {\n      dispatch(fetchMessageFail(err));\n    }\n  };\n};\nexport const fetchMessageStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_START\n  };\n};\nexport const fetchMessageSuccess = message => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_SUCCESS,\n    message\n  };\n};\nexport const fetchMessageFail = error => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_FAIL,\n    error\n  };\n};\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/message.js"],"names":["actionTypes","fetchMessage","messageId","dispatch","fetchMessageStart","response","fetch","method","mode","cache","credentials","headers","data","json","fetchMessageSuccess","err","fetchMessageFail","type","FETCH_MESSAGE_START","message","FETCH_MESSAGE_SUCCESS","error","FETCH_MESSAGE_FAIL","resetMessage","RESET_MESSAGE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAe;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBJ,SAAU,EAA7B,EAAgC;AAC1DK,QAAAA,MAAM,EAAE,KADkD;AAE1DC,QAAAA,IAAI,EAAE,MAFoD;AAG1DC,QAAAA,KAAK,EAAE,UAHmD;AAI1DC,QAAAA,WAAW,EAAE,aAJ6C;AAK1DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALiD,OAAhC,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAV,MAAAA,QAAQ,CAACW,mBAAmB,CAACF,IAAD,CAApB,CAAR;AACD,KAbD,CAaE,OAAOG,GAAP,EAAY;AACZZ,MAAAA,QAAQ,CAACa,gBAAgB,CAACD,GAAD,CAAjB,CAAR;AACD;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMX,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLa,IAAAA,IAAI,EAAEjB,WAAW,CAACkB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,mBAAmB,GAAIK,OAAD,IAAa;AAC9C,SAAO;AACLF,IAAAA,IAAI,EAAEjB,WAAW,CAACoB,qBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMH,gBAAgB,GAAIK,KAAD,IAAW;AACzC,SAAO;AACLJ,IAAAA,IAAI,EAAEjB,WAAW,CAACsB,kBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAO;AACLN,IAAAA,IAAI,EAAEjB,WAAW,CAACwB;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessage = (messageId) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessageStart());\n      const response = await fetch(`/api/messasges/${messageId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      dispatch(fetchMessageSuccess(data));\n    } catch (err) {\n      dispatch(fetchMessageFail(err));\n    }\n  };\n};\n\nexport const fetchMessageStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_START,\n  };\n};\n\nexport const fetchMessageSuccess = (message) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const fetchMessageFail = (error) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_FAIL,\n    error,\n  };\n};\n\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}