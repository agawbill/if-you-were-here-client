{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/FullMessage/FullMessage.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullMessage.module.css\";\nimport { setMessage, resetMessage } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullMessage = props => {\n  const message = useSelector(state => state.messages.currentMessage);\n  const setSuccess = useSelector(state => state.messages.setSuccess);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (setSuccess === false) {\n      dispatch(resetMessage());\n      props.history.push(\"/\");\n    }\n\n    dispatch(setMessage(id));\n    return () => dispatch(resetMessage());\n  }, [dispatch, props.history, id, setSuccess]);\n  let messageBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n\n  if (message) {\n    messageBody = React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"To my\", \" \", React.createElement(\"span\", {\n      className: styles.MessageAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, parse(message.who.name))), \",\"), React.createElement(\"span\", {\n      className: styles.MessageMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, parse(message.message)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"From your\", \" \", React.createElement(\"span\", {\n      className: styles.MessageAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, parse(message.identity)))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, messageBody);\n};\n\nexport default withRouter(FullMessage);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/FullMessage/FullMessage.js"],"names":["React","useEffect","useSelector","useDispatch","parse","styles","setMessage","resetMessage","useParams","withRouter","Spinner","FullMessage","props","message","state","messages","currentMessage","setSuccess","dispatch","id","history","push","messageBody","MessageAttribute","who","name","MessageMessage","identity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,wCAApB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,cAA3B,CAA3B;AACA,QAAMC,UAAU,GAAGf,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeE,UAA3B,CAA9B;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAASX,SAAS,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,UAAU,KAAK,KAAnB,EAA0B;AACxBC,MAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACAK,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;;AACDH,IAAAA,QAAQ,CAACZ,UAAU,CAACa,EAAD,CAAX,CAAR;AAEA,WAAO,MAAMD,QAAQ,CAACX,YAAY,EAAb,CAArB;AACD,GARQ,EAQN,CAACW,QAAD,EAAWN,KAAK,CAACQ,OAAjB,EAA0BD,EAA1B,EAA8BF,UAA9B,CARM,CAAT;AAUA,MAAIK,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB;;AAEA,MAAIT,OAAJ,EAAa;AACXS,IAAAA,WAAW,GACT,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,GADR,EAEE;AAAM,MAAA,SAAS,EAAEjB,MAAM,CAACkB,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,KAAK,CAACS,OAAO,CAACW,GAAR,CAAYC,IAAb,CADR,CAFF,CADF,MADF,EAUE;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACqB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCtB,KAAK,CAACS,OAAO,CAACA,OAAT,CAA9C,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,GADZ,EAEE;AAAM,MAAA,SAAS,EAAER,MAAM,CAACkB,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,KAAK,CAACS,OAAO,CAACc,QAAT,CADR,CAFF,CADF,CAXF,CADF;AAsBD;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,WAAN,CAAP;AACD,CA5CD;;AA8CA,eAAeb,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullMessage.module.css\";\nimport { setMessage, resetMessage } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullMessage = (props) => {\n  const message = useSelector((state) => state.messages.currentMessage);\n  const setSuccess = useSelector((state) => state.messages.setSuccess);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (setSuccess === false) {\n      dispatch(resetMessage());\n      props.history.push(\"/\");\n    }\n    dispatch(setMessage(id));\n\n    return () => dispatch(resetMessage());\n  }, [dispatch, props.history, id, setSuccess]);\n\n  let messageBody = <Spinner />;\n\n  if (message) {\n    messageBody = (\n      <>\n        <p>\n          <b>\n            To my{\" \"}\n            <span className={styles.MessageAttribute}>\n              {parse(message.who.name)}\n            </span>\n          </b>\n          ,\n        </p>\n        <span className={styles.MessageMessage}>{parse(message.message)}</span>\n        <p>\n          <b>\n            From your{\" \"}\n            <span className={styles.MessageAttribute}>\n              {parse(message.identity)}\n            </span>\n          </b>\n        </p>\n      </>\n    );\n  }\n\n  return <div>{messageBody}</div>;\n};\n\nexport default withRouter(FullMessage);\n"]},"metadata":{},"sourceType":"module"}