{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport keys from \"../../config/keys\";\nexport const submitMessage = message => {\n  return async dispatch => {\n    try {\n      dispatch(submitMessageStart());\n      const response = await fetch(\"api/messages\", {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify(message)\n      });\n      const data = await response.json();\n      dispatch(submitMessageSuccess(data));\n    } catch (err) {\n      dispatch(submitMessageFail(err));\n    }\n  };\n};\nexport const submitMessageStart = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_START\n  };\n};\nexport const submitMessageSuccess = message => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_SUCCESS,\n    message\n  };\n};\nexport const submitMessageFail = error => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_FAIL,\n    error: error.message\n  };\n};\nexport const submitMessageReset = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_RESET\n  };\n};\nexport const setMessage = messageId => {\n  return {\n    type: actionTypes.FIND_MESSAGE,\n    messageId\n  };\n};\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/messages.js"],"names":["actionTypes","keys","submitMessage","message","dispatch","submitMessageStart","response","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","data","json","submitMessageSuccess","err","submitMessageFail","type","SUBMIT_MESSAGE_START","SUBMIT_MESSAGE_SUCCESS","error","SUBMIT_MESSAGE_FAIL","submitMessageReset","SUBMIT_MESSAGE_RESET","setMessage","messageId","FIND_MESSAGE","resetMessage","RESET_MESSAGE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,IAAI,EAAE,SAFqC;AAG3CC,QAAAA,KAAK,EAAE,UAHoC;AAI3CC,QAAAA,WAAW,EAAE,aAJ8B;AAK3CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SALkC;AAS3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,OAAf;AATqC,OAAjB,CAA5B;AAWA,YAAMa,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAb,MAAAA,QAAQ,CAACc,oBAAoB,CAACF,IAAD,CAArB,CAAR;AACD,KAfD,CAeE,OAAOG,GAAP,EAAY;AACZf,MAAAA,QAAQ,CAACgB,iBAAiB,CAACD,GAAD,CAAlB,CAAR;AACD;AACF,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMd,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLgB,IAAAA,IAAI,EAAErB,WAAW,CAACsB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,oBAAoB,GAAIf,OAAD,IAAa;AAC/C,SAAO;AACLkB,IAAAA,IAAI,EAAErB,WAAW,CAACuB,sBADb;AAELpB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMiB,iBAAiB,GAAII,KAAD,IAAW;AAC1C,SAAO;AACLH,IAAAA,IAAI,EAAErB,WAAW,CAACyB,mBADb;AAELD,IAAAA,KAAK,EAAEA,KAAK,CAACrB;AAFR,GAAP;AAID,CALM;AAOP,OAAO,MAAMuB,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLL,IAAAA,IAAI,EAAErB,WAAW,CAAC2B;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAe;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAErB,WAAW,CAAC8B,YADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAO;AACLV,IAAAA,IAAI,EAAErB,WAAW,CAACgC;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport keys from \"../../config/keys\";\n\nexport const submitMessage = (message) => {\n  return async (dispatch) => {\n    try {\n      dispatch(submitMessageStart());\n      const response = await fetch(\"api/messages\", {\n        method: \"POST\",\n        mode: \"no-cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(message),\n      });\n      const data = await response.json();\n      dispatch(submitMessageSuccess(data));\n    } catch (err) {\n      dispatch(submitMessageFail(err));\n    }\n  };\n};\n\nexport const submitMessageStart = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_START,\n  };\n};\n\nexport const submitMessageSuccess = (message) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const submitMessageFail = (error) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_FAIL,\n    error: error.message,\n  };\n};\n\nexport const submitMessageReset = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_RESET,\n  };\n};\n\nexport const setMessage = (messageId) => {\n  return {\n    type: actionTypes.FIND_MESSAGE,\n    messageId,\n  };\n};\n\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}