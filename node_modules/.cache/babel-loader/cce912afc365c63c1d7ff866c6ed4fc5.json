{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/subscript/subscriptediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nconst SUBSCRIPT = 'subscript';\n/**\n * The subscript editing feature.\n *\n * It registers the `sub` command and introduces the `sub` attribute in the model which renders to the view\n * as a `<sub>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class SubscriptEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'SubscriptEditing';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor; // Allow sub attribute on text nodes.\n\n    editor.model.schema.extend('$text', {\n      allowAttributes: SUBSCRIPT\n    });\n    editor.model.schema.setAttributeProperties(SUBSCRIPT, {\n      isFormatting: true,\n      copyOnEnter: true\n    }); // Build converter from model to view for data and editing pipelines.\n\n    editor.conversion.attributeToElement({\n      model: SUBSCRIPT,\n      view: 'sub',\n      upcastAlso: [{\n        styles: {\n          'vertical-align': 'sub'\n        }\n      }]\n    }); // Create sub command.\n\n    editor.commands.add(SUBSCRIPT, new AttributeCommand(editor, SUBSCRIPT));\n  }\n\n}","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/node_modules/@ckeditor/ckeditor5-basic-styles/src/subscript/subscriptediting.js"],"names":["Plugin","AttributeCommand","SUBSCRIPT","SubscriptEditing","pluginName","init","editor","model","schema","extend","allowAttributes","setAttributeProperties","isFormatting","copyOnEnter","conversion","attributeToElement","view","upcastAlso","styles","commands","add"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,MAAMC,SAAS,GAAG,WAAlB;AAEA;;;;;;;;;AAQA,eAAe,MAAMC,gBAAN,SAA+BH,MAA/B,CAAsC;AACpD;;;AAGA,aAAWI,UAAX,GAAwB;AACvB,WAAO,kBAAP;AACA;AAED;;;;;AAGAC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB,CADM,CAEN;;AACAA,IAAAA,MAAM,CAACC,KAAP,CAAaC,MAAb,CAAoBC,MAApB,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,eAAe,EAAER;AAAnB,KAArC;AACAI,IAAAA,MAAM,CAACC,KAAP,CAAaC,MAAb,CAAoBG,sBAApB,CAA4CT,SAA5C,EAAuD;AACtDU,MAAAA,YAAY,EAAE,IADwC;AAEtDC,MAAAA,WAAW,EAAE;AAFyC,KAAvD,EAJM,CASN;;AAEAP,IAAAA,MAAM,CAACQ,UAAP,CAAkBC,kBAAlB,CAAsC;AACrCR,MAAAA,KAAK,EAAEL,SAD8B;AAErCc,MAAAA,IAAI,EAAE,KAF+B;AAGrCC,MAAAA,UAAU,EAAE,CACX;AACCC,QAAAA,MAAM,EAAE;AACP,4BAAkB;AADX;AADT,OADW;AAHyB,KAAtC,EAXM,CAuBN;;AACAZ,IAAAA,MAAM,CAACa,QAAP,CAAgBC,GAAhB,CAAqBlB,SAArB,EAAgC,IAAID,gBAAJ,CAAsBK,MAAtB,EAA8BJ,SAA9B,CAAhC;AACA;;AApCmD","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/subscript/subscriptediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst SUBSCRIPT = 'subscript';\n\n/**\n * The subscript editing feature.\n *\n * It registers the `sub` command and introduces the `sub` attribute in the model which renders to the view\n * as a `<sub>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SubscriptEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SubscriptEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t// Allow sub attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: SUBSCRIPT } );\n\t\teditor.model.schema.setAttributeProperties( SUBSCRIPT, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: SUBSCRIPT,\n\t\t\tview: 'sub',\n\t\t\tupcastAlso: [\n\t\t\t\t{\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t'vertical-align': 'sub'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create sub command.\n\t\teditor.commands.add( SUBSCRIPT, new AttributeCommand( editor, SUBSCRIPT ) );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}