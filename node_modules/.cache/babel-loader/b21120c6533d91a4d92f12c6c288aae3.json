{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport PostMobile from \"../../components/PostMobile/PostMobile\"; // import FilterViewer from \"../FilterViewer/FilterViewer\";\n\nimport PostFilter from \"../PostFilter/PostFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Posts = () => {\n  // const [open, setOpen] = useState(false);\n  // const [currentPost, setCurrentPost] = useState(null);\n  const posts = useSelector(state => state.posts);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.filters);\n  const sort = useSelector(state => state.sort);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const postsLoading = useSelector(state => state.loading); // const openHandler = () => setOpen(oldState => !oldState);\n  // const postSelector = post => {\n  //   setCurrentPost(post);\n  //   openHandler();\n  // };\n\n  let postFilter = posts.length > 0 ? React.createElement(PostFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : null;\n  let postsContainer = postsLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : null;\n\n  if (who || identity || sort) {\n    postsContainer = filteredPosts.map((post, index) => {\n      return React.createElement(Post, {\n        key: index,\n        entry: post,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n  } else {\n    postsContainer = posts.map((post, index) => {\n      return React.createElement(Post, {\n        key: index,\n        entry: post,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, postFilter, React.createElement(\"div\", {\n    className: styles.Posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, postsContainer));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js"],"names":["React","useState","styles","useSelector","Post","PostMobile","PostFilter","Spinner","Posts","posts","state","who","identity","filters","sort","filteredPosts","postsLoading","loading","postFilter","length","postsContainer","map","post","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,UAAP,MAAuB,wCAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,sDAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AACA,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,OAAhB,CAArC;AACA,QAAMC,IAAI,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAAxB;AACA,QAAMC,aAAa,GAAGZ,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACK,aAAhB,CAAjC;AACA,QAAMC,YAAY,GAAGb,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACO,OAAhB,CAAhC,CAPkB,CAQlB;AAEA;AACA;AACA;AACA;;AAEA,MAAIC,UAAU,GAAGT,KAAK,CAACU,MAAN,GAAe,CAAf,GAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAoC,IAArD;AAEA,MAAIC,cAAc,GAAGJ,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IAAlD;;AAEA,MAAIL,GAAG,IAAIC,QAAP,IAAmBE,IAAvB,EAA6B;AAC3BM,IAAAA,cAAc,GAAGL,aAAa,CAACM,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,KAAK,EAAED,IAAzB;AAA+B,QAAA,MAAM,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFgB,CAAjB;AAGD,GAJD,MAIO;AACLH,IAAAA,cAAc,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,KAAK,EAAED,IAAzB;AAA+B,QAAA,MAAM,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFgB,CAAjB;AAGD;;AAED,SACE,0CAIGL,UAJH,EAKE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BY,cAA/B,CALF,CADF;AASD,CAtCD;;AAwCA,eAAeZ,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport PostMobile from \"../../components/PostMobile/PostMobile\";\n// import FilterViewer from \"../FilterViewer/FilterViewer\";\nimport PostFilter from \"../PostFilter/PostFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Posts = () => {\n  // const [open, setOpen] = useState(false);\n  // const [currentPost, setCurrentPost] = useState(null);\n  const posts = useSelector(state => state.posts);\n  const { who, identity } = useSelector(state => state.filters);\n  const sort = useSelector(state => state.sort);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const postsLoading = useSelector(state => state.loading);\n  // const openHandler = () => setOpen(oldState => !oldState);\n\n  // const postSelector = post => {\n  //   setCurrentPost(post);\n  //   openHandler();\n  // };\n\n  let postFilter = posts.length > 0 ? <PostFilter /> : null;\n\n  let postsContainer = postsLoading ? <Spinner /> : null;\n\n  if (who || identity || sort) {\n    postsContainer = filteredPosts.map((post, index) => {\n      return <Post key={index} entry={post} marker={index}></Post>;\n    });\n  } else {\n    postsContainer = posts.map((post, index) => {\n      return <Post key={index} entry={post} marker={index}></Post>;\n    });\n  }\n\n  return (\n    <>\n      {/* <ContentViewer open={open} openHandler={openHandler}>\n        <PostMobile post={currentPost} />\n      </ContentViewer> */}\n      {postFilter}\n      <div className={styles.Posts}>{postsContainer}</div>\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}