{"ast":null,"code":"import*as actionTypes from\"./actionTypes\";import{sortPosts}from\"./index\";export var addFilter=function addFilter(filter,name,filtered,sort){return function(dispatch){try{dispatch(filterPostsStart());dispatch(filterPostsAdd(filter,name));dispatch(filterPosts());if(sort){dispatch(sortPosts(filtered));}}catch(err){dispatch(filterPostsFail(err));}};};export var removeFilter=function removeFilter(filter,name,filtered,sort){return function(dispatch){try{dispatch(filterPostsStart());dispatch(filterPostsRemove(filter,name));dispatch(filterPosts());if(sort){dispatch(sortPosts(filtered));}}catch(err){dispatch(filterPostsFail(err));}};};export var filterPostsAdd=function filterPostsAdd(filter,name){return{type:actionTypes.FILTER_POSTS_ADD,filter:filter,name:name};};export var filterPostsRemove=function filterPostsRemove(filter,name){return{type:actionTypes.FILTER_POSTS_REMOVE,filter:filter,name:name};};export var filterPosts=function filterPosts(){return{type:actionTypes.FILTER_POSTS};};export var filterPostsStart=function filterPostsStart(){return{type:actionTypes.FILTER_POSTS_START};};export var filterPostsFail=function filterPostsFail(error){return{type:actionTypes.FILTER_POSTS_FAIL,error:error};};export var filterReset=function filterReset(){return{type:actionTypes.FILTER_RESET};};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/filterPosts.js"],"names":["actionTypes","sortPosts","addFilter","filter","name","filtered","sort","dispatch","filterPostsStart","filterPostsAdd","filterPosts","err","filterPostsFail","removeFilter","filterPostsRemove","type","FILTER_POSTS_ADD","FILTER_POSTS_REMOVE","FILTER_POSTS","FILTER_POSTS_START","error","FILTER_POSTS_FAIL","filterReset","FILTER_RESET"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CACA,OAASC,SAAT,KAA0B,SAA1B,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAASC,IAAT,CAAeC,QAAf,CAAyBC,IAAzB,CAAkC,CACzD,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAI,CACFA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR,CACAD,QAAQ,CAACE,cAAc,CAACN,MAAD,CAASC,IAAT,CAAf,CAAR,CACAG,QAAQ,CAACG,WAAW,EAAZ,CAAR,CACA,GAAIJ,IAAJ,CAAU,CACRC,QAAQ,CAACN,SAAS,CAACI,QAAD,CAAV,CAAR,CACD,CACF,CAAC,MAAOM,GAAP,CAAY,CACZJ,QAAQ,CAACK,eAAe,CAACD,GAAD,CAAhB,CAAR,CACD,CACF,CAXD,CAYD,CAbM,CAeP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,MAAD,CAASC,IAAT,CAAeC,QAAf,CAAyBC,IAAzB,CAAkC,CAC5D,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAI,CACFA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR,CACAD,QAAQ,CAACO,iBAAiB,CAACX,MAAD,CAASC,IAAT,CAAlB,CAAR,CACAG,QAAQ,CAACG,WAAW,EAAZ,CAAR,CACA,GAAIJ,IAAJ,CAAU,CACRC,QAAQ,CAACN,SAAS,CAACI,QAAD,CAAV,CAAR,CACD,CACF,CAAC,MAAOM,GAAP,CAAY,CACZJ,QAAQ,CAACK,eAAe,CAACD,GAAD,CAAhB,CAAR,CACD,CACF,CAXD,CAYD,CAbM,CAeP,MAAO,IAAMF,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACN,MAAD,CAASC,IAAT,CAAkB,CAC9C,MAAO,CACLW,IAAI,CAAEf,WAAW,CAACgB,gBADb,CAELb,MAAM,CAANA,MAFK,CAGLC,IAAI,CAAJA,IAHK,CAAP,CAKD,CANM,CAQP,MAAO,IAAMU,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACX,MAAD,CAASC,IAAT,CAAkB,CACjD,MAAO,CACLW,IAAI,CAAEf,WAAW,CAACiB,mBADb,CAELd,MAAM,CAANA,MAFK,CAGLC,IAAI,CAAJA,IAHK,CAAP,CAKD,CANM,CAQP,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,MAAO,CACLK,IAAI,CAAEf,WAAW,CAACkB,YADb,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMV,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC,MAAO,CACLO,IAAI,CAAEf,WAAW,CAACmB,kBADb,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMP,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAQ,KAAK,CAAI,CACtC,MAAO,CACLL,IAAI,CAAEf,WAAW,CAACqB,iBADb,CAELD,KAAK,CAALA,KAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,MAAO,CACLP,IAAI,CAAEf,WAAW,CAACuB,YADb,CAAP,CAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport { sortPosts } from \"./index\";\n\nexport const addFilter = (filter, name, filtered, sort) => {\n  return dispatch => {\n    try {\n      dispatch(filterPostsStart());\n      dispatch(filterPostsAdd(filter, name));\n      dispatch(filterPosts());\n      if (sort) {\n        dispatch(sortPosts(filtered));\n      }\n    } catch (err) {\n      dispatch(filterPostsFail(err));\n    }\n  };\n};\n\nexport const removeFilter = (filter, name, filtered, sort) => {\n  return dispatch => {\n    try {\n      dispatch(filterPostsStart());\n      dispatch(filterPostsRemove(filter, name));\n      dispatch(filterPosts());\n      if (sort) {\n        dispatch(sortPosts(filtered));\n      }\n    } catch (err) {\n      dispatch(filterPostsFail(err));\n    }\n  };\n};\n\nexport const filterPostsAdd = (filter, name) => {\n  return {\n    type: actionTypes.FILTER_POSTS_ADD,\n    filter,\n    name\n  };\n};\n\nexport const filterPostsRemove = (filter, name) => {\n  return {\n    type: actionTypes.FILTER_POSTS_REMOVE,\n    filter,\n    name\n  };\n};\n\nexport const filterPosts = () => {\n  return {\n    type: actionTypes.FILTER_POSTS\n  };\n};\n\nexport const filterPostsStart = () => {\n  return {\n    type: actionTypes.FILTER_POSTS_START\n  };\n};\n\nexport const filterPostsFail = error => {\n  return {\n    type: actionTypes.FILTER_POSTS_FAIL,\n    error\n  };\n};\n\nexport const filterReset = () => {\n  return {\n    type: actionTypes.FILTER_RESET\n  };\n};\n"]},"metadata":{},"sourceType":"module"}