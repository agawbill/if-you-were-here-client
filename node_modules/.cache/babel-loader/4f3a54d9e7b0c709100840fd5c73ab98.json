{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector(state => state.messages.messages);\n  const [messagesCutoff, setMessagesCutoff] = useState(messages.length < 14 ? messages.length : 14);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.messages.filters);\n  const sort = useSelector(state => state.messages.sort);\n  const filteredMessages = useSelector(state => state.messages.filteredMessages);\n  const [filteredCutoff, setFilteredCutoff] = useState(filteredMessages.length < 14 ? filteredMessages.length : 14);\n  const messagesLoading = useSelector(state => state.messages.loading);\n\n  const loadMoreMessages = count => {\n    const marker = messages.length - messagesCutoff >= count ? count : messages.length - messagesCutoff;\n    setMessagesCutoff(prevState => prevState + marker);\n  };\n\n  const loadMoreFiltered = count => {\n    const marker = filteredMessages.length - filteredCutoff >= count ? count : filteredMessages.length - filteredCutoff;\n    setFilteredCutoff(prevState => prevState + marker);\n  };\n\n  let messageFilter = messages.length > 0 ? React.createElement(MessageFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : null;\n  let messagesContainer = messagesLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : null;\n  let loadMessages = null;\n  let loadFiltered = null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.slice(0, filteredCutoff).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n    loadFiltered = messages.length - messagesCutoff > 0 ? React.createElement(\"div\", {\n      onClick: () => loadMoreMessages(14),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"LOAD MORE\") : null;\n  } else {\n    messagesContainer = messages.slice(0, messagesCutoff).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    });\n    loadMessages = messages.length - messagesCutoff > 0 ? React.createElement(\"div\", {\n      onClick: () => loadMoreMessages(14),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"LOAD MORE\") : null;\n  }\n\n  return React.createElement(React.Fragment, null, messageFilter, React.createElement(\"div\", {\n    className: styles.Messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, messagesContainer));\n};\n\nexport default Messages; // a function, on click, returning a react component, adding it like a list","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js"],"names":["React","useState","useEffect","styles","useSelector","MessageSnapshot","MessageFilter","Spinner","Messages","messages","state","messagesCutoff","setMessagesCutoff","length","who","identity","filters","sort","filteredMessages","filteredCutoff","setFilteredCutoff","messagesLoading","loading","loadMoreMessages","count","marker","prevState","loadMoreFiltered","messageFilter","messagesContainer","loadMessages","loadFiltered","slice","map","message","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector((state) => state.messages.messages);\n  const [messagesCutoff, setMessagesCutoff] = useState(\n    messages.length < 14 ? messages.length : 14\n  );\n  const { who, identity } = useSelector((state) => state.messages.filters);\n  const sort = useSelector((state) => state.messages.sort);\n  const filteredMessages = useSelector(\n    (state) => state.messages.filteredMessages\n  );\n  const [filteredCutoff, setFilteredCutoff] = useState(\n    filteredMessages.length < 14 ? filteredMessages.length : 14\n  );\n  const messagesLoading = useSelector((state) => state.messages.loading);\n\n  const loadMoreMessages = (count) => {\n    const marker =\n      messages.length - messagesCutoff >= count\n        ? count\n        : messages.length - messagesCutoff;\n    setMessagesCutoff((prevState) => prevState + marker);\n  };\n\n  const loadMoreFiltered = (count) => {\n    const marker =\n      filteredMessages.length - filteredCutoff >= count\n        ? count\n        : filteredMessages.length - filteredCutoff;\n    setFilteredCutoff((prevState) => prevState + marker);\n  };\n\n  let messageFilter = messages.length > 0 ? <MessageFilter /> : null;\n\n  let messagesContainer = messagesLoading ? <Spinner /> : null;\n\n  let loadMessages = null;\n\n  let loadFiltered = null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages\n      .slice(0, filteredCutoff)\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index}\n          ></MessageSnapshot>\n        );\n      });\n    loadFiltered =\n      messages.length - messagesCutoff > 0 ? (\n        <div onClick={() => loadMoreMessages(14)}>LOAD MORE</div>\n      ) : null;\n  } else {\n    messagesContainer = messages\n      .slice(0, messagesCutoff)\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index}\n          ></MessageSnapshot>\n        );\n      });\n\n    loadMessages =\n      messages.length - messagesCutoff > 0 ? (\n        <div onClick={() => loadMoreMessages(14)}>LOAD MORE</div>\n      ) : null;\n  }\n\n  return (\n    <>\n      {messageFilter}\n      <div className={styles.Messages}>{messagesContainer}</div>\n    </>\n  );\n};\n\nexport default Messages;\n\n// a function, on click, returning a react component, adding it like a list\n"]},"metadata":{},"sourceType":"module"}