{"ast":null,"code":"import React from\"react\";import parse from\"html-react-parser\";import{withRouter}from\"react-router-dom\";import styles from\"./MessageSnapshot.module.css\";var MessageSnapshot=function MessageSnapshot(props){var selectorHandler=function selectorHandler(){props.history.push({pathname:\"/message/\".concat(props.entry._id),passedMessage:props.entry});};var summaryMessage=function summaryMessage(message,count){var newBody=message.split(\" \");if(newBody.length<=count)return message;var lastEl=newBody[count-1].split(\"\").slice(-1)[0];var punctuation=[\".\",\"!\",\",\",\"?\",\";\",\":\",\"&\"];if(punctuation.indexOf(lastEl)!==-1){return\"\".concat(newBody.slice(0,count+1).join(\" \"),\"...\");}return\"\".concat(newBody.slice(0,count).join(\" \"),\"...\");};var divider=props.marker===0?null:React.createElement(\"hr\",null);var date=new Date(props.entry.createdAt).toDateString();return React.createElement(React.Fragment,null,divider,React.createElement(\"div\",{className:styles.Message,onClick:function onClick(){return selectorHandler();}},React.createElement(\"p\",null,\"To my\",\" \",React.createElement(\"span\",{className:styles.MessageAttribute},\" \",props.entry.who.name),\",\",React.createElement(\"br\",null),React.createElement(\"span\",{className:styles.MessageDate},date)),React.createElement(\"span\",{className:styles.MessageMessage},parse(summaryMessage(props.entry.message,100))),React.createElement(\"p\",null,\"From your\",\" \",React.createElement(\"span\",{className:styles.MessageAttribute},props.entry.identity.name))));};export default withRouter(MessageSnapshot);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/MessageSnapshot/MessageSnapshot.js"],"names":["React","parse","withRouter","styles","MessageSnapshot","props","selectorHandler","history","push","pathname","entry","_id","passedMessage","summaryMessage","message","count","newBody","split","length","lastEl","slice","punctuation","indexOf","join","divider","marker","date","Date","createdAt","toDateString","Message","MessageAttribute","who","name","MessageDate","MessageMessage","identity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,CACjBC,QAAQ,oBAAcJ,KAAK,CAACK,KAAN,CAAYC,GAA1B,CADS,CAEjBC,aAAa,CAAEP,KAAK,CAACK,KAFJ,CAAnB,EAID,CALD,CAOA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAUC,KAAV,CAAoB,CACzC,GAAMC,CAAAA,OAAO,CAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAhB,CAEA,GAAID,OAAO,CAACE,MAAR,EAAkBH,KAAtB,CAA6B,MAAOD,CAAAA,OAAP,CAE7B,GAAMK,CAAAA,MAAM,CAAGH,OAAO,CAACD,KAAK,CAAG,CAAT,CAAP,CAAmBE,KAAnB,CAAyB,EAAzB,EAA6BG,KAA7B,CAAmC,CAAC,CAApC,EAAuC,CAAvC,CAAf,CACA,GAAMC,CAAAA,WAAW,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAAqB,GAArB,CAA0B,GAA1B,CAA+B,GAA/B,CAApB,CAEA,GAAIA,WAAW,CAACC,OAAZ,CAAoBH,MAApB,IAAgC,CAAC,CAArC,CAAwC,CACtC,gBAAUH,OAAO,CAACI,KAAR,CAAc,CAAd,CAAiBL,KAAK,CAAG,CAAzB,EAA4BQ,IAA5B,CAAiC,GAAjC,CAAV,QACD,CAED,gBAAUP,OAAO,CAACI,KAAR,CAAc,CAAd,CAAiBL,KAAjB,EAAwBQ,IAAxB,CAA6B,GAA7B,CAAV,QACD,CAbD,CAeA,GAAIC,CAAAA,OAAO,CAAGnB,KAAK,CAACoB,MAAN,GAAiB,CAAjB,CAAqB,IAArB,CAA4B,8BAA1C,CAEA,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAStB,KAAK,CAACK,KAAN,CAAYkB,SAArB,EAAgCC,YAAhC,EAAb,CAEA,MACE,yCACGL,OADH,CAEE,2BAAK,SAAS,CAAErB,MAAM,CAAC2B,OAAvB,CAAgC,OAAO,CAAE,yBAAMxB,CAAAA,eAAe,EAArB,EAAzC,EACE,qCACQ,GADR,CAEE,4BAAM,SAAS,CAAEH,MAAM,CAAC4B,gBAAxB,EACG,GADH,CAEG1B,KAAK,CAACK,KAAN,CAAYsB,GAAZ,CAAgBC,IAFnB,CAFF,KAOE,8BAPF,CAQE,4BAAM,SAAS,CAAE9B,MAAM,CAAC+B,WAAxB,EAAsCR,IAAtC,CARF,CADF,CAWE,4BAAM,SAAS,CAAEvB,MAAM,CAACgC,cAAxB,EACGlC,KAAK,CAACY,cAAc,CAACR,KAAK,CAACK,KAAN,CAAYI,OAAb,CAAsB,GAAtB,CAAf,CADR,CAXF,CAcE,yCACY,GADZ,CAEE,4BAAM,SAAS,CAAEX,MAAM,CAAC4B,gBAAxB,EACG1B,KAAK,CAACK,KAAN,CAAY0B,QAAZ,CAAqBH,IADxB,CAFF,CAdF,CAFF,CADF,CA0BD,CArDD,CAuDA,cAAe/B,CAAAA,UAAU,CAACE,eAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport parse from \"html-react-parser\";\nimport { withRouter } from \"react-router-dom\";\nimport styles from \"./MessageSnapshot.module.css\";\n\nconst MessageSnapshot = (props) => {\n  const selectorHandler = () => {\n    props.history.push({\n      pathname: `/message/${props.entry._id}`,\n      passedMessage: props.entry,\n    });\n  };\n\n  const summaryMessage = (message, count) => {\n    const newBody = message.split(\" \");\n\n    if (newBody.length <= count) return message;\n\n    const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n    const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n\n    if (punctuation.indexOf(lastEl) !== -1) {\n      return `${newBody.slice(0, count + 1).join(\" \")}...`;\n    }\n\n    return `${newBody.slice(0, count).join(\" \")}...`;\n  };\n\n  let divider = props.marker === 0 ? null : <hr />;\n\n  const date = new Date(props.entry.createdAt).toDateString();\n\n  return (\n    <>\n      {divider}\n      <div className={styles.Message} onClick={() => selectorHandler()}>\n        <p>\n          To my{\" \"}\n          <span className={styles.MessageAttribute}>\n            {\" \"}\n            {props.entry.who.name}\n          </span>\n          ,\n          <br />\n          <span className={styles.MessageDate}>{date}</span>\n        </p>\n        <span className={styles.MessageMessage}>\n          {parse(summaryMessage(props.entry.message, 100))}\n        </span>\n        <p>\n          From your{\" \"}\n          <span className={styles.MessageAttribute}>\n            {props.entry.identity.name}\n          </span>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(MessageSnapshot);\n"]},"metadata":{},"sourceType":"module"}