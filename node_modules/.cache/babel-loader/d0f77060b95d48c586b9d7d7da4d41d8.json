{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const [cutoff, setCutoff] = useState(14);\n  const messages = useSelector(state => state.messages.messages);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.messages.filters);\n  const sort = useSelector(state => state.messages.sort);\n  const filteredMessages = useSelector(state => state.messages.filteredMessages);\n  const messagesLoading = useSelector(state => state.messages.loading); // useEffect(()=>)\n\n  const loadMore = (count = 14) => {\n    const marker = messages.length - cutoff >= count ? count : messages.length - cutoff;\n    setCutoff(marker);\n  };\n\n  let messageFilter = messages.length > 0 ? React.createElement(MessageFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : null;\n  let messagesContainer = messagesLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: messages.length - 1 - index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }).reverse();\n  } else {\n    messagesContainer = messages.map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: messages.length - 1 - index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }).reverse();\n  }\n\n  return React.createElement(React.Fragment, null, messageFilter, React.createElement(\"div\", {\n    className: styles.Messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, messagesContainer), messages.length - cutoff > 14 ? React.createElement(\"div\", {\n    onClick: () => setCutoff(14),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"LOAD MORE\") : null);\n};\n\nexport default Messages; // a function, on click, returning a react component, adding it like a list","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js"],"names":["React","useState","useEffect","styles","useSelector","MessageSnapshot","MessageFilter","Spinner","Messages","cutoff","setCutoff","messages","state","who","identity","filters","sort","filteredMessages","messagesLoading","loading","loadMore","count","marker","length","messageFilter","messagesContainer","map","message","index","reverse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const [cutoff, setCutoff] = useState(14);\n  const messages = useSelector((state) => state.messages.messages);\n  const { who, identity } = useSelector((state) => state.messages.filters);\n  const sort = useSelector((state) => state.messages.sort);\n  const filteredMessages = useSelector(\n    (state) => state.messages.filteredMessages\n  );\n  const messagesLoading = useSelector((state) => state.messages.loading);\n\n  // useEffect(()=>)\n\n  const loadMore = (count = 14) => {\n    const marker =\n      messages.length - cutoff >= count ? count : messages.length - cutoff;\n    setCutoff(marker);\n  };\n\n  let messageFilter = messages.length > 0 ? <MessageFilter /> : null;\n\n  let messagesContainer = messagesLoading ? <Spinner /> : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={messages.length - 1 - index}\n          ></MessageSnapshot>\n        );\n      })\n      .reverse();\n  } else {\n    messagesContainer = messages\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={messages.length - 1 - index}\n          ></MessageSnapshot>\n        );\n      })\n      .reverse();\n  }\n\n  return (\n    <>\n      {messageFilter}\n      <div className={styles.Messages}>{messagesContainer}</div>\n      {messages.length - cutoff > 14 ? (\n        <div onClick={() => setCutoff(14)}>LOAD MORE</div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Messages;\n\n// a function, on click, returning a react component, adding it like a list\n"]},"metadata":{},"sourceType":"module"}