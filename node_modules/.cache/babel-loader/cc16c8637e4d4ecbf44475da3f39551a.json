{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js\";\nimport React, { useEffect } from \"react\";\nimport { fetchMessagesReset, resetMessage, submitMessageReset, getPersonsReset } from \"../store/actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst withErrorHandler = WrappedComponent => {\n  return props => {\n    const messagesError = useSelector(state => state.messages.error) !== null;\n    const messageError = useSelector(state => state.message.error) !== null;\n    const personsError = useSelector(state => state.persons.error) !== null;\n    const dispatch = useDispatch();\n    useEffect(() => {\n      return () => {\n        if (messagesError) {\n          dispatch(fetchMessagesReset());\n        } else if (messageError) {\n          dispatch(resetMessage());\n        } else if (personsError) {}\n      };\n    });\n    let body = React.createElement(WrappedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n\n    if (messagesError || messageError || personsError) {\n      body = React.createElement(React.Fragment, null, \"Whoops! An error occured. IT Has been notified. Please try again later.\");\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js"],"names":["React","useEffect","fetchMessagesReset","resetMessage","submitMessageReset","getPersonsReset","withRouter","useSelector","useDispatch","withErrorHandler","WrappedComponent","props","messagesError","state","messages","error","messageError","message","personsError","persons","dispatch","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,wBALP;AAMA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,gBAAgB,GAAIC,gBAAD,IAAsB;AAC7C,SAAQC,KAAD,IAAW;AAChB,UAAMC,aAAa,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,KAA3B,CAAX,KAAiD,IAAvE;AACA,UAAMC,YAAY,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,OAAN,CAAcF,KAA1B,CAAX,KAAgD,IAArE;AACA,UAAMG,YAAY,GAAGX,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACM,OAAN,CAAcJ,KAA1B,CAAX,KAAgD,IAArE;AACA,UAAMK,QAAQ,GAAGZ,WAAW,EAA5B;AAEAP,IAAAA,SAAS,CAAC,MAAM;AACd,aAAO,MAAM;AACX,YAAIW,aAAJ,EAAmB;AACjBQ,UAAAA,QAAQ,CAAClB,kBAAkB,EAAnB,CAAR;AACD,SAFD,MAEO,IAAIc,YAAJ,EAAkB;AACvBI,UAAAA,QAAQ,CAACjB,YAAY,EAAb,CAAR;AACD,SAFM,MAEA,IAAIe,YAAJ,EAAkB,CACxB;AACF,OAPD;AAQD,KATQ,CAAT;AAWA,QAAIG,IAAI,GAAG,oBAAC,gBAAD,oBAAsBV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAEA,QAAIC,aAAa,IAAII,YAAjB,IAAiCE,YAArC,EAAmD;AACjDG,MAAAA,IAAI,GACF,oHADF;AAMD;;AAED,WAAOA,IAAP;AACD,GA7BD;AA8BD,CA/BD;;AAiCA,eAAeZ,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  fetchMessagesReset,\n  resetMessage,\n  submitMessageReset,\n  getPersonsReset,\n} from \"../store/actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst withErrorHandler = (WrappedComponent) => {\n  return (props) => {\n    const messagesError = useSelector((state) => state.messages.error) !== null;\n    const messageError = useSelector((state) => state.message.error) !== null;\n    const personsError = useSelector((state) => state.persons.error) !== null;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      return () => {\n        if (messagesError) {\n          dispatch(fetchMessagesReset());\n        } else if (messageError) {\n          dispatch(resetMessage());\n        } else if (personsError) {\n        }\n      };\n    });\n\n    let body = <WrappedComponent {...props} />;\n\n    if (messagesError || messageError || personsError) {\n      body = (\n        <>\n          Whoops! An error occured. IT Has been notified. Please try again\n          later.\n        </>\n      );\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}