{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const fetchMessages = count => {\n  return async dispatch => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\"/api/messages?count=${}\", {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      dispatch(fetchMessagesSuccess(data));\n    } catch (err) {\n      dispatch(fetchMessagesFail(err));\n    }\n  };\n};\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START\n  };\n};\nexport const fetchMessagesSuccess = messages => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages\n  };\n};\nexport const fetchMessagesFail = messages => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/messages.js"],"names":["actionTypes","fetchMessages","count","dispatch","fetchMessagesStart","response","fetch","method","mode","cache","credentials","headers","data","json","fetchMessagesSuccess","err","fetchMessagesFail","type","FETCH_MESSAGES_START","messages","FETCH_MESSAGES_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AACtDC,QAAAA,MAAM,EAAE,KAD8C;AAEtDC,QAAAA,IAAI,EAAE,MAFgD;AAGtDC,QAAAA,KAAK,EAAE,UAH+C;AAItDC,QAAAA,WAAW,EAAE,aAJyC;AAKtDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAL6C,OAA5B,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAV,MAAAA,QAAQ,CAACW,oBAAoB,CAACF,IAAD,CAArB,CAAR;AACD,KAbD,CAaE,OAAOG,GAAP,EAAY;AACZZ,MAAAA,QAAQ,CAACa,iBAAiB,CAACD,GAAD,CAAlB,CAAR;AACD;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMX,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLa,IAAAA,IAAI,EAAEjB,WAAW,CAACkB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,oBAAoB,GAAIK,QAAD,IAAc;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAEjB,WAAW,CAACoB,sBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMH,iBAAiB,GAAIG,QAAD,IAAc;AAC7C,SAAO;AACLF,IAAAA,IAAI,EAAEjB,WAAW,CAACoB,sBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessages = (count) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\"/api/messages?count=${}\", {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      dispatch(fetchMessagesSuccess(data));\n    } catch (err) {\n      dispatch(fetchMessagesFail(err));\n    }\n  };\n};\n\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START,\n  };\n};\n\nexport const fetchMessagesSuccess = (messages) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n  };\n};\n\nexport const fetchMessagesFail = (messages) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}