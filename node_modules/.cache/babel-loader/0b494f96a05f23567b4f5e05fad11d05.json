{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/Identity/Identity.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Identity.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Identity = props => {\n  const [identityAnswer, setIdentityAnswer] = useState({\n    identityId: null,\n    identityName: null\n  });\n  const persons = useSelector(state => state.persons.persons);\n  useEffect(() => setIdentityAnswer(props.identityValue), [props.identityValue]);\n  const identityFilters = persons.map(person => React.createElement(Form.Check, {\n    inline: true,\n    type: \"radio\",\n    value: person._id,\n    label: person.name,\n    name: \"formHorizontalRadios\",\n    onChange: () => {\n      const {\n        _id: identityId,\n        name: identityName\n      } = person;\n      setIdentityAnswer({\n        identityId,\n        identityName\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"I am a ...\"), React.createElement(\"div\", {\n    className: styles.IdentityAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, identityAnswer.identityName), React.createElement(\"div\", {\n    className: styles.IdentityContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.RadioContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, identityFilters))))), React.createElement(Button, {\n    type: \"next\",\n    switchHandler: props.switchHandler,\n    name: \"identity\",\n    validated: identityAnswer !== null,\n    formValue: identityAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default Identity;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/Identity/Identity.js"],"names":["React","useState","useEffect","useSelector","Button","styles","Form","Col","Row","Identity","props","identityAnswer","setIdentityAnswer","identityId","identityName","persons","state","identityValue","identityFilters","map","person","_id","name","IdentityAnswer","IdentityContent","RadioContainer","switchHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC;AACnDY,IAAAA,UAAU,EAAE,IADuC;AAEnDC,IAAAA,YAAY,EAAE;AAFqC,GAAD,CAApD;AAIA,QAAMC,OAAO,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcA,OAA1B,CAA3B;AAEAb,EAAAA,SAAS,CAAC,MAAMU,iBAAiB,CAACF,KAAK,CAACO,aAAP,CAAxB,EAA+C,CACtDP,KAAK,CAACO,aADgD,CAA/C,CAAT;AAIA,QAAMC,eAAe,GAAGH,OAAO,CAACI,GAAR,CAAaC,MAAD,IAClC,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,MAAM,MADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEA,MAAM,CAACC,GAHhB;AAIE,IAAA,KAAK,EAAED,MAAM,CAACE,IAJhB;AAKE,IAAA,IAAI,EAAC,sBALP;AAME,IAAA,QAAQ,EAAE,MAAM;AACd,YAAM;AAAED,QAAAA,GAAG,EAAER,UAAP;AAAmBS,QAAAA,IAAI,EAAER;AAAzB,UAA0CM,MAAhD;AACAR,MAAAA,iBAAiB,CAAC;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAD,CAAjB;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB,CAAxB;AAcA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACkB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCZ,cAAc,CAACG,YAAvD,CAFF,EAGE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACmB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACoB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcP,eAAd,CADF,CADF,CADF,CADF,CADF,EAUE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,aAAa,EAAER,KAAK,CAACgB,aAFvB;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAEf,cAAc,KAAK,IAJhC;AAKE,IAAA,SAAS,EAAEA,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAHF,CADF;AAwBD,CAjDD;;AAmDA,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Identity.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Identity = (props) => {\n  const [identityAnswer, setIdentityAnswer] = useState({\n    identityId: null,\n    identityName: null,\n  });\n  const persons = useSelector((state) => state.persons.persons);\n\n  useEffect(() => setIdentityAnswer(props.identityValue), [\n    props.identityValue,\n  ]);\n\n  const identityFilters = persons.map((person) => (\n    <Form.Check\n      inline\n      type=\"radio\"\n      value={person._id}\n      label={person.name}\n      name=\"formHorizontalRadios\"\n      onChange={() => {\n        const { _id: identityId, name: identityName } = person;\n        setIdentityAnswer({ identityId, identityName });\n      }}\n    />\n  ));\n\n  return (\n    <>\n      <h3>I am a ...</h3>\n      <div className={styles.IdentityAnswer}>{identityAnswer.identityName}</div>\n      <div className={styles.IdentityContent}>\n        <Form>\n          <fieldset>\n            <Form.Group as={Row}>\n              <div className={styles.RadioContainer}>\n                <Col sm={12}>{identityFilters}</Col>\n              </div>\n            </Form.Group>\n          </fieldset>\n        </Form>\n        <Button\n          type=\"next\"\n          switchHandler={props.switchHandler}\n          name=\"identity\"\n          validated={identityAnswer !== null}\n          formValue={identityAnswer}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Identity;\n"]},"metadata":{},"sourceType":"module"}