{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/Who/Who.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Who.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Who = props => {\n  const [whoAnswer, setWhoAnswer] = useState({\n    whoId: null,\n    whoName: null\n  });\n  const persons = useSelector(state => state.persons.persons);\n  const personsError = useSelector(state => state.persons.error);\n  useEffect(() => setWhoAnswer(props.whoValue), [props.whoValue]);\n  const whoFilters = persons.map(person => React.createElement(Form.Check, {\n    inline: true,\n    type: \"radio\",\n    value: person._id,\n    label: person.name,\n    name: \"formHorizontalRadios\",\n    onChange: () => {\n      const {\n        _id: whoId,\n        name: whoName\n      } = person;\n      setWhoAnswer({\n        whoId,\n        whoName\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n  let personsBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n\n  if (persons) {\n    personsBody = React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Writing to my ...\"), React.createElement(\"div\", {\n      className: styles.WhoAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, whoAnswer.whoName), React.createElement(\"div\", {\n      className: styles.WhoContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.RadioContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, whoFilters))))), React.createElement(Button, {\n      type: \"prev\",\n      switchHandler: props.switchHandler,\n      name: \"who\",\n      formValue: whoAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" \", React.createElement(Button, {\n      type: \"next\",\n      switchHandler: props.switchHandler,\n      name: \"who\",\n      formValue: whoAnswer,\n      validated: whoAnswer.whoName !== null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n  if (personsError) {\n    personsBody = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sorry, an error has occurred and IT has been notified:\"), \" \", personsError);\n  }\n\n  return React.createElement(React.Fragment, null, personsBody);\n};\n\nexport default Who;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/Who/Who.js"],"names":["React","useState","useEffect","useSelector","Button","styles","Form","Col","Row","Spinner","Who","props","whoAnswer","setWhoAnswer","whoId","whoName","persons","state","personsError","error","whoValue","whoFilters","map","person","_id","name","personsBody","WhoAnswer","WhoContent","RadioContainer","switchHandler","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Who.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Who = (props) => {\n  const [whoAnswer, setWhoAnswer] = useState({ whoId: null, whoName: null });\n  const persons = useSelector((state) => state.persons.persons);\n  const personsError = useSelector((state) => state.persons.error);\n\n  useEffect(() => setWhoAnswer(props.whoValue), [props.whoValue]);\n\n  const whoFilters = persons.map((person) => (\n    <Form.Check\n      inline\n      type=\"radio\"\n      value={person._id}\n      label={person.name}\n      name=\"formHorizontalRadios\"\n      onChange={() => {\n        const { _id: whoId, name: whoName } = person;\n        setWhoAnswer({ whoId, whoName });\n      }}\n    />\n  ));\n\n  let personsBody = <Spinner />;\n\n  if (persons) {\n    personsBody = (\n      <>\n        <h3>Writing to my ...</h3>\n        <div className={styles.WhoAnswer}>{whoAnswer.whoName}</div>\n        <div className={styles.WhoContent}>\n          <Form>\n            <fieldset>\n              <Form.Group as={Row}>\n                <div className={styles.RadioContainer}>\n                  <Col sm={12}>{whoFilters}</Col>\n                </div>\n              </Form.Group>\n            </fieldset>\n          </Form>\n          <Button\n            type=\"prev\"\n            switchHandler={props.switchHandler}\n            name=\"who\"\n            formValue={whoAnswer}\n          />{\" \"}\n          <Button\n            type=\"next\"\n            switchHandler={props.switchHandler}\n            name=\"who\"\n            formValue={whoAnswer}\n            validated={whoAnswer.whoName !== null}\n          />\n        </div>\n      </>\n    );\n  }\n\n  if (personsError) {\n    personsBody = (\n      <>\n        <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n          Sorry, an error has occurred and IT has been notified:\n        </span>{\" \"}\n        {personsError}\n      </>\n    );\n  }\n\n  return <>{personsBody}</>;\n};\n\nexport default Who;\n"]},"metadata":{},"sourceType":"module"}