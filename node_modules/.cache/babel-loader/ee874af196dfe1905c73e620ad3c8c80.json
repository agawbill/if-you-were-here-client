{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport LoadMore from \"../../components/LoadMore/LoadMore\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const [messagesCutoff, setMessagesCutoff] = useState(messages.length < 14 ? messages.length : 14);\n  const [filteredCutoff, setFilteredCutoff] = useState(filteredMessages.length < 14 ? filteredMessages.length : 14);\n  const messages = useSelector(state => state.messages.messages);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.messages.filters);\n  const sort = useSelector(state => state.messages.sort);\n  const filteredMessages = useSelector(state => state.messages.filteredMessages);\n  const messagesLoading = useSelector(state => state.messages.loading);\n  let messageFilter = messages.length > 0 ? React.createElement(MessageFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : null;\n  let messagesContainer = messagesLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.slice(0, 15 // filteredCutoff\n    ).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    });\n  } else {\n    messagesContainer = messages.slice(0, 15 // messagesCutoff\n    ).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, messageFilter, messagesContainer, React.createElement(LoadMore, {\n    messages: messages,\n    filteredMessages: filteredMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default Messages; // a function, on click, returning a react component, adding it like a list","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js"],"names":["React","useState","useEffect","styles","useSelector","LoadMore","MessageSnapshot","MessageFilter","Spinner","Messages","messagesCutoff","setMessagesCutoff","messages","length","filteredCutoff","setFilteredCutoff","filteredMessages","state","who","identity","filters","sort","messagesLoading","loading","messageFilter","messagesContainer","slice","map","message","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,sDAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAClDW,QAAQ,CAACC,MAAT,GAAkB,EAAlB,GAAuBD,QAAQ,CAACC,MAAhC,GAAyC,EADS,CAApD;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAClDe,gBAAgB,CAACH,MAAjB,GAA0B,EAA1B,GAA+BG,gBAAgB,CAACH,MAAhD,GAAyD,EADP,CAApD;AAIA,QAAMD,QAAQ,GAAGR,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACL,QAAN,CAAeA,QAA3B,CAA5B;AACA,QAAM;AAAEM,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACL,QAAN,CAAeQ,OAA3B,CAArC;AACA,QAAMC,IAAI,GAAGjB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACL,QAAN,CAAeS,IAA3B,CAAxB;AACA,QAAML,gBAAgB,GAAGZ,WAAW,CACjCa,KAAD,IAAWA,KAAK,CAACL,QAAN,CAAeI,gBADQ,CAApC;AAIA,QAAMM,eAAe,GAAGlB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACL,QAAN,CAAeW,OAA3B,CAAnC;AAEA,MAAIC,aAAa,GAAGZ,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAA0C,IAA9D;AAEA,MAAIY,iBAAiB,GAAGH,eAAe,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IAAxD;;AAEA,MAAIJ,GAAG,IAAIC,QAAP,IAAmBE,IAAvB,EAA6B;AAC3BI,IAAAA,iBAAiB,GAAGT,gBAAgB,CACjCU,KADiB,CAEhB,CAFgB,EAGhB,EAHgB,CAIhB;AAJgB,MAMjBC,GANiB,CAMb,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAdiB,CAApB;AAeD,GAhBD,MAgBO;AACLJ,IAAAA,iBAAiB,GAAGb,QAAQ,CACzBc,KADiB,CAEhB,CAFgB,EAGhB,EAHgB,CAIhB;AAJgB,MAMjBC,GANiB,CAMb,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAdiB,CAApB;AAeD;;AAED,SACE,0CACGL,aADH,EAEGC,iBAFH,EAGE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEb,QAApB;AAA8B,IAAA,gBAAgB,EAAEI,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA9DD;;AAgEA,eAAeP,QAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport LoadMore from \"../../components/LoadMore/LoadMore\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const [messagesCutoff, setMessagesCutoff] = useState(\n    messages.length < 14 ? messages.length : 14\n  );\n  const [filteredCutoff, setFilteredCutoff] = useState(\n    filteredMessages.length < 14 ? filteredMessages.length : 14\n  );\n\n  const messages = useSelector((state) => state.messages.messages);\n  const { who, identity } = useSelector((state) => state.messages.filters);\n  const sort = useSelector((state) => state.messages.sort);\n  const filteredMessages = useSelector(\n    (state) => state.messages.filteredMessages\n  );\n\n  const messagesLoading = useSelector((state) => state.messages.loading);\n\n  let messageFilter = messages.length > 0 ? <MessageFilter /> : null;\n\n  let messagesContainer = messagesLoading ? <Spinner /> : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages\n      .slice(\n        0,\n        15\n        // filteredCutoff\n      )\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index}\n          ></MessageSnapshot>\n        );\n      });\n  } else {\n    messagesContainer = messages\n      .slice(\n        0,\n        15\n        // messagesCutoff\n      )\n      .map((message, index) => {\n        return (\n          <MessageSnapshot\n            key={index}\n            entry={message}\n            marker={index}\n          ></MessageSnapshot>\n        );\n      });\n  }\n\n  return (\n    <>\n      {messageFilter}\n      {messagesContainer}\n      <LoadMore messages={messages} filteredMessages={filteredMessages} />\n    </>\n  );\n};\n\nexport default Messages;\n\n// a function, on click, returning a react component, adding it like a list\n"]},"metadata":{},"sourceType":"module"}