{"ast":null,"code":"import _regeneratorRuntime from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as actionTypes from\"./actionTypes\";export var submitMessage=function submitMessage(message){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(submitMessageStart());_context.next=4;return fetch(\"/api/messages\",{method:\"POST\",mode:\"cors\",cache:\"no-cache\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(message)});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;dispatch(submitMessageSuccess(data));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch(submitMessageFail(_context.t0));case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}());};export var submitMessageStart=function submitMessageStart(){return{type:actionTypes.SUBMIT_MESSAGE_START};};export var submitMessageSuccess=function submitMessageSuccess(message){return{type:actionTypes.SUBMIT_MESSAGE_SUCCESS,message:message};};export var submitMessageFail=function submitMessageFail(error){return{type:actionTypes.SUBMIT_MESSAGE_FAIL,error:error.message};};export var submitMessageReset=function submitMessageReset(){return{type:actionTypes.SUBMIT_MESSAGE_RESET};};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/submitMessage.js"],"names":["actionTypes","submitMessage","message","dispatch","submitMessageStart","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","response","json","data","submitMessageSuccess","submitMessageFail","type","SUBMIT_MESSAGE_START","SUBMIT_MESSAGE_SUCCESS","error","SUBMIT_MESSAGE_FAIL","submitMessageReset","SUBMIT_MESSAGE_RESET"],"mappings":"qUAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACxC,gGAAO,iBAAOC,QAAP,oJAEHA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR,CAFG,sBAGoBC,CAAAA,KAAK,CAAC,eAAD,CAAkB,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,IAAI,CAAE,MAFsC,CAG5CC,KAAK,CAAE,UAHqC,CAI5CC,WAAW,CAAE,aAJ+B,CAK5CC,OAAO,CAAE,CACP,eAAgB,kBADT,CALmC,CAQ5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf,CARsC,CAAlB,CAHzB,QAGGY,QAHH,qCAagBA,CAAAA,QAAQ,CAACC,IAAT,EAbhB,QAaGC,IAbH,eAcHb,QAAQ,CAACc,oBAAoB,CAACD,IAAD,CAArB,CAAR,CAdG,iFAgBHb,QAAQ,CAACe,iBAAiB,aAAlB,CAAR,CAhBG,qEAAP,gEAmBD,CApBM,CAsBP,MAAO,IAAMd,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,MAAO,CACLe,IAAI,CAAEnB,WAAW,CAACoB,oBADb,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMH,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACf,OAAD,CAAa,CAC/C,MAAO,CACLiB,IAAI,CAAEnB,WAAW,CAACqB,sBADb,CAELnB,OAAO,CAAPA,OAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAMgB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACI,KAAD,CAAW,CAC1C,MAAO,CACLH,IAAI,CAAEnB,WAAW,CAACuB,mBADb,CAELD,KAAK,CAAEA,KAAK,CAACpB,OAFR,CAAP,CAID,CALM,CAOP,MAAO,IAAMsB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,MAAO,CACLL,IAAI,CAAEnB,WAAW,CAACyB,oBADb,CAAP,CAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const submitMessage = (message) => {\n  return async (dispatch) => {\n    try {\n      dispatch(submitMessageStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(message),\n      });\n      const data = await response.json();\n      dispatch(submitMessageSuccess(data));\n    } catch (err) {\n      dispatch(submitMessageFail(err));\n    }\n  };\n};\n\nexport const submitMessageStart = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_START,\n  };\n};\n\nexport const submitMessageSuccess = (message) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const submitMessageFail = (error) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_FAIL,\n    error: error.message,\n  };\n};\n\nexport const submitMessageReset = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_RESET,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}