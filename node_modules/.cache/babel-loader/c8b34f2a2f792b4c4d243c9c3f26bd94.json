{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/Message/Message.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/Button/Button\";\nimport styles from \"./Message.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nconst Message = props => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n\n  const handleEditorChange = (content, editor) => {\n    setMessageAnswer(content);\n    console.log(\"Content was updated:\", content);\n  };\n\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"My message ...\"), React.createElement(\"div\", {\n    className: styles.MessageContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    apiKey: \"ulzlzwd1vwer6c373nxfqmeq3tejpex1ximmhkpuw91l8dlb\",\n    tagName: styles.MessageContent // initialValue=\"<p>This is the initial content of the editor</p>\"\n    ,\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n      toolbar: \"undo redo | bold italic backcolor | \\\n             bullist numlist outdent indent |\"\n    },\n    onEditorChange: handleEditorChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nexport default Message;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/Message/Message.js"],"names":["React","useState","useEffect","Button","styles","Form","Editor","Message","props","messageAnswer","setMessageAnswer","handleEditorChange","content","editor","console","log","messageValue","MessageContent","height","menubar","plugins","toolbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMU,kBAAkB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9CH,IAAAA,gBAAgB,CAACE,OAAD,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,OAApC;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAMQ,gBAAgB,CAACF,KAAK,CAACQ,YAAP,CAAvB,EAA6C,CAACR,KAAK,CAACQ,YAAP,CAA7C,CAAT;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,OAAO,EAAEb,MAAM,CAACa,cAFlB,CAGE;AAHF;AAIE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,GADJ;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,OAAO,EAAE,CACP,gEADO,EAEP,4CAFO,EAGP,sDAHO,CAHL;AAQJC,MAAAA,OAAO,EACL;;AATE,KAJR;AAgBE,IAAA,cAAc,EAAEV,kBAhBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAmDD,CA5DD;;AA8DA,eAAeJ,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/Button/Button\";\nimport styles from \"./Message.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nconst Message = props => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n  const handleEditorChange = (content, editor) => {\n    setMessageAnswer(content);\n    console.log(\"Content was updated:\", content);\n  };\n\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n\n  return (\n    <>\n      <h3>My message ...</h3>\n      <div className={styles.MessageContent}>\n        <Editor\n          apiKey=\"ulzlzwd1vwer6c373nxfqmeq3tejpex1ximmhkpuw91l8dlb\"\n          tagName={styles.MessageContent}\n          // initialValue=\"<p>This is the initial content of the editor</p>\"\n          init={{\n            height: 500,\n            menubar: false,\n            plugins: [\n              \"advlist autolink lists link image charmap print preview anchor\",\n              \"searchreplace visualblocks code fullscreen\",\n              \"insertdatetime media table paste code help wordcount\"\n            ],\n            toolbar:\n              \"undo redo | bold italic backcolor | \\\n             bullist numlist outdent indent |\"\n          }}\n          onEditorChange={handleEditorChange}\n        />\n        {/* <Form>\n          <Form.Group controlId=\"MessageContent\">\n            <Form.Control\n              onChange={event => setMessageAnswer(event.target.value)}\n              as=\"textarea\"\n              rows=\"10\"\n              className={styles.MessageContent}\n              value={messageAnswer}\n            />\n          </Form.Group>\n        </Form>\n        <Button\n          type=\"prev\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          formValue={messageAnswer}\n        />\n        <Button\n          type=\"next\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          validated={\n            messageAnswer !== \"\" && messageAnswer.trim().indexOf(\" \") !== -1\n          }\n          formValue={messageAnswer}\n        /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}