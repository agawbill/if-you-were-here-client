{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  filteredPosts: [],\n  success: false,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_POST_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.SUBMIT_POST_SUCCESS:\n      return { ...state,\n        posts: [action.post, ...state.posts],\n        success: true,\n        loading: false\n      };\n\n    case actionTypes.SUBMIT_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.SUBMIT_POST_RESET:\n      return { ...state,\n        loading: false,\n        error: null,\n        success: false\n      };\n\n    case actionTypes.FILTER_POSTS_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FILTER_POSTS_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.FILTER_POSTS_ADD:\n      let filteredAdd = state.posts.filter(post => post[`${action.filter}`] === action.filter);\n      return { ...state,\n        filteredPosts: [state.filteredPosts, ...filteredAdd],\n        loading: false\n      };\n\n    case actionTypes.FILTER_POSTS_REMOVE:\n      let filteredRemove = state.filteredPosts.filter(post => post[`${action.filter}`] !== action.filter);\n      return { ...state,\n        filteredPosts: [...filteredRemove],\n        loading: false\n      };\n\n    case actionTypes.FILTER_RESET:\n      return { ...state,\n        filteredPosts: [],\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/store/reducers/posts.js"],"names":["actionTypes","initialState","posts","currentPost","filteredPosts","success","loading","error","reducer","state","action","type","SUBMIT_POST_START","SUBMIT_POST_SUCCESS","post","SUBMIT_POST_FAIL","SUBMIT_POST_RESET","FILTER_POSTS_START","FILTER_POSTS_FAIL","FILTER_POSTS_ADD","filteredAdd","filter","FILTER_POSTS_REMOVE","filteredRemove","FILTER_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,aAAa,EAAE,EAHI;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,iBAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKP,WAAW,CAACa,mBAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,KAAK,EAAE,CAACQ,MAAM,CAACI,IAAR,EAAc,GAAGL,KAAK,CAACP,KAAvB,CAFF;AAGLG,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKN,WAAW,CAACe,gBAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,OAAP;;AAKF,SAAKP,WAAW,CAACgB,iBAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILF,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKL,WAAW,CAACiB,kBAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKP,WAAW,CAACkB,iBAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,OAAP;;AAKF,SAAKP,WAAW,CAACmB,gBAAjB;AACE,UAAIC,WAAW,GAAGX,KAAK,CAACP,KAAN,CAAYmB,MAAZ,CAChBP,IAAI,IAAIA,IAAI,CAAE,GAAEJ,MAAM,CAACW,MAAO,EAAlB,CAAJ,KAA6BX,MAAM,CAACW,MAD5B,CAAlB;AAGA,aAAO,EACL,GAAGZ,KADE;AAELL,QAAAA,aAAa,EAAE,CAACK,KAAK,CAACL,aAAP,EAAsB,GAAGgB,WAAzB,CAFV;AAGLd,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAW,CAACsB,mBAAjB;AACE,UAAIC,cAAc,GAAGd,KAAK,CAACL,aAAN,CAAoBiB,MAApB,CACnBP,IAAI,IAAIA,IAAI,CAAE,GAAEJ,MAAM,CAACW,MAAO,EAAlB,CAAJ,KAA6BX,MAAM,CAACW,MADzB,CAArB;AAGA,aAAO,EACL,GAAGZ,KADE;AAELL,QAAAA,aAAa,EAAE,CAAC,GAAGmB,cAAJ,CAFV;AAGLjB,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAW,CAACwB,YAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELL,QAAAA,aAAa,EAAE,EAFV;AAGLE,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF;AACE,aAAOE,KAAP;AAlEJ;AAoED,CArED;;AAuEA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  filteredPosts: [],\n  success: false,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_POST_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.SUBMIT_POST_SUCCESS:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n        success: true,\n        loading: false\n      };\n    case actionTypes.SUBMIT_POST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.SUBMIT_POST_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        success: false\n      };\n    case actionTypes.FILTER_POSTS_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.FILTER_POSTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.FILTER_POSTS_ADD:\n      let filteredAdd = state.posts.filter(\n        post => post[`${action.filter}`] === action.filter\n      );\n      return {\n        ...state,\n        filteredPosts: [state.filteredPosts, ...filteredAdd],\n        loading: false\n      };\n    case actionTypes.FILTER_POSTS_REMOVE:\n      let filteredRemove = state.filteredPosts.filter(\n        post => post[`${action.filter}`] !== action.filter\n      );\n      return {\n        ...state,\n        filteredPosts: [...filteredRemove],\n        loading: false\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredPosts: [],\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}