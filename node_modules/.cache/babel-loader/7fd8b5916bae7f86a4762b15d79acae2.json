{"ast":null,"code":"import _slicedToArray from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector}from\"react-redux\";import Button from\"../UI/Buttons/FormButton/FormButton\";import styles from\"./Who.module.css\";import Form from\"react-bootstrap/Form\";import Col from\"react-bootstrap/Col\";import Row from\"react-bootstrap/Row\";import Spinner from\"../../components/UI/Spinners/FormSpinner/FormSpinner\";var Who=function Who(props){var _useState=useState({whoId:null,whoName:null}),_useState2=_slicedToArray(_useState,2),whoAnswer=_useState2[0],setWhoAnswer=_useState2[1];var persons=useSelector(function(state){return state.persons.persons;});var personsError=useSelector(function(state){return state.persons.error;});useEffect(function(){return setWhoAnswer(props.whoValue);},[props.whoValue]);var whoFilters=persons.map(function(person){return React.createElement(Form.Check,{inline:true,type:\"radio\",value:person._id,label:person.name,name:\"formHorizontalRadios\",onChange:function onChange(){var whoId=person._id,whoName=person.name;setWhoAnswer({whoId:whoId,whoName:whoName});}});});var whoBody=React.createElement(Spinner,null);if(persons){whoBody=React.createElement(React.Fragment,null,React.createElement(\"h3\",null,\"Writing to my ...\"),React.createElement(\"div\",{className:styles.WhoAnswer},whoAnswer.whoName),React.createElement(\"div\",{className:styles.WhoContent},React.createElement(Form,null,React.createElement(\"fieldset\",null,React.createElement(Form.Group,{as:Row},React.createElement(\"div\",{className:styles.RadioContainer},React.createElement(Col,{sm:12},whoFilters))))),React.createElement(Button,{type:\"prev\",switchHandler:props.switchHandler,name:\"who\",formValue:whoAnswer}),\" \",React.createElement(Button,{type:\"next\",switchHandler:props.switchHandler,name:\"who\",formValue:whoAnswer,validated:whoAnswer.whoName!==null})));}if(personsError){whoBody=React.createElement(React.Fragment,null,React.createElement(\"span\",{style:{color:\"red\",fontWeight:\"bold\"}},\"Sorry, an error has occurred and IT has been notified:\"),\" \",personsError);}return React.createElement(React.Fragment,null,whoBody);};export default Who;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/Who/Who.js"],"names":["React","useState","useEffect","useSelector","Button","styles","Form","Col","Row","Spinner","Who","props","whoId","whoName","whoAnswer","setWhoAnswer","persons","state","personsError","error","whoValue","whoFilters","map","person","_id","name","whoBody","WhoAnswer","WhoContent","RadioContainer","switchHandler","color","fontWeight"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qCAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sDAApB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,eACaV,QAAQ,CAAC,CAAEW,KAAK,CAAE,IAAT,CAAeC,OAAO,CAAE,IAAxB,CAAD,CADrB,wCACdC,SADc,eACHC,YADG,eAErB,GAAMC,CAAAA,OAAO,CAAGb,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAN,CAAcA,OAAzB,EAAD,CAA3B,CACA,GAAME,CAAAA,YAAY,CAAGf,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAN,CAAcG,KAAzB,EAAD,CAAhC,CAEAjB,SAAS,CAAC,iBAAMa,CAAAA,YAAY,CAACJ,KAAK,CAACS,QAAP,CAAlB,EAAD,CAAqC,CAACT,KAAK,CAACS,QAAP,CAArC,CAAT,CAEA,GAAMC,CAAAA,UAAU,CAAGL,OAAO,CAACM,GAAR,CAAY,SAACC,MAAD,QAC7B,qBAAC,IAAD,CAAM,KAAN,EACE,MAAM,KADR,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEA,MAAM,CAACC,GAHhB,CAIE,KAAK,CAAED,MAAM,CAACE,IAJhB,CAKE,IAAI,CAAC,sBALP,CAME,QAAQ,CAAE,mBAAM,IACDb,CAAAA,KADC,CACwBW,MADxB,CACNC,GADM,CACYX,OADZ,CACwBU,MADxB,CACME,IADN,CAEdV,YAAY,CAAC,CAAEH,KAAK,CAALA,KAAF,CAASC,OAAO,CAAPA,OAAT,CAAD,CAAZ,CACD,CATH,EAD6B,EAAZ,CAAnB,CAcA,GAAIa,CAAAA,OAAO,CAAG,oBAAC,OAAD,MAAd,CAEA,GAAIV,OAAJ,CAAa,CACXU,OAAO,CACL,wCACE,kDADF,CAEE,2BAAK,SAAS,CAAErB,MAAM,CAACsB,SAAvB,EAAmCb,SAAS,CAACD,OAA7C,CAFF,CAGE,2BAAK,SAAS,CAAER,MAAM,CAACuB,UAAvB,EACE,oBAAC,IAAD,MACE,oCACE,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEpB,GAAhB,EACE,2BAAK,SAAS,CAAEH,MAAM,CAACwB,cAAvB,EACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EAAcR,UAAd,CADF,CADF,CADF,CADF,CADF,CAUE,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,aAAa,CAAEV,KAAK,CAACmB,aAFvB,CAGE,IAAI,CAAC,KAHP,CAIE,SAAS,CAAEhB,SAJb,EAVF,CAeK,GAfL,CAgBE,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,aAAa,CAAEH,KAAK,CAACmB,aAFvB,CAGE,IAAI,CAAC,KAHP,CAIE,SAAS,CAAEhB,SAJb,CAKE,SAAS,CAAEA,SAAS,CAACD,OAAV,GAAsB,IALnC,EAhBF,CAHF,CADF,CA8BD,CAED,GAAIK,YAAJ,CAAkB,CAChBQ,OAAO,CACL,wCACE,4BAAM,KAAK,CAAE,CAAEK,KAAK,CAAE,KAAT,CAAgBC,UAAU,CAAE,MAA5B,CAAb,2DADF,CAGU,GAHV,CAIGd,YAJH,CADF,CAQD,CAED,MAAO,yCAAGQ,OAAH,CAAP,CACD,CApED,CAsEA,cAAehB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Who.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Who = (props) => {\n  const [whoAnswer, setWhoAnswer] = useState({ whoId: null, whoName: null });\n  const persons = useSelector((state) => state.persons.persons);\n  const personsError = useSelector((state) => state.persons.error);\n\n  useEffect(() => setWhoAnswer(props.whoValue), [props.whoValue]);\n\n  const whoFilters = persons.map((person) => (\n    <Form.Check\n      inline\n      type=\"radio\"\n      value={person._id}\n      label={person.name}\n      name=\"formHorizontalRadios\"\n      onChange={() => {\n        const { _id: whoId, name: whoName } = person;\n        setWhoAnswer({ whoId, whoName });\n      }}\n    />\n  ));\n\n  let whoBody = <Spinner />;\n\n  if (persons) {\n    whoBody = (\n      <>\n        <h3>Writing to my ...</h3>\n        <div className={styles.WhoAnswer}>{whoAnswer.whoName}</div>\n        <div className={styles.WhoContent}>\n          <Form>\n            <fieldset>\n              <Form.Group as={Row}>\n                <div className={styles.RadioContainer}>\n                  <Col sm={12}>{whoFilters}</Col>\n                </div>\n              </Form.Group>\n            </fieldset>\n          </Form>\n          <Button\n            type=\"prev\"\n            switchHandler={props.switchHandler}\n            name=\"who\"\n            formValue={whoAnswer}\n          />{\" \"}\n          <Button\n            type=\"next\"\n            switchHandler={props.switchHandler}\n            name=\"who\"\n            formValue={whoAnswer}\n            validated={whoAnswer.whoName !== null}\n          />\n        </div>\n      </>\n    );\n  }\n\n  if (personsError) {\n    whoBody = (\n      <>\n        <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n          Sorry, an error has occurred and IT has been notified:\n        </span>{\" \"}\n        {personsError}\n      </>\n    );\n  }\n\n  return <>{whoBody}</>;\n};\n\nexport default Who;\n"]},"metadata":{},"sourceType":"module"}