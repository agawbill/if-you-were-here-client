{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const searchParams = new URLSearchParams(props.location.search);\n    const {\n      postId\n    } = useParams();\n    if (!postId) props.history.push(\"/\");\n    dispatch(setPost(postId));\n    return () => dispatch(resetPost());\n  }, [props.location.search, dispatch, post, props.history]);\n  let postBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n\n  if (post) {\n    postBody = React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"To my \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, parse(post.who)), \",\"), React.createElement(\"span\", {\n      className: styles.PostMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, parse(post.message)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"From your\", \" \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, parse(post.identity))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, postBody);\n};\n\nexport default FullPost;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","parse","styles","setPost","resetPost","useParams","Spinner","FullPost","props","post","state","currentPost","dispatch","postId","history","push","location","search","postBody","PostAttribute","who","PostMessage","message","identity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,qBAAnC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,wCAApB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAaR,SAAS,EAA5B;AAEA,QAAI,CAACQ,MAAL,EAAaL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAEbH,IAAAA,QAAQ,CAACT,OAAO,CAACU,MAAD,CAAR,CAAR;AAEA,WAAO,MAAMD,QAAQ,CAACR,SAAS,EAAV,CAArB;AACD,GATQ,EASN,CAACI,KAAK,CAACQ,QAAN,CAAeC,MAAhB,EAAwBL,QAAxB,EAAkCH,IAAlC,EAAwCD,KAAK,CAACM,OAA9C,CATM,CAAT;AAWA,MAAII,QAAQ,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;;AAEA,MAAIT,IAAJ,EAAU;AACRS,IAAAA,QAAQ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQ;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACiB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwClB,KAAK,CAACQ,IAAI,CAACW,GAAN,CAA7C,CADR,MADF,EAIE;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACmB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCpB,KAAK,CAACQ,IAAI,CAACa,OAAN,CAA3C,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,GADZ,EAEE;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACiB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwClB,KAAK,CAACQ,IAAI,CAACc,QAAN,CAA7C,CAFF,CALF,CADF;AAYD;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,QAAN,CAAP;AACD,CAjCD;;AAmCA,eAAeX,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // const searchParams = new URLSearchParams(props.location.search);\n    const { postId } = useParams();\n\n    if (!postId) props.history.push(\"/\");\n\n    dispatch(setPost(postId));\n\n    return () => dispatch(resetPost());\n  }, [props.location.search, dispatch, post, props.history]);\n\n  let postBody = <Spinner />;\n\n  if (post) {\n    postBody = (\n      <>\n        <p>\n          To my <span className={styles.PostAttribute}>{parse(post.who)}</span>,\n        </p>\n        <span className={styles.PostMessage}>{parse(post.message)}</span>\n        <p>\n          From your{\" \"}\n          <span className={styles.PostAttribute}>{parse(post.identity)}</span>\n        </p>\n      </>\n    );\n  }\n\n  return <div>{postBody}</div>;\n};\n\nexport default FullPost;\n"]},"metadata":{},"sourceType":"module"}