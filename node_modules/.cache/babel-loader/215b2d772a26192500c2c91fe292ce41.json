{"ast":null,"code":"import _slicedToArray from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Button from\"../UI/Buttons/FormButton/FormButton\";import styles from\"./FormMessage.module.css\";import CKEditor from\"@ckeditor/ckeditor5-react\";import BalloonEditor from\"@ckeditor/ckeditor5-build-balloon\";var FormMessage=function FormMessage(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),formMessageAnswer=_useState2[0],setFormMessageAnswer=_useState2[1];var onChangeEditor=function onChangeEditor(event,editor){var data=editor.getData();setFormMessageAnswer(data);};useEffect(function(){setFormMessageAnswer(props.messageValue);},[props.messageValue]);return React.createElement(React.Fragment,null,React.createElement(\"h3\",null,\"My message ...\"),React.createElement(\"div\",{className:styles.FormMessageContent},React.createElement(CKEditor,{editor:BalloonEditor,data:formMessageAnswer,config:{toolbar:[\"bold\",\"italic\",\"|\",\"undo\",\"redo\"]},onChange:onChangeEditor}),React.createElement(Button,{type:\"prev\",switchHandler:props.switchHandler,name:\"message\",formValue:formMessageAnswer}),React.createElement(Button,{type:\"next\",switchHandler:props.switchHandler,name:\"message\",validated:formMessageAnswer!==\"\"&&formMessageAnswer.trim().indexOf(\" \")!==-1,formValue:formMessageAnswer})));};export default FormMessage;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/FormMessage/FormMessage.js"],"names":["React","useState","useEffect","Button","styles","CKEditor","BalloonEditor","FormMessage","props","formMessageAnswer","setFormMessageAnswer","onChangeEditor","event","editor","data","getData","messageValue","FormMessageContent","toolbar","switchHandler","trim","indexOf"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qCAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eACqBP,QAAQ,CAAC,EAAD,CAD7B,wCACtBQ,iBADsB,eACHC,oBADG,eAG7B,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxC,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACE,OAAP,EAAb,CACAL,oBAAoB,CAACI,IAAD,CAApB,CACD,CAHD,CAKAZ,SAAS,CAAC,UAAM,CACdQ,oBAAoB,CAACF,KAAK,CAACQ,YAAP,CAApB,CACD,CAFQ,CAEN,CAACR,KAAK,CAACQ,YAAP,CAFM,CAAT,CAIA,MACE,yCACE,+CADF,CAEE,2BAAK,SAAS,CAAEZ,MAAM,CAACa,kBAAvB,EACE,oBAAC,QAAD,EACE,MAAM,CAAEX,aADV,CAEE,IAAI,CAAEG,iBAFR,CAGE,MAAM,CAAE,CACNS,OAAO,CAAE,CAAC,MAAD,CAAS,QAAT,CAAmB,GAAnB,CAAwB,MAAxB,CAAgC,MAAhC,CADH,CAHV,CAME,QAAQ,CAAEP,cANZ,EADF,CASE,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,aAAa,CAAEH,KAAK,CAACW,aAFvB,CAGE,IAAI,CAAC,SAHP,CAIE,SAAS,CAAEV,iBAJb,EATF,CAeE,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,aAAa,CAAED,KAAK,CAACW,aAFvB,CAGE,IAAI,CAAC,SAHP,CAIE,SAAS,CACPV,iBAAiB,GAAK,EAAtB,EACAA,iBAAiB,CAACW,IAAlB,GAAyBC,OAAzB,CAAiC,GAAjC,IAA0C,CAAC,CAN/C,CAQE,SAAS,CAAEZ,iBARb,EAfF,CAFF,CADF,CA+BD,CA3CD,CA6CA,cAAeF,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./FormMessage.module.css\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport BalloonEditor from \"@ckeditor/ckeditor5-build-balloon\";\n\nconst FormMessage = (props) => {\n  const [formMessageAnswer, setFormMessageAnswer] = useState(\"\");\n\n  const onChangeEditor = (event, editor) => {\n    const data = editor.getData();\n    setFormMessageAnswer(data);\n  };\n\n  useEffect(() => {\n    setFormMessageAnswer(props.messageValue);\n  }, [props.messageValue]);\n\n  return (\n    <>\n      <h3>My message ...</h3>\n      <div className={styles.FormMessageContent}>\n        <CKEditor\n          editor={BalloonEditor}\n          data={formMessageAnswer}\n          config={{\n            toolbar: [\"bold\", \"italic\", \"|\", \"undo\", \"redo\"],\n          }}\n          onChange={onChangeEditor}\n        />\n        <Button\n          type=\"prev\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          formValue={formMessageAnswer}\n        />\n        <Button\n          type=\"next\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          validated={\n            formMessageAnswer !== \"\" &&\n            formMessageAnswer.trim().indexOf(\" \") !== -1\n          }\n          formValue={formMessageAnswer}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default FormMessage;\n"]},"metadata":{},"sourceType":"module"}