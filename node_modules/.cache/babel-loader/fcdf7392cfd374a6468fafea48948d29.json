{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  messages: [],\n  currentMessage: null,\n  filteredMessages: [],\n  filters: {\n    who: null,\n    identity: null\n  },\n  sort: null,\n  messageSuccess: null,\n  setSuccess: null,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGE_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FETCH_MESSAGE_SUCCESS:\n      return { ...state,\n        messages: [...action.messages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.FETCH_MESSAGES_FAIL:\n      return { ...state,\n        loading: true,\n        error: action.error\n      };\n\n    case actionTypes.SUBMIT_MESSAGE_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.SUBMIT_MESSAGE_SUCCESS:\n      return { ...state,\n        messageSuccess: true,\n        loading: true\n      };\n\n    case actionTypes.SUBMIT_MESSAGE_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.SUBMIT_MESSAGE_RESET:\n      return { ...state,\n        loading: false,\n        error: null,\n        messageSuccess: null\n      };\n\n    case actionTypes.FIND_MESSAGE:\n      const message = state.messages.find(message => action.messageId === message._id);\n      return { ...state,\n        currentMessage: message,\n        setSuccess: message !== undefined ? null : false\n      };\n\n    case actionTypes.RESET_MESSAGE:\n      return { ...state,\n        currentMessage: null,\n        setSuccess: null\n      };\n    //filter & sort logic below\n\n    case actionTypes.FILTER_MESSAGES_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FILTER_MESSAGES_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.FILTER_MESSAGES_ADD:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: action.filter\n        }\n      };\n\n    case actionTypes.FILTER_MESSAGES_REMOVE:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: null\n        }\n      };\n\n    case actionTypes.FILTER_MESSAGES:\n      const {\n        who,\n        identity\n      } = state.filters;\n      const messagesCopy = [...state.messages];\n      const newFilteredMessages = who && identity ? messagesCopy.filter(message => message.who === who.name && message.identity.name === identity) : messagesCopy.filter(message => message.who === who || message.identity === identity);\n      return { ...state,\n        filteredMessages: [...newFilteredMessages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.FILTER_RESET:\n      return { ...state,\n        filteredMessages: [],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.SORT_MESSAGES_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.SORT_MESSAGES_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.SORT_MESSAGES_ADD:\n      return { ...state,\n        sort: action.filter\n      };\n\n    case actionTypes.SORT_MESSAGES_REMOVE:\n      return { ...state,\n        sort: false\n      };\n\n    case actionTypes.SORT_MESSAGES:\n      const filteredCopy = action.filtered ? [...state.filteredMessages] : [...state.messages];\n      const sortedMessages = state.sort === \"Oldest\" ? filteredCopy.sort((a, b) => new Date(a.date) - new Date(b.date)) : filteredCopy.sort((a, b) => new Date(b.date) - new Date(a.date));\n      return { ...state,\n        filteredMessages: [...sortedMessages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.SORT_RESET:\n      return { ...state,\n        sort: null,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/reducers/messages.js"],"names":["actionTypes","initialState","messages","currentMessage","filteredMessages","filters","who","identity","sort","messageSuccess","setSuccess","loading","error","reducer","state","action","type","FETCH_MESSAGE_START","FETCH_MESSAGE_SUCCESS","FETCH_MESSAGES_FAIL","SUBMIT_MESSAGE_START","SUBMIT_MESSAGE_SUCCESS","SUBMIT_MESSAGE_FAIL","SUBMIT_MESSAGE_RESET","FIND_MESSAGE","message","find","messageId","_id","undefined","RESET_MESSAGE","FILTER_MESSAGES_START","FILTER_MESSAGES_FAIL","FILTER_MESSAGES_ADD","name","filter","FILTER_MESSAGES_REMOVE","FILTER_MESSAGES","messagesCopy","newFilteredMessages","FILTER_RESET","SORT_MESSAGES_START","SORT_MESSAGES_FAIL","SORT_MESSAGES_ADD","SORT_MESSAGES_REMOVE","SORT_MESSAGES","filteredCopy","filtered","sortedMessages","a","b","Date","date","SORT_RESET"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  messages: [],\n  currentMessage: null,\n  filteredMessages: [],\n  filters: { who: null, identity: null },\n  sort: null,\n  messageSuccess: null,\n  setSuccess: null,\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGE_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: [...action.messages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: true,\n        error: action.error,\n      };\n    case actionTypes.SUBMIT_MESSAGE_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.SUBMIT_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messageSuccess: true,\n        loading: true,\n      };\n    case actionTypes.SUBMIT_MESSAGE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.SUBMIT_MESSAGE_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        messageSuccess: null,\n      };\n    case actionTypes.FIND_MESSAGE:\n      const message = state.messages.find(\n        (message) => action.messageId === message._id\n      );\n      return {\n        ...state,\n        currentMessage: message,\n        setSuccess: message !== undefined ? null : false,\n      };\n    case actionTypes.RESET_MESSAGE:\n      return {\n        ...state,\n        currentMessage: null,\n        setSuccess: null,\n      };\n\n    //filter & sort logic below\n    case actionTypes.FILTER_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FILTER_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.FILTER_MESSAGES_ADD:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.filter,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES_REMOVE:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: null,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES:\n      const { who, identity } = state.filters;\n      const messagesCopy = [...state.messages];\n      const newFilteredMessages =\n        who && identity\n          ? messagesCopy.filter(\n              (message) =>\n                message.who === who.name && message.identity.name === identity\n            )\n          : messagesCopy.filter(\n              (message) => message.who === who || message.identity === identity\n            );\n      return {\n        ...state,\n        filteredMessages: [...newFilteredMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredMessages: [],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.SORT_MESSAGES_ADD:\n      return {\n        ...state,\n        sort: action.filter,\n      };\n    case actionTypes.SORT_MESSAGES_REMOVE:\n      return {\n        ...state,\n        sort: false,\n      };\n    case actionTypes.SORT_MESSAGES:\n      const filteredCopy = action.filtered\n        ? [...state.filteredMessages]\n        : [...state.messages];\n      const sortedMessages =\n        state.sort === \"Oldest\"\n          ? filteredCopy.sort((a, b) => new Date(a.date) - new Date(b.date))\n          : filteredCopy.sort((a, b) => new Date(b.date) - new Date(a.date));\n      return {\n        ...state,\n        filteredMessages: [...sortedMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_RESET:\n      return {\n        ...state,\n        sort: null,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}