{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const postSuccess = useSelector(state => state.success);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    // console.log(postSuccess);\n    const fetchedPost = dispatch(setPost(id));\n    if (!fetchedPost) props.history.push(\"/\"); // const searchParams = new URLSearchParams(props.location.search);\n\n    return () => dispatch(resetPost());\n  }, [dispatch, props.history, id, post]);\n  let postBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n\n  if (post) {\n    postBody = React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"To my \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, parse(post.who)), \",\"), React.createElement(\"span\", {\n      className: styles.PostMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, parse(post.message)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"From your\", \" \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, parse(post.identity))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, postBody);\n};\n\nexport default withRouter(FullPost);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","parse","styles","setPost","resetPost","useParams","withRouter","Spinner","FullPost","props","post","state","currentPost","postSuccess","success","dispatch","id","fetchedPost","history","push","postBody","PostAttribute","who","PostMessage","message","identity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,qBAAnC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,wCAApB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAxB;AACA,QAAMC,WAAW,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,OAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAASX,SAAS,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA,UAAMmB,WAAW,GAAGF,QAAQ,CAACZ,OAAO,CAACa,EAAD,CAAR,CAA5B;AAEA,QAAI,CAACC,WAAL,EAAkBR,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EALJ,CAOd;;AAEA,WAAO,MAAMJ,QAAQ,CAACX,SAAS,EAAV,CAArB;AACD,GAVQ,EAUN,CAACW,QAAD,EAAWN,KAAK,CAACS,OAAjB,EAA0BF,EAA1B,EAA8BN,IAA9B,CAVM,CAAT;AAYA,MAAIU,QAAQ,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;;AAEA,MAAIV,IAAJ,EAAU;AACRU,IAAAA,QAAQ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQ;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACmB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCpB,KAAK,CAACS,IAAI,CAACY,GAAN,CAA7C,CADR,MADF,EAIE;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACqB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCtB,KAAK,CAACS,IAAI,CAACc,OAAN,CAA3C,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,GADZ,EAEE;AAAM,MAAA,SAAS,EAAEtB,MAAM,CAACmB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCpB,KAAK,CAACS,IAAI,CAACe,QAAN,CAA7C,CAFF,CALF,CADF;AAYD;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,QAAN,CAAP;AACD,CApCD;;AAsCA,eAAed,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const postSuccess = useSelector(state => state.success);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    // console.log(postSuccess);\n\n    const fetchedPost = dispatch(setPost(id));\n\n    if (!fetchedPost) props.history.push(\"/\");\n\n    // const searchParams = new URLSearchParams(props.location.search);\n\n    return () => dispatch(resetPost());\n  }, [dispatch, props.history, id, post]);\n\n  let postBody = <Spinner />;\n\n  if (post) {\n    postBody = (\n      <>\n        <p>\n          To my <span className={styles.PostAttribute}>{parse(post.who)}</span>,\n        </p>\n        <span className={styles.PostMessage}>{parse(post.message)}</span>\n        <p>\n          From your{\" \"}\n          <span className={styles.PostAttribute}>{parse(post.identity)}</span>\n        </p>\n      </>\n    );\n  }\n\n  return <div>{postBody}</div>;\n};\n\nexport default withRouter(FullPost);\n"]},"metadata":{},"sourceType":"module"}