{"ast":null,"code":"import _defineProperty from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from\"../actions/actionTypes\";var initialState={posts:[],currentPost:null,filteredPosts:[],filters:{who:null,identity:null},sort:null,postSuccess:null,setSuccess:null,loading:false,error:null};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.SUBMIT_POST_START:return _objectSpread({},state,{loading:true,error:null});case actionTypes.SUBMIT_POST_SUCCESS:return _objectSpread({},state,{posts:[action.post].concat(_toConsumableArray(state.posts)),postSuccess:true,loading:true});case actionTypes.SUBMIT_POST_FAIL:return _objectSpread({},state,{loading:false,error:action.error});case actionTypes.SUBMIT_POST_RESET:return _objectSpread({},state,{loading:false,error:null,postSuccess:null});case actionTypes.FIND_POST:var post=state.posts.find(function(post){return action.postId===post.id;});return _objectSpread({},state,{currentPost:post,setSuccess:post!==undefined?null:false});case actionTypes.RESET_POST:return _objectSpread({},state,{currentPost:null,setSuccess:null});//filter & sort logic below\ncase actionTypes.FILTER_POSTS_START:return _objectSpread({},state,{loading:true,error:null});case actionTypes.FILTER_POSTS_FAIL:return _objectSpread({},state,{loading:false,error:action.error});case actionTypes.FILTER_POSTS_ADD:return _objectSpread({},state,{filters:_objectSpread({},state.filters,_defineProperty({},action.name,action.filter))});case actionTypes.FILTER_POSTS_REMOVE:return _objectSpread({},state,{filters:_objectSpread({},state.filters,_defineProperty({},action.name,null))});case actionTypes.FILTER_POSTS:var _state$filters=state.filters,who=_state$filters.who,identity=_state$filters.identity;var postsCopy=_toConsumableArray(state.posts);var newFilteredPosts=who&&identity?postsCopy.filter(function(post){return post.who===who&&post.identity===identity;}):postsCopy.filter(function(post){return post.who===who||post.identity===identity;});return _objectSpread({},state,{filteredPosts:_toConsumableArray(newFilteredPosts),loading:false,error:null});case actionTypes.FILTER_RESET:return _objectSpread({},state,{filteredPosts:[],loading:false,error:null});case actionTypes.SORT_POSTS_START:return _objectSpread({},state,{loading:true,error:null});case actionTypes.SORT_POSTS_FAIL:return _objectSpread({},state,{loading:false,error:action.error});case actionTypes.SORT_POSTS_ADD:return _objectSpread({},state,{sort:action.filter});case actionTypes.SORT_POSTS_REMOVE:return _objectSpread({},state,{sort:false});case actionTypes.SORT_POSTS:var filteredCopy=action.filtered?_toConsumableArray(state.filteredPosts):_toConsumableArray(state.posts);var sortedPosts=state.sort===\"Oldest\"?filteredCopy.sort(function(a,b){return new Date(a.date)-new Date(b.date);}):filteredCopy.sort(function(a,b){return new Date(b.date)-new Date(a.date);});return _objectSpread({},state,{filteredPosts:_toConsumableArray(sortedPosts),loading:false,error:null});case actionTypes.SORT_RESET:return _objectSpread({},state,{sort:null,loading:false,error:null});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/reducers/posts.js"],"names":["actionTypes","initialState","posts","currentPost","filteredPosts","filters","who","identity","sort","postSuccess","setSuccess","loading","error","reducer","state","action","type","SUBMIT_POST_START","SUBMIT_POST_SUCCESS","post","SUBMIT_POST_FAIL","SUBMIT_POST_RESET","FIND_POST","find","postId","id","undefined","RESET_POST","FILTER_POSTS_START","FILTER_POSTS_FAIL","FILTER_POSTS_ADD","name","filter","FILTER_POSTS_REMOVE","FILTER_POSTS","postsCopy","newFilteredPosts","FILTER_RESET","SORT_POSTS_START","SORT_POSTS_FAIL","SORT_POSTS_ADD","SORT_POSTS_REMOVE","SORT_POSTS","filteredCopy","filtered","sortedPosts","a","b","Date","date","SORT_RESET"],"mappings":"qfAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,WAAW,CAAE,IAFM,CAGnBC,aAAa,CAAE,EAHI,CAInBC,OAAO,CAAE,CAAEC,GAAG,CAAE,IAAP,CAAaC,QAAQ,CAAE,IAAvB,CAJU,CAKnBC,IAAI,CAAE,IALa,CAMnBC,WAAW,CAAE,IANM,CAOnBC,UAAU,CAAE,IAPO,CAQnBC,OAAO,CAAE,KARU,CASnBC,KAAK,CAAE,IATY,CAArB,CAYA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBb,YAAyB,IAAXc,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKhB,CAAAA,WAAW,CAACiB,iBAAjB,CACE,wBACKH,KADL,EAEEH,OAAO,CAAE,IAFX,CAGEC,KAAK,CAAE,IAHT,GAKF,IAAKZ,CAAAA,WAAW,CAACkB,mBAAjB,CACE,wBACKJ,KADL,EAEEZ,KAAK,EAAGa,MAAM,CAACI,IAAV,4BAAmBL,KAAK,CAACZ,KAAzB,EAFP,CAGEO,WAAW,CAAE,IAHf,CAIEE,OAAO,CAAE,IAJX,GAMF,IAAKX,CAAAA,WAAW,CAACoB,gBAAjB,CACE,wBACKN,KADL,EAEEH,OAAO,CAAE,KAFX,CAGEC,KAAK,CAAEG,MAAM,CAACH,KAHhB,GAKF,IAAKZ,CAAAA,WAAW,CAACqB,iBAAjB,CACE,wBACKP,KADL,EAEEH,OAAO,CAAE,KAFX,CAGEC,KAAK,CAAE,IAHT,CAIEH,WAAW,CAAE,IAJf,GAMF,IAAKT,CAAAA,WAAW,CAACsB,SAAjB,CACE,GAAMH,CAAAA,IAAI,CAAGL,KAAK,CAACZ,KAAN,CAAYqB,IAAZ,CAAiB,SAAAJ,IAAI,QAAIJ,CAAAA,MAAM,CAACS,MAAP,GAAkBL,IAAI,CAACM,EAA3B,EAArB,CAAb,CACA,wBACKX,KADL,EAEEX,WAAW,CAAEgB,IAFf,CAGET,UAAU,CAAES,IAAI,GAAKO,SAAT,CAAqB,IAArB,CAA4B,KAH1C,GAKF,IAAK1B,CAAAA,WAAW,CAAC2B,UAAjB,CACE,wBACKb,KADL,EAEEX,WAAW,CAAE,IAFf,CAGEO,UAAU,CAAE,IAHd,GAMF;AACA,IAAKV,CAAAA,WAAW,CAAC4B,kBAAjB,CACE,wBACKd,KADL,EAEEH,OAAO,CAAE,IAFX,CAGEC,KAAK,CAAE,IAHT,GAKF,IAAKZ,CAAAA,WAAW,CAAC6B,iBAAjB,CACE,wBACKf,KADL,EAEEH,OAAO,CAAE,KAFX,CAGEC,KAAK,CAAEG,MAAM,CAACH,KAHhB,GAKF,IAAKZ,CAAAA,WAAW,CAAC8B,gBAAjB,CACE,wBACKhB,KADL,EAEET,OAAO,kBACFS,KAAK,CAACT,OADJ,oBAEJU,MAAM,CAACgB,IAFH,CAEUhB,MAAM,CAACiB,MAFjB,EAFT,GAOF,IAAKhC,CAAAA,WAAW,CAACiC,mBAAjB,CACE,wBACKnB,KADL,EAEET,OAAO,kBACFS,KAAK,CAACT,OADJ,oBAEJU,MAAM,CAACgB,IAFH,CAEU,IAFV,EAFT,GAOF,IAAK/B,CAAAA,WAAW,CAACkC,YAAjB,oBAC4BpB,KAAK,CAACT,OADlC,CACUC,GADV,gBACUA,GADV,CACeC,QADf,gBACeA,QADf,CAEE,GAAM4B,CAAAA,SAAS,oBAAOrB,KAAK,CAACZ,KAAb,CAAf,CACA,GAAMkC,CAAAA,gBAAgB,CACpB9B,GAAG,EAAIC,QAAP,CACI4B,SAAS,CAACH,MAAV,CACE,SAAAb,IAAI,QAAIA,CAAAA,IAAI,CAACb,GAAL,GAAaA,GAAb,EAAoBa,IAAI,CAACZ,QAAL,GAAkBA,QAA1C,EADN,CADJ,CAII4B,SAAS,CAACH,MAAV,CACE,SAAAb,IAAI,QAAIA,CAAAA,IAAI,CAACb,GAAL,GAAaA,GAAb,EAAoBa,IAAI,CAACZ,QAAL,GAAkBA,QAA1C,EADN,CALN,CAQA,wBACKO,KADL,EAEEV,aAAa,oBAAMgC,gBAAN,CAFf,CAGEzB,OAAO,CAAE,KAHX,CAIEC,KAAK,CAAE,IAJT,GAMF,IAAKZ,CAAAA,WAAW,CAACqC,YAAjB,CACE,wBACKvB,KADL,EAEEV,aAAa,CAAE,EAFjB,CAGEO,OAAO,CAAE,KAHX,CAIEC,KAAK,CAAE,IAJT,GAMF,IAAKZ,CAAAA,WAAW,CAACsC,gBAAjB,CACE,wBACKxB,KADL,EAEEH,OAAO,CAAE,IAFX,CAGEC,KAAK,CAAE,IAHT,GAKF,IAAKZ,CAAAA,WAAW,CAACuC,eAAjB,CACE,wBACKzB,KADL,EAEEH,OAAO,CAAE,KAFX,CAGEC,KAAK,CAAEG,MAAM,CAACH,KAHhB,GAKF,IAAKZ,CAAAA,WAAW,CAACwC,cAAjB,CACE,wBACK1B,KADL,EAEEN,IAAI,CAAEO,MAAM,CAACiB,MAFf,GAIF,IAAKhC,CAAAA,WAAW,CAACyC,iBAAjB,CACE,wBACK3B,KADL,EAEEN,IAAI,CAAE,KAFR,GAIF,IAAKR,CAAAA,WAAW,CAAC0C,UAAjB,CACE,GAAMC,CAAAA,YAAY,CAAG5B,MAAM,CAAC6B,QAAP,oBACb9B,KAAK,CAACV,aADO,qBAEbU,KAAK,CAACZ,KAFO,CAArB,CAGA,GAAM2C,CAAAA,WAAW,CACf/B,KAAK,CAACN,IAAN,GAAe,QAAf,CACImC,YAAY,CAACnC,IAAb,CAAkB,SAACsC,CAAD,CAAIC,CAAJ,QAAU,IAAIC,CAAAA,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAmB,GAAID,CAAAA,IAAJ,CAASD,CAAC,CAACE,IAAX,CAA7B,EAAlB,CADJ,CAEIN,YAAY,CAACnC,IAAb,CAAkB,SAACsC,CAAD,CAAIC,CAAJ,QAAU,IAAIC,CAAAA,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAmB,GAAID,CAAAA,IAAJ,CAASF,CAAC,CAACG,IAAX,CAA7B,EAAlB,CAHN,CAIA,wBACKnC,KADL,EAEEV,aAAa,oBAAMyC,WAAN,CAFf,CAGElC,OAAO,CAAE,KAHX,CAIEC,KAAK,CAAE,IAJT,GAMF,IAAKZ,CAAAA,WAAW,CAACkD,UAAjB,CACE,wBACKpC,KADL,EAEEN,IAAI,CAAE,IAFR,CAGEG,OAAO,CAAE,KAHX,CAIEC,KAAK,CAAE,IAJT,GAMF,QACE,MAAOE,CAAAA,KAAP,CA1IJ,CA4ID,CA7ID,CA+IA,cAAeD,CAAAA,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  filteredPosts: [],\n  filters: { who: null, identity: null },\n  sort: null,\n  postSuccess: null,\n  setSuccess: null,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_POST_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.SUBMIT_POST_SUCCESS:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n        postSuccess: true,\n        loading: true\n      };\n    case actionTypes.SUBMIT_POST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.SUBMIT_POST_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        postSuccess: null\n      };\n    case actionTypes.FIND_POST:\n      const post = state.posts.find(post => action.postId === post.id);\n      return {\n        ...state,\n        currentPost: post,\n        setSuccess: post !== undefined ? null : false\n      };\n    case actionTypes.RESET_POST:\n      return {\n        ...state,\n        currentPost: null,\n        setSuccess: null\n      };\n\n    //filter & sort logic below\n    case actionTypes.FILTER_POSTS_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.FILTER_POSTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.FILTER_POSTS_ADD:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.filter\n        }\n      };\n    case actionTypes.FILTER_POSTS_REMOVE:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: null\n        }\n      };\n    case actionTypes.FILTER_POSTS:\n      const { who, identity } = state.filters;\n      const postsCopy = [...state.posts];\n      const newFilteredPosts =\n        who && identity\n          ? postsCopy.filter(\n              post => post.who === who && post.identity === identity\n            )\n          : postsCopy.filter(\n              post => post.who === who || post.identity === identity\n            );\n      return {\n        ...state,\n        filteredPosts: [...newFilteredPosts],\n        loading: false,\n        error: null\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredPosts: [],\n        loading: false,\n        error: null\n      };\n    case actionTypes.SORT_POSTS_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.SORT_POSTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.SORT_POSTS_ADD:\n      return {\n        ...state,\n        sort: action.filter\n      };\n    case actionTypes.SORT_POSTS_REMOVE:\n      return {\n        ...state,\n        sort: false\n      };\n    case actionTypes.SORT_POSTS:\n      const filteredCopy = action.filtered\n        ? [...state.filteredPosts]\n        : [...state.posts];\n      const sortedPosts =\n        state.sort === \"Oldest\"\n          ? filteredCopy.sort((a, b) => new Date(a.date) - new Date(b.date))\n          : filteredCopy.sort((a, b) => new Date(b.date) - new Date(a.date));\n      return {\n        ...state,\n        filteredPosts: [...sortedPosts],\n        loading: false,\n        error: null\n      };\n    case actionTypes.SORT_RESET:\n      return {\n        ...state,\n        sort: null,\n        loading: false,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}