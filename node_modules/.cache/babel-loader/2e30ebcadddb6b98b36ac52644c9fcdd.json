{"ast":null,"code":"import _slicedToArray from\"/home/anthony/Desktop/if-you-were-here/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/anthony/Desktop/if-you-were-here/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState,useReducer,useEffect}from\"react\";import styles from\"./PostForm.module.css\";import Modal from\"../../components/UI/Modal/Modal\";import Identity from\"../../components/Identity/Identity\";import Who from\"../../components/Who/Who\";import Message from\"../../components/Message/Message\";import Summary from\"../../components/Summary/Summary\";import FormSpinner from\"../../components/UI/Spinners/FormSpinner/FormSpinner\";import{useDispatch,useSelector}from\"react-redux\";import{submitPost,submitPostReset}from\"../../store/actions\";var initialState={identity:null,who:null,message:\"\"};var formReducer=function formReducer(formState,action){switch(action.type){case\"identity\":return _objectSpread({},formState,{identity:action.value});case\"who\":return _objectSpread({},formState,{who:action.value});case\"message\":return _objectSpread({},formState,{message:action.value});case\"reset\":return _objectSpread({},initialState);case\"submit\":return _objectSpread({},formState);default:break;}};var PostForm=function PostForm(){var _useReducer=useReducer(formReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),formState=_useReducer2[0],dispatchForm=_useReducer2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),sectionIndex=_useState4[0],setSectionIndex=_useState4[1];var postSuccess=useSelector(function(state){return state.success;});var postError=useSelector(function(state){return state.error;});var postLoading=useSelector(function(state){return state.loading;});var dispatch=useDispatch();useEffect(function(){if(postSuccess){dispatchForm({type:\"reset\"});dispatch(submitPostReset());}},[postSuccess,dispatch]);var openHandler=function openHandler(){return setOpen(function(oldState){return!oldState;});};var switchHandler=function switchHandler(type,name,formValue){if(type===\"next\"&&sectionIndex===sections.length-1){setSectionIndex(function(prevIndex){return prevIndex;});dispatchForm({type:name,value:formValue});}else if(type===\"next\"){setSectionIndex(function(prevIndex){return prevIndex+1;});dispatchForm({type:name,value:formValue});}else if(type===\"prev\"){setSectionIndex(function(prevIndex){return prevIndex-1;});dispatchForm({type:name,value:formValue});}else{dispatchForm({type:name});var body={identity:formState.identity,who:formState.who,message:formState.message};dispatch(submitPost(body));setSectionIndex(0);}};var sections=[React.createElement(Identity,{switchHandler:switchHandler,identityValue:formState.identity}),React.createElement(Who,{switchHandler:switchHandler,whoValue:formState.who}),React.createElement(Message,{switchHandler:switchHandler,messageValue:formState.message}),React.createElement(Summary,{switchHandler:switchHandler,messageValue:formState.message,whoValue:formState.who,identityValue:formState.identity})];var postFormBody=sections[sectionIndex];if(postLoading){postFormBody=React.createElement(FormSpinner,null);}else if(postError){postFormBody=postError;}return React.createElement(React.Fragment,null,React.createElement(Modal,{open:open,openHandler:openHandler},postFormBody),React.createElement(\"div\",{className:styles.TextBox,onClick:function onClick(){return openHandler();}},\"Enter Here \",React.createElement(\"span\",{className:styles.TypeWriter},\"|\")));};export default PostForm;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/containers/PostForm/PostForm.js"],"names":["React","useState","useReducer","useEffect","styles","Modal","Identity","Who","Message","Summary","FormSpinner","useDispatch","useSelector","submitPost","submitPostReset","initialState","identity","who","message","formReducer","formState","action","type","value","PostForm","dispatchForm","open","setOpen","sectionIndex","setSectionIndex","postSuccess","state","success","postError","error","postLoading","loading","dispatch","openHandler","oldState","switchHandler","name","formValue","sections","length","prevIndex","body","postFormBody","TextBox","TypeWriter"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\nimport styles from \"./PostForm.module.css\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Identity from \"../../components/Identity/Identity\";\nimport Who from \"../../components/Who/Who\";\nimport Message from \"../../components/Message/Message\";\nimport Summary from \"../../components/Summary/Summary\";\nimport FormSpinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { submitPost, submitPostReset } from \"../../store/actions\";\n\nconst initialState = {\n  identity: null,\n  who: null,\n  message: \"\"\n};\n\nconst formReducer = (formState, action) => {\n  switch (action.type) {\n    case \"identity\":\n      return {\n        ...formState,\n        identity: action.value\n      };\n    case \"who\":\n      return {\n        ...formState,\n        who: action.value\n      };\n    case \"message\":\n      return {\n        ...formState,\n        message: action.value\n      };\n    case \"reset\":\n      return {\n        ...initialState\n      };\n    case \"submit\":\n      return {\n        ...formState\n      };\n    default:\n      break;\n  }\n};\n\nconst PostForm = () => {\n  const [formState, dispatchForm] = useReducer(formReducer, initialState);\n  const [open, setOpen] = useState(false);\n  const [sectionIndex, setSectionIndex] = useState(0);\n  const postSuccess = useSelector(state => state.success);\n  const postError = useSelector(state => state.error);\n  const postLoading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (postSuccess) {\n      dispatchForm({ type: \"reset\" });\n      dispatch(submitPostReset());\n    }\n  }, [postSuccess, dispatch]);\n\n  const openHandler = () => setOpen(oldState => !oldState);\n\n  const switchHandler = (type, name, formValue) => {\n    if (type === \"next\" && sectionIndex === sections.length - 1) {\n      setSectionIndex(prevIndex => prevIndex);\n      dispatchForm({ type: name, value: formValue });\n    } else if (type === \"next\") {\n      setSectionIndex(prevIndex => prevIndex + 1);\n      dispatchForm({ type: name, value: formValue });\n    } else if (type === \"prev\") {\n      setSectionIndex(prevIndex => prevIndex - 1);\n      dispatchForm({ type: name, value: formValue });\n    } else {\n      dispatchForm({ type: name });\n      const body = {\n        identity: formState.identity,\n        who: formState.who,\n        message: formState.message\n      };\n      dispatch(submitPost(body));\n      setSectionIndex(0);\n    }\n  };\n\n  const sections = [\n    <Identity\n      switchHandler={switchHandler}\n      identityValue={formState.identity}\n    />,\n    <Who switchHandler={switchHandler} whoValue={formState.who} />,\n    <Message switchHandler={switchHandler} messageValue={formState.message} />,\n    <Summary\n      switchHandler={switchHandler}\n      messageValue={formState.message}\n      whoValue={formState.who}\n      identityValue={formState.identity}\n    />\n  ];\n\n  let postFormBody = sections[sectionIndex];\n\n  if (postLoading) {\n    postFormBody = <FormSpinner />;\n  } else if (postError) {\n    postFormBody = postError;\n  }\n\n  return (\n    <>\n      <Modal open={open} openHandler={openHandler}>\n        {postFormBody}\n      </Modal>\n      <div className={styles.TextBox} onClick={() => openHandler()}>\n        Enter Here <span className={styles.TypeWriter}>|</span>\n      </div>\n    </>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}