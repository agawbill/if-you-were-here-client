{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js\";\nimport React from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"../../components/Message/Message\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector(state => state.messages.messages);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.messages.filters);\n  const sort = useSelector(state => state.messages.sort);\n  const filteredMessages = useSelector(state => state.messages.filteredMessages);\n  let messageFilter = messages.length > 0 ? React.createElement(MessageFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.map((message, index) => {\n      return React.createElement(Message, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    });\n  } else {\n    messagesContainer = messages.map((message, index) => {\n      return React.createElement(Message, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, messageFilter, React.createElement(\"div\", {\n    className: styles.Messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, messagesContainer));\n};\n\nexport default Messages;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js"],"names":["React","styles","useSelector","Message","MessageFilter","Spinner","Messages","messages","state","who","identity","filters","sort","filteredMessages","messageFilter","length","messagesContainer","map","message","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,sDAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeI,OAA3B,CAArC;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeK,IAA3B,CAAxB;AACA,QAAMC,gBAAgB,GAAGX,WAAW,CACjCM,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeM,gBADQ,CAApC;AAIA,MAAIC,aAAa,GAAGP,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAA0C,IAA9D;;AAEA,MAAIN,GAAG,IAAIC,QAAP,IAAmBE,IAAvB,EAA6B;AAC3BI,IAAAA,iBAAiB,GAAGH,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3D,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,KAAd;AAAqB,QAAA,KAAK,EAAED,OAA5B;AAAqC,QAAA,MAAM,EAAEC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFmB,CAApB;AAGD,GAJD,MAIO;AACLH,IAAAA,iBAAiB,GAAGT,QAAQ,CAACU,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnD,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,KAAd;AAAqB,QAAA,KAAK,EAAED,OAA5B;AAAqC,QAAA,MAAM,EAAEC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFmB,CAApB;AAGD;;AAED,SACE,0CACGL,aADH,EAEE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACK,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCU,iBAAlC,CAFF,CADF;AAMD,CA1BD;;AA4BA,eAAeV,QAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"../../components/Message/Message\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector((state) => state.messages.messages);\n  const { who, identity } = useSelector((state) => state.messages.filters);\n  const sort = useSelector((state) => state.messages.sort);\n  const filteredMessages = useSelector(\n    (state) => state.messages.filteredMessages\n  );\n\n  let messageFilter = messages.length > 0 ? <MessageFilter /> : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.map((message, index) => {\n      return <Message key={index} entry={message} marker={index}></Message>;\n    });\n  } else {\n    messagesContainer = messages.map((message, index) => {\n      return <Message key={index} entry={message} marker={index}></Message>;\n    });\n  }\n\n  return (\n    <>\n      {messageFilter}\n      <div className={styles.Messages}>{messagesContainer}</div>\n    </>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}