{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const setSuccess = useSelector(state => state.setSuccess);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (postSuccess === false) {\n      dispatch(resetPost());\n      props.history.push(\"/\");\n    }\n\n    dispatch(setPost(id));\n    return () => dispatch(resetPost());\n  }, [dispatch, props.history, id, postSuccess]);\n  let postBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n\n  if (post) {\n    postBody = React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"To my \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, parse(post.who)), \",\"), React.createElement(\"span\", {\n      className: styles.PostMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, parse(post.message)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"From your\", \" \", React.createElement(\"span\", {\n      className: styles.PostAttribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, parse(post.identity))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, postBody);\n};\n\nexport default withRouter(FullPost);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/FullPost/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","parse","styles","setPost","resetPost","useParams","withRouter","Spinner","FullPost","props","post","state","currentPost","setSuccess","dispatch","id","postSuccess","history","push","postBody","PostAttribute","who","PostMessage","message","identity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,qBAAnC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,wCAApB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAxB;AACA,QAAMC,UAAU,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACE,UAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASV,SAAS,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,WAAW,KAAK,KAApB,EAA2B;AACzBF,MAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AACAK,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;;AAEDJ,IAAAA,QAAQ,CAACX,OAAO,CAACY,EAAD,CAAR,CAAR;AAEA,WAAO,MAAMD,QAAQ,CAACV,SAAS,EAAV,CAArB;AACD,GATQ,EASN,CAACU,QAAD,EAAWL,KAAK,CAACQ,OAAjB,EAA0BF,EAA1B,EAA8BC,WAA9B,CATM,CAAT;AAWA,MAAIG,QAAQ,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;;AAEA,MAAIT,IAAJ,EAAU;AACRS,IAAAA,QAAQ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQ;AAAM,MAAA,SAAS,EAAEjB,MAAM,CAACkB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCnB,KAAK,CAACS,IAAI,CAACW,GAAN,CAA7C,CADR,MADF,EAIE;AAAM,MAAA,SAAS,EAAEnB,MAAM,CAACoB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCrB,KAAK,CAACS,IAAI,CAACa,OAAN,CAA3C,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,GADZ,EAEE;AAAM,MAAA,SAAS,EAAErB,MAAM,CAACkB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCnB,KAAK,CAACS,IAAI,CAACc,QAAN,CAA7C,CAFF,CALF,CADF;AAYD;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,QAAN,CAAP;AACD,CAnCD;;AAqCA,eAAeb,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = props => {\n  const post = useSelector(state => state.currentPost);\n  const setSuccess = useSelector(state => state.setSuccess);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (postSuccess === false) {\n      dispatch(resetPost());\n      props.history.push(\"/\");\n    }\n\n    dispatch(setPost(id));\n\n    return () => dispatch(resetPost());\n  }, [dispatch, props.history, id, postSuccess]);\n\n  let postBody = <Spinner />;\n\n  if (post) {\n    postBody = (\n      <>\n        <p>\n          To my <span className={styles.PostAttribute}>{parse(post.who)}</span>,\n        </p>\n        <span className={styles.PostMessage}>{parse(post.message)}</span>\n        <p>\n          From your{\" \"}\n          <span className={styles.PostAttribute}>{parse(post.identity)}</span>\n        </p>\n      </>\n    );\n  }\n\n  return <div>{postBody}</div>;\n};\n\nexport default withRouter(FullPost);\n"]},"metadata":{},"sourceType":"module"}