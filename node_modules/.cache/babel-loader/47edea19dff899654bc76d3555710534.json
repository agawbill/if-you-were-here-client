{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js\";\nimport React, { useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport LoadMoreContainer from \"../LoadMoreContainer/LoadMoreContainer\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector(state => state.messages.messages);\n  const messagesError = useSelector(state => state.messages.error);\n  const {\n    who,\n    identity\n  } = useSelector(state => state.messages.filters);\n  const sort = useSelector(state => state.messages.sort);\n  const filteredMessages = useSelector(state => state.messages.filteredMessages);\n  const messagesLoading = useSelector(state => state.messages.loading);\n  let messageFilter = messages.length > 0 ? React.createElement(MessageFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : null;\n  let messagesContainer = messagesLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.slice(0, 14).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  } else {\n    messagesContainer = messages.slice(0, 14).map((message, index) => {\n      return React.createElement(MessageSnapshot, {\n        key: index,\n        entry: message,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    });\n  }\n\n  if (messagesError) {\n    messagesContainer = React.createElement(\"span\", {\n      style: {\n        fontColor: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sorry, an error has occurred and IT has been notified: messagesError\");\n  }\n\n  return React.createElement(React.Fragment, null, messageFilter, React.createElement(\"div\", {\n    className: styles.Messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, messagesContainer, React.createElement(LoadMoreContainer, {\n    messages: messages,\n    filteredMessages: filteredMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default Messages;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Messages/Messages.js"],"names":["React","useEffect","styles","useSelector","LoadMoreContainer","MessageSnapshot","MessageFilter","Spinner","Messages","messages","state","messagesError","error","who","identity","filters","sort","filteredMessages","messagesLoading","loading","messageFilter","length","messagesContainer","slice","map","message","index","fontColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,sDAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B;AACA,QAAME,aAAa,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeG,KAA3B,CAAjC;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeM,OAA3B,CAArC;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeO,IAA3B,CAAxB;AACA,QAAMC,gBAAgB,GAAGd,WAAW,CACjCO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeQ,gBADQ,CAApC;AAGA,QAAMC,eAAe,GAAGf,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeU,OAA3B,CAAnC;AAEA,MAAIC,aAAa,GAAGX,QAAQ,CAACY,MAAT,GAAkB,CAAlB,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAA0C,IAA9D;AAEA,MAAIC,iBAAiB,GAAGJ,eAAe,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IAAxD;;AAEA,MAAIL,GAAG,IAAIC,QAAP,IAAmBE,IAAvB,EAA6B;AAC3BM,IAAAA,iBAAiB,GAAGL,gBAAgB,CAACM,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,EAA8BC,GAA9B,CAAkC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACxE,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARmB,CAApB;AASD,GAVD,MAUO;AACLJ,IAAAA,iBAAiB,GAAGb,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChE,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,MAAM,EAAEC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARmB,CAApB;AASD;;AAED,MAAIf,aAAJ,EAAmB;AACjBW,IAAAA,iBAAiB,GACf;AAAM,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EADF;AAKD;;AAED,SACE,0CACGP,aADH,EAEE;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,iBADH,EAEE,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAEb,QADZ;AAEE,IAAA,gBAAgB,EAAEQ,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AAYD,CAxDD;;AA0DA,eAAeT,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport styles from \"./Messages.module.css\";\nimport { useSelector } from \"react-redux\";\nimport LoadMoreContainer from \"../LoadMoreContainer/LoadMoreContainer\";\nimport MessageSnapshot from \"../../components/MessageSnapshot/MessageSnapshot\";\nimport MessageFilter from \"../MessageFilter/MessageFilter\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\n\nconst Messages = () => {\n  const messages = useSelector((state) => state.messages.messages);\n  const messagesError = useSelector((state) => state.messages.error);\n  const { who, identity } = useSelector((state) => state.messages.filters);\n  const sort = useSelector((state) => state.messages.sort);\n  const filteredMessages = useSelector(\n    (state) => state.messages.filteredMessages\n  );\n  const messagesLoading = useSelector((state) => state.messages.loading);\n\n  let messageFilter = messages.length > 0 ? <MessageFilter /> : null;\n\n  let messagesContainer = messagesLoading ? <Spinner /> : null;\n\n  if (who || identity || sort) {\n    messagesContainer = filteredMessages.slice(0, 14).map((message, index) => {\n      return (\n        <MessageSnapshot\n          key={index}\n          entry={message}\n          marker={index}\n        ></MessageSnapshot>\n      );\n    });\n  } else {\n    messagesContainer = messages.slice(0, 14).map((message, index) => {\n      return (\n        <MessageSnapshot\n          key={index}\n          entry={message}\n          marker={index}\n        ></MessageSnapshot>\n      );\n    });\n  }\n\n  if (messagesError) {\n    messagesContainer = (\n      <span style={{ fontColor: \"red\" }}>\n        Sorry, an error has occurred and IT has been notified: messagesError\n      </span>\n    );\n  }\n\n  return (\n    <>\n      {messageFilter}\n      <div className={styles.Messages}>\n        {messagesContainer}\n        <LoadMoreContainer\n          messages={messages}\n          filteredMessages={filteredMessages}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}