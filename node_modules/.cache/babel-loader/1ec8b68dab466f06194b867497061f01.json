{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\"; // export let interceptor;\n\nconst withErrorHandler = WrappedComponent => {\n  return props => {\n    // const [error, setError] = useState(false);\n    // const [errorMessage, setErrorMessage] = useState(\"\");\n    const error = useSelector(state => state.messages.error) || useSelector(state => state.message.error) || useSelector(state => state.persons.error); // interceptor = (response) => {\n    //   setError(true);\n    //   setErrorMessage(`${response}`);\n    // };\n\n    let body = React.createElement(WrappedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n\n    if (error) {\n      body = React.createElement(React.Fragment, null, errorMessage);\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js"],"names":["React","useState","useEffect","useSelector","withErrorHandler","WrappedComponent","props","error","state","messages","message","persons","body","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AAEA,MAAMC,gBAAgB,GAAIC,gBAAD,IAAsB;AAC7C,SAAQC,KAAD,IAAW;AAChB;AACA;AACA,UAAMC,KAAK,GACTJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,KAA3B,CAAX,IACAJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACE,OAAN,CAAcH,KAA1B,CADX,IAEAJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACG,OAAN,CAAcJ,KAA1B,CAHb,CAHgB,CAQhB;AACA;AACA;AACA;;AAEA,QAAIK,IAAI,GAAG,oBAAC,gBAAD,oBAAsBN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAEA,QAAIC,KAAJ,EAAW;AACTK,MAAAA,IAAI,GAAG,0CAAGC,YAAH,CAAP;AACD;;AAED,WAAOD,IAAP;AACD,GApBD;AAqBD,CAtBD;;AAwBA,eAAeR,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// export let interceptor;\n\nconst withErrorHandler = (WrappedComponent) => {\n  return (props) => {\n    // const [error, setError] = useState(false);\n    // const [errorMessage, setErrorMessage] = useState(\"\");\n    const error =\n      useSelector((state) => state.messages.error) ||\n      useSelector((state) => state.message.error) ||\n      useSelector((state) => state.persons.error);\n\n    // interceptor = (response) => {\n    //   setError(true);\n    //   setErrorMessage(`${response}`);\n    // };\n\n    let body = <WrappedComponent {...props} />;\n\n    if (error) {\n      body = <>{errorMessage}</>;\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}