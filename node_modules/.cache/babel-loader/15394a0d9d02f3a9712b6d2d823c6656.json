{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/containers/Cockpit/Cockpit.js\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getPersons, fetchMessages } from \"../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\nconst Landing = React.lazy(() => import(\"../../components/Landing/Landing\"));\nconst FullMessage = React.lazy(() => import(\"../../components/FullMessage/FullMessage\"));\n\nconst Cockpit = props => {\n  const dispatch = useDispatch();\n  const personsLoading = useSelector(state => state.persons.loading);\n  const messagesLoading = useSelector(state => state.messages.loading);\n  useEffect(() => {\n    dispatch(getPersons());\n    dispatch(fetchMessages());\n  }, [dispatch]);\n  let cockpitBody = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n\n  if (!personsLoading && !messagesLoading) {\n    cockpitBody = React.createElement(Suspense, {\n      fallback: React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/message/:id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(ContentContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(FullMessage, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })))), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Landing, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })))));\n  }\n\n  return cockpitBody;\n};\n\nexport default Cockpit;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/Cockpit/Cockpit.js"],"names":["React","useEffect","Suspense","Route","Switch","getPersons","fetchMessages","useDispatch","useSelector","Spinner","ContentContainer","Landing","lazy","FullMessage","Cockpit","props","dispatch","personsLoading","state","persons","loading","messagesLoading","messages","cockpitBody"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,sDAApB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AAEA,MAAMC,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAW,MAAM,OAAO,kCAAP,CAAjB,CAAhB;AACA,MAAMC,WAAW,GAAGb,KAAK,CAACY,IAAN,CAAW,MAC7B,OAAO,0CAAP,CADkB,CAApB;;AAIA,MAAME,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,cAAc,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,OAA1B,CAAlC;AACA,QAAMC,eAAe,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACI,QAAN,CAAeF,OAA3B,CAAnC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACAW,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AACD,GAHQ,EAGN,CAACU,QAAD,CAHM,CAAT;AAKA,MAAIO,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB;;AAEA,MAAI,CAACN,cAAD,IAAmB,CAACI,eAAxB,EAAyC;AACvCE,IAAAA,WAAW,GACT,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD,oBAAiBR,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,EAME,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CANF,CADF,CADF;AAcD;;AAED,SAAOQ,WAAP;AACD,CA9BD;;AAgCA,eAAeT,OAAf","sourcesContent":["import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getPersons, fetchMessages } from \"../../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\n\nconst Landing = React.lazy(() => import(\"../../components/Landing/Landing\"));\nconst FullMessage = React.lazy(() =>\n  import(\"../../components/FullMessage/FullMessage\")\n);\n\nconst Cockpit = (props) => {\n  const dispatch = useDispatch();\n  const personsLoading = useSelector((state) => state.persons.loading);\n  const messagesLoading = useSelector((state) => state.messages.loading);\n\n  useEffect(() => {\n    dispatch(getPersons());\n    dispatch(fetchMessages());\n  }, [dispatch]);\n\n  let cockpitBody = <Spinner />;\n\n  if (!personsLoading && !messagesLoading) {\n    cockpitBody = (\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <Route exact path=\"/message/:id\">\n            <ContentContainer>\n              <FullMessage {...props} />\n            </ContentContainer>\n          </Route>\n          <Route exact path=\"/\">\n            <Landing {...props} />\n          </Route>\n        </Switch>\n      </Suspense>\n    );\n  }\n\n  return cockpitBody;\n};\n\nexport default Cockpit;\n"]},"metadata":{},"sourceType":"module"}