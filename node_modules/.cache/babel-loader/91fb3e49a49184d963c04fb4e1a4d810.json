{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const fetchMessage = messageId => {\n  return async dispatch => {\n    try {\n      dispatch(fetchMessageStart());\n      const response = await fetch(`/api/messages/${messageId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n\n      if (!data.success) {\n        throw new Error();\n      }\n\n      dispatch(fetchMessageSuccess(data.data));\n    } catch (err) {\n      dispatch(fetchMessageFail(\"Either this message doesn't exist or has been deleted.\"));\n    }\n  };\n};\nexport const fetchMessageStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_START\n  };\n};\nexport const fetchMessageSuccess = message => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_SUCCESS,\n    message\n  };\n};\nexport const fetchMessageFail = error => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_FAIL,\n    error\n  };\n};\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/message.js"],"names":["actionTypes","fetchMessage","messageId","dispatch","fetchMessageStart","response","fetch","method","mode","cache","credentials","headers","data","json","success","Error","fetchMessageSuccess","err","fetchMessageFail","type","FETCH_MESSAGE_START","message","FETCH_MESSAGE_SUCCESS","error","FETCH_MESSAGE_FAIL","resetMessage","RESET_MESSAGE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAe;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBJ,SAAU,EAA5B,EAA+B;AACzDK,QAAAA,MAAM,EAAE,KADiD;AAEzDC,QAAAA,IAAI,EAAE,MAFmD;AAGzDC,QAAAA,KAAK,EAAE,UAHkD;AAIzDC,QAAAA,WAAW,EAAE,aAJ4C;AAKzDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALgD,OAA/B,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,UAAI,CAACD,IAAI,CAACE,OAAV,EAAmB;AACjB,cAAM,IAAIC,KAAJ,EAAN;AACD;;AACDZ,MAAAA,QAAQ,CAACa,mBAAmB,CAACJ,IAAI,CAACA,IAAN,CAApB,CAAR;AACD,KAhBD,CAgBE,OAAOK,GAAP,EAAY;AACZd,MAAAA,QAAQ,CACNe,gBAAgB,CACd,wDADc,CADV,CAAR;AAKD;AACF,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMd,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLe,IAAAA,IAAI,EAAEnB,WAAW,CAACoB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,mBAAmB,GAAIK,OAAD,IAAa;AAC9C,SAAO;AACLF,IAAAA,IAAI,EAAEnB,WAAW,CAACsB,qBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMH,gBAAgB,GAAIK,KAAD,IAAW;AACzC,SAAO;AACLJ,IAAAA,IAAI,EAAEnB,WAAW,CAACwB,kBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAO;AACLN,IAAAA,IAAI,EAAEnB,WAAW,CAAC0B;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessage = (messageId) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessageStart());\n      const response = await fetch(`/api/messages/${messageId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error();\n      }\n      dispatch(fetchMessageSuccess(data.data));\n    } catch (err) {\n      dispatch(\n        fetchMessageFail(\n          \"Either this message doesn't exist or has been deleted.\"\n        )\n      );\n    }\n  };\n};\n\nexport const fetchMessageStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_START,\n  };\n};\n\nexport const fetchMessageSuccess = (message) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const fetchMessageFail = (error) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_FAIL,\n    error,\n  };\n};\n\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}