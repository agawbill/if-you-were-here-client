{"ast":null,"code":"import React from\"react\";import styles from\"./FormButton.module.css\";var FormButton=function FormButton(props){var buttonText=null;switch(props.type){case\"next\":buttonText=\"Next\";break;case\"prev\":buttonText=\"Previous\";break;case\"submit\":buttonText=\"Submit\";break;default:break;}var buttonBody=React.createElement(\"span\",{className:!props.validated&&props.type!==\"prev\"?styles.ButtonInactive:styles.Button,onClick:function onClick(){if(!props.validated&&props.type!==\"prev\"){return;}props.switchHandler(props.type,props.name,props.formValue);}},buttonText);return React.createElement(React.Fragment,null,buttonBody);};export default FormButton;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/UI/Buttons/FormButton/FormButton.js"],"names":["React","styles","FormButton","props","buttonText","type","buttonBody","validated","ButtonInactive","Button","switchHandler","name","formValue"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAIC,CAAAA,UAAU,CAAG,IAAjB,CACA,OAAQD,KAAK,CAACE,IAAd,EACE,IAAK,MAAL,CACED,UAAU,CAAG,MAAb,CACA,MACF,IAAK,MAAL,CACEA,UAAU,CAAG,UAAb,CACA,MACF,IAAK,QAAL,CACEA,UAAU,CAAG,QAAb,CACA,MACF,QACE,MAXJ,CAcA,GAAIE,CAAAA,UAAU,CACZ,4BACE,SAAS,CACP,CAACH,KAAK,CAACI,SAAP,EAAoBJ,KAAK,CAACE,IAAN,GAAe,MAAnC,CACIJ,MAAM,CAACO,cADX,CAEIP,MAAM,CAACQ,MAJf,CAME,OAAO,CAAE,kBAAM,CACb,GAAI,CAACN,KAAK,CAACI,SAAP,EAAoBJ,KAAK,CAACE,IAAN,GAAe,MAAvC,CAA+C,CAC7C,OACD,CACDF,KAAK,CAACO,aAAN,CAAoBP,KAAK,CAACE,IAA1B,CAAgCF,KAAK,CAACQ,IAAtC,CAA4CR,KAAK,CAACS,SAAlD,EACD,CAXH,EAaGR,UAbH,CADF,CAkBA,MAAO,yCAAGE,UAAH,CAAP,CACD,CAnCD,CAqCA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./FormButton.module.css\";\n\nconst FormButton = (props) => {\n  let buttonText = null;\n  switch (props.type) {\n    case \"next\":\n      buttonText = \"Next\";\n      break;\n    case \"prev\":\n      buttonText = \"Previous\";\n      break;\n    case \"submit\":\n      buttonText = \"Submit\";\n      break;\n    default:\n      break;\n  }\n\n  let buttonBody = (\n    <span\n      className={\n        !props.validated && props.type !== \"prev\"\n          ? styles.ButtonInactive\n          : styles.Button\n      }\n      onClick={() => {\n        if (!props.validated && props.type !== \"prev\") {\n          return;\n        }\n        props.switchHandler(props.type, props.name, props.formValue);\n      }}\n    >\n      {buttonText}\n    </span>\n  );\n\n  return <>{buttonBody}</>;\n};\n\nexport default FormButton;\n"]},"metadata":{},"sourceType":"module"}