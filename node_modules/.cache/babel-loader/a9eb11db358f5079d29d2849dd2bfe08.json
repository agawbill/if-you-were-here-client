{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/Message/Message.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/Button/Button\";\nimport styles from \"./Message.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\"; // import Editor from \"react-medium-editor\";\n\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nconst Message = props => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n\n  const handleChange = (text, medium) => {\n    console.log(medium);\n    setMessageAnswer(text);\n  };\n\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"My message ...\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    apiKey: \"ulzlzwd1vwer6c373nxfqmeq3tejpex1ximmhkpuw91l8dlb\",\n    tagName: styles.MessageContent,\n    value: messageAnswer,\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n      toolbar: \"undo redo | bold italic backcolor | \\\n             bullist numlist outdent indent |\"\n    },\n    onEditorChange: handleEditorChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"prev\",\n    switchHandler: props.switchHandler,\n    name: \"message\",\n    formValue: messageAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"next\",\n    switchHandler: props.switchHandler,\n    name: \"message\",\n    validated: messageAnswer !== \"\" && messageAnswer.trim().indexOf(\" \") !== -1,\n    formValue: messageAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nexport default Message;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/Message/Message.js"],"names":["React","useState","useEffect","Button","styles","Form","Editor","Message","props","messageAnswer","setMessageAnswer","handleChange","text","medium","console","log","messageValue","MessageContent","height","menubar","plugins","toolbar","handleEditorChange","switchHandler","trim","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,0CAAP;AACA,OAAO,2CAAP,C,CACA;;AAEA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAH,IAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAMQ,gBAAgB,CAACF,KAAK,CAACQ,YAAP,CAAvB,EAA6C,CAACR,KAAK,CAACQ,YAAP,CAA7C,CAAT;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,kDADT;AAEE,IAAA,OAAO,EAAEZ,MAAM,CAACa,cAFlB;AAGE,IAAA,KAAK,EAAER,aAHT;AAIE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,GADJ;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,OAAO,EAAE,CACP,gEADO,EAEP,4CAFO,EAGP,sDAHO,CAHL;AAQJC,MAAAA,OAAO,EACL;;AATE,KAJR;AAgBE,IAAA,cAAc,EAAEC,kBAhBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAqCE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,aAAa,EAAEd,KAAK,CAACe,aAFvB;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,SAAS,EAAEd,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,EA2CE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,aAAa,EAAED,KAAK,CAACe,aAFvB;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,SAAS,EACPd,aAAa,KAAK,EAAlB,IAAwBA,aAAa,CAACe,IAAd,GAAqBC,OAArB,CAA6B,GAA7B,MAAsC,CAAC,CALnE;AAOE,IAAA,SAAS,EAAEhB,aAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,CAFF,CADF;AA0DD,CArED;;AAuEA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/Button/Button\";\nimport styles from \"./Message.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\n// import Editor from \"react-medium-editor\";\n\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nconst Message = props => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n\n  const handleChange = (text, medium) => {\n    console.log(medium);\n\n    setMessageAnswer(text);\n  };\n\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n\n  return (\n    <>\n      <h3>My message ...</h3>\n      <div>\n        {/* <Editor\n          tag=\"div\"\n          text={messageAnswer}\n          onChange={handleChange}\n          options={{ toolbar: { buttons: [\"bold\", \"italic\", \"underline\"] } }}\n        /> */}\n\n        <Editor\n          apiKey=\"ulzlzwd1vwer6c373nxfqmeq3tejpex1ximmhkpuw91l8dlb\"\n          tagName={styles.MessageContent}\n          value={messageAnswer}\n          init={{\n            height: 500,\n            menubar: false,\n            plugins: [\n              \"advlist autolink lists link image charmap print preview anchor\",\n              \"searchreplace visualblocks code fullscreen\",\n              \"insertdatetime media table paste code help wordcount\"\n            ],\n            toolbar:\n              \"undo redo | bold italic backcolor | \\\n             bullist numlist outdent indent |\"\n          }}\n          onEditorChange={handleEditorChange}\n        />\n        {/* <Form>\n          <Form.Group controlId=\"MessageContent\">\n            <Form.Control\n              onChange={event => setMessageAnswer(event.target.value)}\n              as=\"textarea\"\n              rows=\"10\"\n              className={styles.MessageContent}\n              value={messageAnswer}\n            />\n          </Form.Group>\n        </Form> */}\n        <Button\n          type=\"prev\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          formValue={messageAnswer}\n        />\n        <Button\n          type=\"next\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          validated={\n            messageAnswer !== \"\" && messageAnswer.trim().indexOf(\" \") !== -1\n          }\n          formValue={messageAnswer}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}