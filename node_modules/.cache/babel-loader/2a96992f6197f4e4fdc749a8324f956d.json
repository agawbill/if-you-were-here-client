{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/FilterOptions/FilterOption/FilterOption.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./FilterOption.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter, removeFilter } from \"../../../store/actions\"; // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FilterOption = props => {\n  const [selected, setSelected] = useState(false);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const dispatch = useDispatch();\n\n  const selectHandler = () => {\n    setSelected(prevState => !prevState);\n  };\n\n  const {\n    filter,\n    filterHandler,\n    name\n  } = props;\n  useEffect(() => {\n    filterHandler(selected);\n\n    if (!selected && filteredPosts.length > 0) {\n      dispatch(removeFilter(filter, name));\n    } else if (selected) {\n      dispatch(addFilter(filter, name));\n    }\n\n    if (!selected && filteredPosts.length > 0) {\n      dispatch(removeFilter(props.filter, props.name));\n    } else if (selected) {\n      dispatch(addFilter(props.filter, props.name));\n    }\n  }, [selected]);\n  return React.createElement(\"div\", {\n    className: selected ? styles.FilterOptionSelected : styles.FilterOption,\n    onClick: () => selectHandler(),\n    value: \"bingo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.filter);\n};\n\nexport default FilterOption;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/FilterOptions/FilterOption/FilterOption.js"],"names":["React","useState","useEffect","styles","useDispatch","useSelector","addFilter","removeFilter","FilterOption","props","selected","setSelected","filteredPosts","state","dispatch","selectHandler","prevState","filter","filterHandler","name","length","FilterOptionSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,wBAAxC,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMW,aAAa,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AACA,QAAMW,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,WAAW,CAACK,SAAS,IAAI,CAACA,SAAf,CAAX;AACD,GAFD;;AAGA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA;AAAzB,MAAkCV,KAAxC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACR,QAAD,CAAb;;AACA,QAAI,CAACA,QAAD,IAAaE,aAAa,CAACQ,MAAd,GAAuB,CAAxC,EAA2C;AACzCN,MAAAA,QAAQ,CAACP,YAAY,CAACU,MAAD,EAASE,IAAT,CAAb,CAAR;AACD,KAFD,MAEO,IAAIT,QAAJ,EAAc;AACnBI,MAAAA,QAAQ,CAACR,SAAS,CAACW,MAAD,EAASE,IAAT,CAAV,CAAR;AACD;;AACD,QAAI,CAACT,QAAD,IAAaE,aAAa,CAACQ,MAAd,GAAuB,CAAxC,EAA2C;AACzCN,MAAAA,QAAQ,CAACP,YAAY,CAACE,KAAK,CAACQ,MAAP,EAAeR,KAAK,CAACU,IAArB,CAAb,CAAR;AACD,KAFD,MAEO,IAAIT,QAAJ,EAAc;AACnBI,MAAAA,QAAQ,CAACR,SAAS,CAACG,KAAK,CAACQ,MAAP,EAAeR,KAAK,CAACU,IAArB,CAAV,CAAR;AACD;AACF,GAZQ,EAYN,CAACT,QAAD,CAZM,CAAT;AAcA,SACE;AACE,IAAA,SAAS,EAAEA,QAAQ,GAAGP,MAAM,CAACkB,oBAAV,GAAiClB,MAAM,CAACK,YAD7D;AAEE,IAAA,OAAO,EAAE,MAAMO,aAAa,EAF9B;AAGE,IAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,KAAK,CAACQ,MALT,CADF;AASD,CAhCD;;AAkCA,eAAeT,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./FilterOption.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter, removeFilter } from \"../../../store/actions\";\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FilterOption = props => {\n  const [selected, setSelected] = useState(false);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const dispatch = useDispatch();\n  const selectHandler = () => {\n    setSelected(prevState => !prevState);\n  };\n  const { filter, filterHandler, name } = props;\n\n  useEffect(() => {\n    filterHandler(selected);\n    if (!selected && filteredPosts.length > 0) {\n      dispatch(removeFilter(filter, name));\n    } else if (selected) {\n      dispatch(addFilter(filter, name));\n    }\n    if (!selected && filteredPosts.length > 0) {\n      dispatch(removeFilter(props.filter, props.name));\n    } else if (selected) {\n      dispatch(addFilter(props.filter, props.name));\n    }\n  }, [selected]);\n\n  return (\n    <div\n      className={selected ? styles.FilterOptionSelected : styles.FilterOption}\n      onClick={() => selectHandler()}\n      value=\"bingo\"\n    >\n      {props.filter}\n    </div>\n  );\n};\n\nexport default FilterOption;\n"]},"metadata":{},"sourceType":"module"}