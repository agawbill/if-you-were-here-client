{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  filteredPosts: [],\n  filters: {\n    who: null,\n    identity: null\n  },\n  sort: {\n    newest: false,\n    oldest: false\n  },\n  success: false,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_POST_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.SUBMIT_POST_SUCCESS:\n      return { ...state,\n        posts: [action.post, ...state.posts],\n        success: true,\n        loading: true\n      };\n\n    case actionTypes.SUBMIT_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.SUBMIT_POST_RESET:\n      return { ...state,\n        loading: false,\n        error: null,\n        success: false\n      };\n\n    case actionTypes.FILTER_POSTS_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FILTER_POSTS_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.FILTER_POSTS_ADD:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: action.filter\n        }\n      };\n\n    case actionTypes.FILTER_POSTS_REMOVE:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: null\n        }\n      };\n\n    case actionTypes.FILTER_POSTS:\n      const {\n        who,\n        identity\n      } = state.filters; // const filteredKeys = filtersCopy.forEach(filter => {\n      //   const [...key] = Object.keys(filter);\n      // });\n\n      const postsCopy = [...state.posts];\n      const newFilteredPosts = who && identity ? postsCopy.filter(post => post.who === who && post.identity === identity) : postsCopy.filter(post => post.who === who || post.identity === identity);\n      return { ...state,\n        filteredPosts: [...newFilteredPosts],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.FILTER_RESET:\n      return { ...state,\n        filteredPosts: [],\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/store/reducers/posts.js"],"names":["actionTypes","initialState","posts","currentPost","filteredPosts","filters","who","identity","sort","newest","oldest","success","loading","error","reducer","state","action","type","SUBMIT_POST_START","SUBMIT_POST_SUCCESS","post","SUBMIT_POST_FAIL","SUBMIT_POST_RESET","FILTER_POSTS_START","FILTER_POSTS_FAIL","FILTER_POSTS_ADD","name","filter","FILTER_POSTS_REMOVE","FILTER_POSTS","postsCopy","newFilteredPosts","FILTER_RESET"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  currentPost: null,\n  filteredPosts: [],\n  filters: { who: null, identity: null },\n  sort: { newest: false, oldest: false },\n  success: false,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_POST_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.SUBMIT_POST_SUCCESS:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n        success: true,\n        loading: true\n      };\n    case actionTypes.SUBMIT_POST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.SUBMIT_POST_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        success: false\n      };\n    case actionTypes.FILTER_POSTS_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actionTypes.FILTER_POSTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.FILTER_POSTS_ADD:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.filter\n        }\n      };\n    case actionTypes.FILTER_POSTS_REMOVE:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: null\n        }\n      };\n    case actionTypes.FILTER_POSTS:\n      const { who, identity } = state.filters;\n\n      // const filteredKeys = filtersCopy.forEach(filter => {\n      //   const [...key] = Object.keys(filter);\n      // });\n      const postsCopy = [...state.posts];\n      const newFilteredPosts =\n        who && identity\n          ? postsCopy.filter(\n              post => post.who === who && post.identity === identity\n            )\n          : postsCopy.filter(\n              post => post.who === who || post.identity === identity\n            );\n\n      return {\n        ...state,\n        filteredPosts: [...newFilteredPosts],\n        loading: false,\n        error: null\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredPosts: [],\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}