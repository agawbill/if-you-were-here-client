{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  messages: [],\n  filteredMessages: [],\n  filters: {\n    who: null,\n    identity: null\n  },\n  sort: null,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGES_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FETCH_MESSAGES_SUCCESS:\n      return { ...state,\n        messages: [state.messages, ...action.messages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.FETCH_MESSAGES_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n    //filter & sort logic below-- has to be in this reducer as it needs to be in same scope as messages\n\n    case actionTypes.FILTER_MESSAGES_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.FILTER_MESSAGES_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.FILTER_MESSAGES_ADD:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: action.filter\n        }\n      };\n\n    case actionTypes.FILTER_MESSAGES_REMOVE:\n      return { ...state,\n        filters: { ...state.filters,\n          [action.name]: null\n        }\n      };\n\n    case actionTypes.FILTER_MESSAGES:\n      const {\n        who,\n        identity\n      } = state.filters;\n      const messagesCopy = [...state.messages];\n      const newFilteredMessages = who && identity ? messagesCopy.filter(message => message.who.name === who && message.identity.name === identity) : messagesCopy.filter(message => message.who.name === who || message.identity.name === identity);\n      return { ...state,\n        filteredMessages: [...newFilteredMessages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.FILTER_RESET:\n      return { ...state,\n        filteredMessages: [],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.SORT_MESSAGES_START:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionTypes.SORT_MESSAGES_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionTypes.SORT_MESSAGES_ADD:\n      return { ...state,\n        sort: action.filter\n      };\n\n    case actionTypes.SORT_MESSAGES_REMOVE:\n      return { ...state,\n        sort: false\n      };\n\n    case actionTypes.SORT_MESSAGES:\n      const filteredCopy = action.filtered ? [...state.filteredMessages] : [...state.messages];\n      const sortedMessages = state.sort === \"Oldest\" ? filteredCopy.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt)) : filteredCopy.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      return { ...state,\n        filteredMessages: [...sortedMessages],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.SORT_RESET:\n      return { ...state,\n        sort: null,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/reducers/messages.js"],"names":["actionTypes","initialState","messages","filteredMessages","filters","who","identity","sort","loading","error","reducer","state","action","type","FETCH_MESSAGES_START","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_FAIL","FILTER_MESSAGES_START","FILTER_MESSAGES_FAIL","FILTER_MESSAGES_ADD","name","filter","FILTER_MESSAGES_REMOVE","FILTER_MESSAGES","messagesCopy","newFilteredMessages","message","FILTER_RESET","SORT_MESSAGES_START","SORT_MESSAGES_FAIL","SORT_MESSAGES_ADD","SORT_MESSAGES_REMOVE","SORT_MESSAGES","filteredCopy","filtered","sortedMessages","a","b","Date","createdAt","SORT_RESET"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  messages: [],\n  filteredMessages: [],\n  filters: { who: null, identity: null },\n  sort: null,\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: [state.messages, ...action.messages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    //filter & sort logic below-- has to be in this reducer as it needs to be in same scope as messages\n    case actionTypes.FILTER_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FILTER_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.FILTER_MESSAGES_ADD:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.filter,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES_REMOVE:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: null,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES:\n      const { who, identity } = state.filters;\n      const messagesCopy = [...state.messages];\n      const newFilteredMessages =\n        who && identity\n          ? messagesCopy.filter(\n              (message) =>\n                message.who.name === who && message.identity.name === identity\n            )\n          : messagesCopy.filter(\n              (message) =>\n                message.who.name === who || message.identity.name === identity\n            );\n      return {\n        ...state,\n        filteredMessages: [...newFilteredMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredMessages: [],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.SORT_MESSAGES_ADD:\n      return {\n        ...state,\n        sort: action.filter,\n      };\n    case actionTypes.SORT_MESSAGES_REMOVE:\n      return {\n        ...state,\n        sort: false,\n      };\n    case actionTypes.SORT_MESSAGES:\n      const filteredCopy = action.filtered\n        ? [...state.filteredMessages]\n        : [...state.messages];\n      const sortedMessages =\n        state.sort === \"Oldest\"\n          ? filteredCopy.sort(\n              (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\n            )\n          : filteredCopy.sort(\n              (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n            );\n      return {\n        ...state,\n        filteredMessages: [...sortedMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_RESET:\n      return {\n        ...state,\n        sort: null,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}