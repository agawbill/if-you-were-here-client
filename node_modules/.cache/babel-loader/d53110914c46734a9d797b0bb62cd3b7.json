{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/FilterOptions/FilterOption/FilterOption.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./FilterOption.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter, removeFilter } from \"../../../store/actions\"; // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FilterOption = props => {\n  const [selected, setSelected] = useState(false); // const filteredPosts = useSelector(state => state.filteredPosts);\n  // const dispatch = useDispatch();\n\n  const selectHandler = (selected, filter, name) => {\n    setSelected(prevState => !prevState);\n  }; // const { filter } = props;\n\n\n  console.log(\"filter\"); // useEffect(() => {\n  // filterHandler(selected);\n  // if (!selected && filteredPosts.length > 0) {\n  //   console.log(\"not selected\");\n  //   dispatch(removeFilter(filter, name));\n  // } else if (selected) {\n  //   dispatch(addFilter(filter, name));\n  // }\n  // if (!selected && filteredPosts.length > 0) {\n  //   dispatch(removeFilter(props.filter, props.name));\n  // } else if (selected) {\n  //   dispatch(addFilter(props.filter, props.name));\n  // }\n  // }, [selected]);\n\n  return React.createElement(\"div\", {\n    className: selected ? styles.FilterOptionSelected : styles.FilterOption,\n    onClick: () => selectHandler(selected),\n    value: \"bingo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.filter);\n};\n\nexport default FilterOption;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/FilterOptions/FilterOption/FilterOption.js"],"names":["React","useState","useEffect","styles","useDispatch","useSelector","addFilter","removeFilter","FilterOption","props","selected","setSelected","selectHandler","filter","name","prevState","console","log","FilterOptionSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,wBAAxC,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC,CAD4B,CAE5B;AACA;;AACA,QAAMW,aAAa,GAAG,CAACF,QAAD,EAAWG,MAAX,EAAmBC,IAAnB,KAA4B;AAChDH,IAAAA,WAAW,CAACI,SAAS,IAAI,CAACA,SAAf,CAAX;AACD,GAFD,CAJ4B,CAO5B;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAR4B,CAU5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AACE,IAAA,SAAS,EAAEP,QAAQ,GAAGP,MAAM,CAACe,oBAAV,GAAiCf,MAAM,CAACK,YAD7D;AAEE,IAAA,OAAO,EAAE,MAAMI,aAAa,CAACF,QAAD,CAF9B;AAGE,IAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,KAAK,CAACI,MALT,CADF;AASD,CAlCD;;AAoCA,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./FilterOption.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter, removeFilter } from \"../../../store/actions\";\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FilterOption = props => {\n  const [selected, setSelected] = useState(false);\n  // const filteredPosts = useSelector(state => state.filteredPosts);\n  // const dispatch = useDispatch();\n  const selectHandler = (selected, filter, name) => {\n    setSelected(prevState => !prevState);\n  };\n  // const { filter } = props;\n  console.log(\"filter\");\n\n  // useEffect(() => {\n  // filterHandler(selected);\n  // if (!selected && filteredPosts.length > 0) {\n  //   console.log(\"not selected\");\n  //   dispatch(removeFilter(filter, name));\n  // } else if (selected) {\n  //   dispatch(addFilter(filter, name));\n  // }\n  // if (!selected && filteredPosts.length > 0) {\n  //   dispatch(removeFilter(props.filter, props.name));\n  // } else if (selected) {\n  //   dispatch(addFilter(props.filter, props.name));\n  // }\n  // }, [selected]);\n\n  return (\n    <div\n      className={selected ? styles.FilterOptionSelected : styles.FilterOption}\n      onClick={() => selectHandler(selected)}\n      value=\"bingo\"\n    >\n      {props.filter}\n    </div>\n  );\n};\n\nexport default FilterOption;\n"]},"metadata":{},"sourceType":"module"}