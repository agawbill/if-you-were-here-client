{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/MessageSnapshot/MessageSnapshot.js\";\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nimport { withRouter } from \"react-router-dom\";\nimport styles from \"./MessageSnapshot.module.css\";\n\nconst MessageSnapshot = props => {\n  const selectorHandler = () => {\n    props.history.push({\n      pathname: `/message/${props.entry._id}`,\n      passedMessage: props.entry\n    });\n  };\n\n  const summaryMessage = (message, count) => {\n    const newBody = message.split(\" \");\n    if (newBody.length <= count) return message;\n    const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n    const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n    if (punctuation.indexOf(lastEl) !== -1) return `${newBody.slice(0, count + 1).join(\" \")}...`;\n    return `${newBody.slice(0, count).join(\" \")}...`;\n  };\n\n  let divider = props.marker === 0 ? null : React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  const date = new Date(props.entry.createdAt);\n  const fullDate = `${date.getMonth()}-${date.getDay()}-${date.getTime()}`;\n  return React.createElement(React.Fragment, null, divider, React.createElement(\"div\", {\n    className: styles.Message,\n    onClick: () => selectorHandler(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"To my\", \" \", React.createElement(\"span\", {\n    className: styles.MessageAttribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", props.entry.who.name), \",\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: styles.MessageDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, fullDate)), React.createElement(\"span\", {\n    className: styles.MessageMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, parse(summaryMessage(props.entry.message, 100))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"From your\", \" \", React.createElement(\"span\", {\n    className: styles.MessageAttribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.entry.identity.name))));\n};\n\nexport default withRouter(MessageSnapshot);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/MessageSnapshot/MessageSnapshot.js"],"names":["React","parse","withRouter","styles","MessageSnapshot","props","selectorHandler","history","push","pathname","entry","_id","passedMessage","summaryMessage","message","count","newBody","split","length","lastEl","slice","punctuation","indexOf","join","divider","marker","date","Date","createdAt","fullDate","getMonth","getDay","getTime","Message","MessageAttribute","who","name","MessageDate","MessageMessage","identity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport parse from \"html-react-parser\";\nimport { withRouter } from \"react-router-dom\";\nimport styles from \"./MessageSnapshot.module.css\";\n\nconst MessageSnapshot = (props) => {\n  const selectorHandler = () => {\n    props.history.push({\n      pathname: `/message/${props.entry._id}`,\n      passedMessage: props.entry,\n    });\n  };\n\n  const summaryMessage = (message, count) => {\n    const newBody = message.split(\" \");\n\n    if (newBody.length <= count) return message;\n\n    const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n    const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n\n    if (punctuation.indexOf(lastEl) !== -1)\n      return `${newBody.slice(0, count + 1).join(\" \")}...`;\n\n    return `${newBody.slice(0, count).join(\" \")}...`;\n  };\n\n  let divider = props.marker === 0 ? null : <hr />;\n\n  const date = new Date(props.entry.createdAt);\n\n  const fullDate = `${date.getMonth()}-${date.getDay()}-${date.getTime()}`;\n\n  return (\n    <>\n      {divider}\n      <div className={styles.Message} onClick={() => selectorHandler()}>\n        <p>\n          To my{\" \"}\n          <span className={styles.MessageAttribute}>\n            {\" \"}\n            {props.entry.who.name}\n          </span>\n          ,\n          <br />\n          <span className={styles.MessageDate}>{fullDate}</span>\n        </p>\n        <span className={styles.MessageMessage}>\n          {parse(summaryMessage(props.entry.message, 100))}\n        </span>\n        <p>\n          From your{\" \"}\n          <span className={styles.MessageAttribute}>\n            {props.entry.identity.name}\n          </span>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(MessageSnapshot);\n"]},"metadata":{},"sourceType":"module"}