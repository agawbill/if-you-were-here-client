{"ast":null,"code":"import * as actionTypes from \"./actionTypes\"; // import { interceptor } from \"../../hoc/withErrorHandler\";\n\nexport const fetchMessages = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      dispatch(fetchMessagesSuccess(data));\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchMessagesFail(err)); // interceptor(err);\n    }\n  };\n};\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START\n  };\n};\nexport const fetchMessagesSuccess = messages => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages\n  };\n};\nexport const fetchMessagesFail = error => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FAIL,\n    error\n  };\n};\nexport const fetchMessagesReset = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FAIL,\n    error\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/messages.js"],"names":["actionTypes","fetchMessages","dispatch","fetchMessagesStart","response","fetch","method","mode","cache","credentials","headers","data","json","console","log","fetchMessagesSuccess","err","fetchMessagesFail","type","FETCH_MESSAGES_START","messages","FETCH_MESSAGES_SUCCESS","error","FETCH_MESSAGES_FAIL","fetchMessagesReset"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AAC5CC,QAAAA,MAAM,EAAE,KADoC;AAE5CC,QAAAA,IAAI,EAAE,MAFsC;AAG5CC,QAAAA,KAAK,EAAE,UAHqC;AAI5CC,QAAAA,WAAW,EAAE,aAJ+B;AAK5CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALmC,OAAlB,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAT,MAAAA,QAAQ,CAACa,oBAAoB,CAACJ,IAAD,CAArB,CAAR;AACD,KAfD,CAeE,OAAOK,GAAP,EAAY;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAEAd,MAAAA,QAAQ,CAACe,iBAAiB,CAACD,GAAD,CAAlB,CAAR,CAHY,CAIZ;AACD;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMb,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLe,IAAAA,IAAI,EAAElB,WAAW,CAACmB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,oBAAoB,GAAIK,QAAD,IAAc;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAElB,WAAW,CAACqB,sBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMH,iBAAiB,GAAIK,KAAD,IAAW;AAC1C,SAAO;AACLJ,IAAAA,IAAI,EAAElB,WAAW,CAACuB,mBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLN,IAAAA,IAAI,EAAElB,WAAW,CAACuB,mBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n// import { interceptor } from \"../../hoc/withErrorHandler\";\n\nexport const fetchMessages = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      console.log(data);\n\n      dispatch(fetchMessagesSuccess(data));\n    } catch (err) {\n      console.log(err);\n\n      dispatch(fetchMessagesFail(err));\n      // interceptor(err);\n    }\n  };\n};\n\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START,\n  };\n};\n\nexport const fetchMessagesSuccess = (messages) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n  };\n};\n\nexport const fetchMessagesFail = (error) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FAIL,\n    error,\n  };\n};\n\nexport const fetchMessagesReset = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FAIL,\n    error,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}