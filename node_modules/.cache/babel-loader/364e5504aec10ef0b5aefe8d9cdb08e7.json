{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/components/Post/Post.js\";\nimport React from \"react\";\nimport styles from \"./Post.module.css\";\n\nconst Post = props => {\n  // const summaryPost = (open, currentPost, message, count) => {\n  //   if (open && currentPost === message) return message;\n  //   const newBody =\n  //     message.indexOf(\" \") === -1 ? message.split(\"\") : message.split(\" \");\n  //   if (newBody.length < count) {\n  //     const joinedBody=\n  //     return newBody.join(\" \");\n  //   } else if()\n  //   const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n  //   const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n  //   if (punctuation.indexOf(lastEl) !== -1)\n  //     return `${newBody.slice(0, count + 1).join(\" \")}...`;\n  //   return `${newBody.slice(0, count).join(\" \")}...${props.currentIndex}`;\n  // };\n  const summaryPost = (open, currentPost, message, count) => {\n    let newCount = 0;\n    const newBody = [];\n    if (open && currentPost === message) return message;\n\n    for (let i = 0; i < message.length; i++) {\n      const element = array[index];\n    } // const newBody =\n    //   message.indexOf(\" \") === -1 ? message.split(\"\") : message.split(\" \");\n\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.Post,\n    onClick: () => props.postSelector(props.entry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, summaryPost(props.open, props.currentPost, props.entry, 25)));\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/components/Post/Post.js"],"names":["React","styles","Post","props","summaryPost","open","currentPost","message","count","newCount","newBody","i","length","element","array","index","postSelector","entry"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,OAApB,EAA6BC,KAA7B,KAAuC;AACzD,QAAIC,QAAQ,GAAG,CAAf;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAIL,IAAI,IAAIC,WAAW,KAAKC,OAA5B,EAAqC,OAAOA,OAAP;;AACrC,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAME,OAAO,GAAGC,KAAK,CAACC,KAAD,CAArB;AACD,KANwD,CAOzD;AACA;;AACD,GATD;;AAWA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAEd,MAAM,CAACC,IADpB;AAEE,IAAA,OAAO,EAAE,MAAMC,KAAK,CAACa,YAAN,CAAmBb,KAAK,CAACc,KAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGb,WAAW,CAACD,KAAK,CAACE,IAAP,EAAaF,KAAK,CAACG,WAAnB,EAAgCH,KAAK,CAACc,KAAtC,EAA6C,EAA7C,CAJd,CAFF,CADF;AAWD,CA1CD;;AA4CA,eAAef,IAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./Post.module.css\";\n\nconst Post = props => {\n  // const summaryPost = (open, currentPost, message, count) => {\n  //   if (open && currentPost === message) return message;\n  //   const newBody =\n  //     message.indexOf(\" \") === -1 ? message.split(\"\") : message.split(\" \");\n\n  //   if (newBody.length < count) {\n  //     const joinedBody=\n  //     return newBody.join(\" \");\n  //   } else if()\n\n  //   const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n  //   const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n\n  //   if (punctuation.indexOf(lastEl) !== -1)\n  //     return `${newBody.slice(0, count + 1).join(\" \")}...`;\n\n  //   return `${newBody.slice(0, count).join(\" \")}...${props.currentIndex}`;\n  // };\n\n  const summaryPost = (open, currentPost, message, count) => {\n    let newCount = 0;\n    const newBody = [];\n    if (open && currentPost === message) return message;\n    for (let i = 0; i < message.length; i++) {\n      const element = array[index];\n    }\n    // const newBody =\n    //   message.indexOf(\" \") === -1 ? message.split(\"\") : message.split(\" \");\n  };\n\n  return (\n    <>\n      <hr />\n      <div\n        className={styles.Post}\n        onClick={() => props.postSelector(props.entry)}\n      >\n        {summaryPost(props.open, props.currentPost, props.entry, 25)}\n      </div>\n    </>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}