{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\n\nvar createState = function () {\n  return {\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n  };\n};\n\nvar CreateScriptLoader = function () {\n  var state = createState();\n\n  var injectScriptTag = function (scriptId, doc, url, callback) {\n    var scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = scriptId;\n    scriptTag.src = url;\n\n    var handler = function () {\n      scriptTag.removeEventListener('load', handler);\n      callback();\n    };\n\n    scriptTag.addEventListener('load', handler);\n\n    if (doc.head) {\n      doc.head.appendChild(scriptTag);\n    }\n  };\n\n  var load = function (doc, url, callback) {\n    if (state.scriptLoaded) {\n      callback();\n    } else {\n      state.listeners.push(callback);\n\n      if (!doc.getElementById(state.scriptId)) {\n        injectScriptTag(state.scriptId, doc, url, function () {\n          state.listeners.forEach(function (fn) {\n            return fn();\n          });\n          state.scriptLoaded = true;\n        });\n      }\n    }\n  }; // Only to be used by tests.\n\n\n  var reinitialize = function () {\n    state = createState();\n  };\n\n  return {\n    load: load,\n    reinitialize: reinitialize\n  };\n};\n\nvar ScriptLoader = CreateScriptLoader();\nexport { ScriptLoader };","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/ScriptLoader.js"],"names":["uuid","createState","listeners","scriptId","scriptLoaded","CreateScriptLoader","state","injectScriptTag","doc","url","callback","scriptTag","createElement","referrerPolicy","type","id","src","handler","removeEventListener","addEventListener","head","appendChild","load","push","getElementById","forEach","fn","reinitialize","ScriptLoader"],"mappings":"AAAA;;;;;;;AAOA,SAASA,IAAT,QAAqB,SAArB;;AACA,IAAIC,WAAW,GAAG,YAAY;AAC1B,SAAO;AACHC,IAAAA,SAAS,EAAE,EADR;AAEHC,IAAAA,QAAQ,EAAEH,IAAI,CAAC,aAAD,CAFX;AAGHI,IAAAA,YAAY,EAAE;AAHX,GAAP;AAKH,CAND;;AAOA,IAAIC,kBAAkB,GAAG,YAAY;AACjC,MAAIC,KAAK,GAAGL,WAAW,EAAvB;;AACA,MAAIM,eAAe,GAAG,UAAUJ,QAAV,EAAoBK,GAApB,EAAyBC,GAAzB,EAA8BC,QAA9B,EAAwC;AAC1D,QAAIC,SAAS,GAAGH,GAAG,CAACI,aAAJ,CAAkB,QAAlB,CAAhB;AACAD,IAAAA,SAAS,CAACE,cAAV,GAA2B,QAA3B;AACAF,IAAAA,SAAS,CAACG,IAAV,GAAiB,wBAAjB;AACAH,IAAAA,SAAS,CAACI,EAAV,GAAeZ,QAAf;AACAQ,IAAAA,SAAS,CAACK,GAAV,GAAgBP,GAAhB;;AACA,QAAIQ,OAAO,GAAG,YAAY;AACtBN,MAAAA,SAAS,CAACO,mBAAV,CAA8B,MAA9B,EAAsCD,OAAtC;AACAP,MAAAA,QAAQ;AACX,KAHD;;AAIAC,IAAAA,SAAS,CAACQ,gBAAV,CAA2B,MAA3B,EAAmCF,OAAnC;;AACA,QAAIT,GAAG,CAACY,IAAR,EAAc;AACVZ,MAAAA,GAAG,CAACY,IAAJ,CAASC,WAAT,CAAqBV,SAArB;AACH;AACJ,GAdD;;AAeA,MAAIW,IAAI,GAAG,UAAUd,GAAV,EAAeC,GAAf,EAAoBC,QAApB,EAA8B;AACrC,QAAIJ,KAAK,CAACF,YAAV,EAAwB;AACpBM,MAAAA,QAAQ;AACX,KAFD,MAGK;AACDJ,MAAAA,KAAK,CAACJ,SAAN,CAAgBqB,IAAhB,CAAqBb,QAArB;;AACA,UAAI,CAACF,GAAG,CAACgB,cAAJ,CAAmBlB,KAAK,CAACH,QAAzB,CAAL,EAAyC;AACrCI,QAAAA,eAAe,CAACD,KAAK,CAACH,QAAP,EAAiBK,GAAjB,EAAsBC,GAAtB,EAA2B,YAAY;AAClDH,UAAAA,KAAK,CAACJ,SAAN,CAAgBuB,OAAhB,CAAwB,UAAUC,EAAV,EAAc;AAAE,mBAAOA,EAAE,EAAT;AAAc,WAAtD;AACApB,UAAAA,KAAK,CAACF,YAAN,GAAqB,IAArB;AACH,SAHc,CAAf;AAIH;AACJ;AACJ,GAbD,CAjBiC,CA+BjC;;;AACA,MAAIuB,YAAY,GAAG,YAAY;AAC3BrB,IAAAA,KAAK,GAAGL,WAAW,EAAnB;AACH,GAFD;;AAGA,SAAO;AACHqB,IAAAA,IAAI,EAAEA,IADH;AAEHK,IAAAA,YAAY,EAAEA;AAFX,GAAP;AAIH,CAvCD;;AAwCA,IAAIC,YAAY,GAAGvB,kBAAkB,EAArC;AACA,SAASuB,YAAT","sourcesContent":["/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\nvar createState = function () {\n    return {\n        listeners: [],\n        scriptId: uuid('tiny-script'),\n        scriptLoaded: false\n    };\n};\nvar CreateScriptLoader = function () {\n    var state = createState();\n    var injectScriptTag = function (scriptId, doc, url, callback) {\n        var scriptTag = doc.createElement('script');\n        scriptTag.referrerPolicy = 'origin';\n        scriptTag.type = 'application/javascript';\n        scriptTag.id = scriptId;\n        scriptTag.src = url;\n        var handler = function () {\n            scriptTag.removeEventListener('load', handler);\n            callback();\n        };\n        scriptTag.addEventListener('load', handler);\n        if (doc.head) {\n            doc.head.appendChild(scriptTag);\n        }\n    };\n    var load = function (doc, url, callback) {\n        if (state.scriptLoaded) {\n            callback();\n        }\n        else {\n            state.listeners.push(callback);\n            if (!doc.getElementById(state.scriptId)) {\n                injectScriptTag(state.scriptId, doc, url, function () {\n                    state.listeners.forEach(function (fn) { return fn(); });\n                    state.scriptLoaded = true;\n                });\n            }\n        }\n    };\n    // Only to be used by tests.\n    var reinitialize = function () {\n        state = createState();\n    };\n    return {\n        load: load,\n        reinitialize: reinitialize\n    };\n};\nvar ScriptLoader = CreateScriptLoader();\nexport { ScriptLoader };\n"]},"metadata":{},"sourceType":"module"}