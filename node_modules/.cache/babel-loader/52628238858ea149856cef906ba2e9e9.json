{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/Message/Message.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Message.module.css\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport BalloonEditor from \"@ckeditor/ckeditor5-build-balloon\";\n\nconst Message = props => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n\n  const onChangeEditor = (event, editor) => {\n    const data = editor.getData();\n    console.log(\"it changed\", data);\n    setMessageAnswer(data);\n  };\n\n  console.log(messageAnswer);\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"My message ...\"), React.createElement(\"div\", {\n    className: styles.MessageContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CKEditor, {\n    editor: BalloonEditor,\n    data: messageAnswer,\n    config: {\n      toolbar: [\"bold\", \"italic\", \"|\", \"undo\", \"redo\"]\n    },\n    onChange: onChangeEditor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"prev\",\n    switchHandler: props.switchHandler,\n    name: \"message\",\n    formValue: messageAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"next\",\n    switchHandler: props.switchHandler,\n    name: \"message\",\n    validated: messageAnswer !== \"\" && messageAnswer.trim().indexOf(\" \") !== -1,\n    formValue: messageAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default Message;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/Message/Message.js"],"names":["React","useState","useEffect","Button","styles","CKEditor","BalloonEditor","Message","props","messageAnswer","setMessageAnswer","onChangeEditor","event","editor","data","getData","console","log","messageValue","MessageContent","toolbar","switchHandler","trim","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACAJ,IAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACD,GAJD;;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AAEAP,EAAAA,SAAS,CAAC,MAAMQ,gBAAgB,CAACF,KAAK,CAACU,YAAP,CAAvB,EAA6C,CAACV,KAAK,CAACU,YAAP,CAA7C,CAAT;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACe,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEb,aADV;AAEE,IAAA,IAAI,EAAEG,aAFR;AAGE,IAAA,MAAM,EAAE;AACNW,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,GAAnB,EAAwB,MAAxB,EAAgC,MAAhC;AADH,KAHV;AAME,IAAA,QAAQ,EAAET,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,aAAa,EAAEH,KAAK,CAACa,aAFvB;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,SAAS,EAAEZ,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,aAAa,EAAED,KAAK,CAACa,aAFvB;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,SAAS,EACPZ,aAAa,KAAK,EAAlB,IAAwBA,aAAa,CAACa,IAAd,GAAqBC,OAArB,CAA6B,GAA7B,MAAsC,CAAC,CALnE;AAOE,IAAA,SAAS,EAAEd,aAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CAFF,CADF;AA8BD,CA3CD;;AA6CA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../UI/Buttons/FormButton/FormButton\";\nimport styles from \"./Message.module.css\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport BalloonEditor from \"@ckeditor/ckeditor5-build-balloon\";\n\nconst Message = (props) => {\n  const [messageAnswer, setMessageAnswer] = useState(\"\");\n\n  const onChangeEditor = (event, editor) => {\n    const data = editor.getData();\n    console.log(\"it changed\", data);\n    setMessageAnswer(data);\n  };\n\n  console.log(messageAnswer);\n\n  useEffect(() => setMessageAnswer(props.messageValue), [props.messageValue]);\n\n  return (\n    <>\n      <h3>My message ...</h3>\n      <div className={styles.MessageContent}>\n        <CKEditor\n          editor={BalloonEditor}\n          data={messageAnswer}\n          config={{\n            toolbar: [\"bold\", \"italic\", \"|\", \"undo\", \"redo\"],\n          }}\n          onChange={onChangeEditor}\n        />\n        <Button\n          type=\"prev\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          formValue={messageAnswer}\n        />\n        <Button\n          type=\"next\"\n          switchHandler={props.switchHandler}\n          name=\"message\"\n          validated={\n            messageAnswer !== \"\" && messageAnswer.trim().indexOf(\" \") !== -1\n          }\n          formValue={messageAnswer}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}