{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst Posts = () => {\n  const posts = useSelector(state => state.posts);\n  const [open, setOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n\n  const openHandler = () => setOpen(oldState => !oldState);\n\n  const postSelector = post => {\n    setCurrentPost(post);\n    openHandler();\n  };\n\n  const summaryPost = (count, message) => {\n    const newBody = props.body.split(\" \");\n\n    if (newBody.length < count) {\n      return newBody.join(\" \");\n    }\n\n    const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n    const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n\n    if (punctuation.indexOf(lastEl) !== -1) {\n      return `${newBody.slice(0, count + 1).join(\" \")}...`;\n    }\n\n    return `${newBody.slice(0, count).join(\" \")}...`;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    open: open,\n    openHandler: openHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, currentPost), React.createElement(\"div\", {\n    className: styles.Posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, posts.reverse().map(post => React.createElement(Post, {\n    entry: post.message,\n    postSelector: postSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js"],"names":["React","useState","styles","useSelector","Post","Modal","Posts","posts","state","open","setOpen","currentPost","setCurrentPost","openHandler","oldState","postSelector","post","summaryPost","count","message","newBody","props","body","split","length","join","lastEl","slice","punctuation","indexOf","reverse","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMY,WAAW,GAAG,MAAMH,OAAO,CAACI,QAAQ,IAAI,CAACA,QAAd,CAAjC;;AACA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AAC3BJ,IAAAA,cAAc,CAACI,IAAD,CAAd;AACAH,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACtC,UAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,GAAjB,CAAhB;;AACA,QAAIH,OAAO,CAACI,MAAR,GAAiBN,KAArB,EAA4B;AAC1B,aAAOE,OAAO,CAACK,IAAR,CAAa,GAAb,CAAP;AACD;;AACD,UAAMC,MAAM,GAAGN,OAAO,CAACF,KAAK,GAAG,CAAT,CAAP,CAAmBK,KAAnB,CAAyB,EAAzB,EAA6BI,KAA7B,CAAmC,CAAC,CAApC,EAAuC,CAAvC,CAAf;AACA,UAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAApB;;AACA,QAAIA,WAAW,CAACC,OAAZ,CAAoBH,MAApB,MAAgC,CAAC,CAArC,EAAwC;AACtC,aAAQ,GAAEN,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBT,KAAK,GAAG,CAAzB,EAA4BO,IAA5B,CAAiC,GAAjC,CAAsC,KAAhD;AACD;;AACD,WAAQ,GAAEL,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBT,KAAjB,EAAwBO,IAAxB,CAA6B,GAA7B,CAAkC,KAA5C;AACD,GAXD;;AAaA,SACE,0CACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEhB,IAAb;AAAmB,IAAA,WAAW,EAAEI,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WADH,CADF,EAIE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACuB,OAAN,GAAgBC,GAAhB,CAAoBf,IAAI,IACvB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,IAAI,CAACG,OAAlB;AAA2B,IAAA,YAAY,EAAEJ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAJF,CADF;AAYD,CAnCD;;AAqCA,eAAeT,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst Posts = () => {\n  const posts = useSelector(state => state.posts);\n  const [open, setOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n  const openHandler = () => setOpen(oldState => !oldState);\n  const postSelector = post => {\n    setCurrentPost(post);\n    openHandler();\n  };\n\n  const summaryPost = (count, message) => {\n    const newBody = props.body.split(\" \");\n    if (newBody.length < count) {\n      return newBody.join(\" \");\n    }\n    const lastEl = newBody[count - 1].split(\"\").slice(-1)[0];\n    const punctuation = [\".\", \"!\", \",\", \"?\", \";\", \":\", \"&\"];\n    if (punctuation.indexOf(lastEl) !== -1) {\n      return `${newBody.slice(0, count + 1).join(\" \")}...`;\n    }\n    return `${newBody.slice(0, count).join(\" \")}...`;\n  };\n\n  return (\n    <>\n      <Modal open={open} openHandler={openHandler}>\n        {currentPost}\n      </Modal>\n      <div className={styles.Posts}>\n        {posts.reverse().map(post => (\n          <Post entry={post.message} postSelector={postSelector} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}