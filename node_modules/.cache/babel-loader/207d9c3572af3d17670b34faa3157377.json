{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport PostViewer from \"../../components/PostViewer/PostViewer\";\nimport PostFilter from \"../PostFilter/PostFilter\";\n\nconst Posts = () => {\n  const [open, setOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n  const posts = useSelector(state => state.posts);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const postLoading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n\n  const openHandler = () => setOpen(oldState => !oldState);\n\n  const postSelector = post => {\n    setCurrentPost(post);\n    openHandler();\n  };\n\n  let postFilter = posts.length > 0 ? React.createElement(PostFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : null;\n  let postsContainer = null;\n\n  if (filteredPosts.length > 0) {\n    postsContainer = filteredPosts.map((post, index) => {\n      return React.createElement(Post, {\n        key: index,\n        entry: post,\n        open: open,\n        postSelector: postSelector,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    });\n  } else {\n    postsContainer = posts.map((post, index) => {\n      return React.createElement(Post, {\n        key: index,\n        entry: post,\n        open: open,\n        postSelector: postSelector,\n        marker: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(PostViewer, {\n    open: open,\n    openHandler: openHandler,\n    post: currentPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), postFilter, React.createElement(\"div\", {\n    className: styles.Posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, postsContainer));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/src/containers/Posts/Posts.js"],"names":["React","useState","styles","useSelector","Post","PostViewer","PostFilter","Posts","open","setOpen","currentPost","setCurrentPost","posts","state","filteredPosts","postLoading","loading","dispatch","useDispatch","openHandler","oldState","postSelector","post","postFilter","length","postsContainer","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMW,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,aAAa,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAAjC;AACA,QAAMC,WAAW,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,OAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AACA,QAAMC,WAAW,GAAG,MAAMV,OAAO,CAACW,QAAQ,IAAI,CAACA,QAAd,CAAjC;;AACA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AAC3BX,IAAAA,cAAc,CAACW,IAAD,CAAd;AACAH,IAAAA,WAAW;AACZ,GAHD;;AAKA,MAAII,UAAU,GAAGX,KAAK,CAACY,MAAN,GAAe,CAAf,GAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAoC,IAArD;AAEA,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAIX,aAAa,CAACU,MAAd,GAAuB,CAA3B,EAA8B;AAC5BC,IAAAA,cAAc,GAAGX,aAAa,CAACY,GAAd,CAAkB,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAClD,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAEL,IAFT;AAGE,QAAA,IAAI,EAAEd,IAHR;AAIE,QAAA,YAAY,EAAEa,YAJhB;AAKE,QAAA,MAAM,EAAEM,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVgB,CAAjB;AAWD,GAZD,MAYO;AACLF,IAAAA,cAAc,GAAGb,KAAK,CAACc,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAC1C,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAEL,IAFT;AAGE,QAAA,IAAI,EAAEd,IAHR;AAIE,QAAA,YAAY,EAAEa,YAJhB;AAKE,QAAA,MAAM,EAAEM,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVgB,CAAjB;AAWD;;AAED,SACE,0CACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEnB,IAAlB;AAAwB,IAAA,WAAW,EAAEW,WAArC;AAAkD,IAAA,IAAI,EAAET,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGa,UAFH,EAGE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BkB,cAA/B,CAHF,CADF;AAOD,CAlDD;;AAoDA,eAAelB,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"../../components/Post/Post\";\nimport PostViewer from \"../../components/PostViewer/PostViewer\";\nimport PostFilter from \"../PostFilter/PostFilter\";\n\nconst Posts = () => {\n  const [open, setOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n  const posts = useSelector(state => state.posts);\n  const filteredPosts = useSelector(state => state.filteredPosts);\n  const postLoading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n  const openHandler = () => setOpen(oldState => !oldState);\n  const postSelector = post => {\n    setCurrentPost(post);\n    openHandler();\n  };\n\n  let postFilter = posts.length > 0 ? <PostFilter /> : null;\n\n  let postsContainer = null;\n\n  if (filteredPosts.length > 0) {\n    postsContainer = filteredPosts.map((post, index) => {\n      return (\n        <Post\n          key={index}\n          entry={post}\n          open={open}\n          postSelector={postSelector}\n          marker={index}\n        ></Post>\n      );\n    });\n  } else {\n    postsContainer = posts.map((post, index) => {\n      return (\n        <Post\n          key={index}\n          entry={post}\n          open={open}\n          postSelector={postSelector}\n          marker={index}\n        ></Post>\n      );\n    });\n  }\n\n  return (\n    <>\n      <PostViewer open={open} openHandler={openHandler} post={currentPost} />\n      {postFilter}\n      <div className={styles.Posts}>{postsContainer}</div>\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}