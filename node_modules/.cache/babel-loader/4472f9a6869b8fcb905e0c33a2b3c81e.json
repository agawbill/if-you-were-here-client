{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport const fetchMessages = (skip, count) => {\n  return async dispatch => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(`/api/messages?count=${count}&skip=${skip}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      const {\n        messages,\n        count\n      } = data;\n      dispatch(fetchMessagesSuccess(messages, count));\n    } catch (err) {\n      dispatch(fetchMessagesFail(err));\n    }\n  };\n};\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START\n  };\n};\nexport const fetchMessagesSuccess = (messages, count) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n    count\n  };\n};\nexport const fetchMessagesFail = messages => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/messages.js"],"names":["actionTypes","fetchMessages","skip","count","dispatch","fetchMessagesStart","response","fetch","method","mode","cache","credentials","headers","data","json","messages","fetchMessagesSuccess","err","fetchMessagesFail","type","FETCH_MESSAGES_START","FETCH_MESSAGES_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uBAAsBJ,KAAM,SAAQD,IAAK,EADhB,EAE1B;AACEM,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,KAAK,EAAE,UAHT;AAIEC,QAAAA,WAAW,EAAE,aAJf;AAKEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALX,OAF0B,CAA5B;AAYA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYZ,QAAAA;AAAZ,UAAsBU,IAA5B;AACAT,MAAAA,QAAQ,CAACY,oBAAoB,CAACD,QAAD,EAAWZ,KAAX,CAArB,CAAR;AACD,KAjBD,CAiBE,OAAOc,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAACc,iBAAiB,CAACD,GAAD,CAAlB,CAAR;AACD;AACF,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMZ,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLc,IAAAA,IAAI,EAAEnB,WAAW,CAACoB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,oBAAoB,GAAG,CAACD,QAAD,EAAWZ,KAAX,KAAqB;AACvD,SAAO;AACLgB,IAAAA,IAAI,EAAEnB,WAAW,CAACqB,sBADb;AAELN,IAAAA,QAFK;AAGLZ,IAAAA;AAHK,GAAP;AAKD,CANM;AAQP,OAAO,MAAMe,iBAAiB,GAAIH,QAAD,IAAc;AAC7C,SAAO;AACLI,IAAAA,IAAI,EAAEnB,WAAW,CAACqB,sBADb;AAELN,IAAAA;AAFK,GAAP;AAID,CALM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessages = (skip, count) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\n        `/api/messages?count=${count}&skip=${skip}`,\n        {\n          method: \"GET\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const data = await response.json();\n      const { messages, count } = data;\n      dispatch(fetchMessagesSuccess(messages, count));\n    } catch (err) {\n      dispatch(fetchMessagesFail(err));\n    }\n  };\n};\n\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START,\n  };\n};\n\nexport const fetchMessagesSuccess = (messages, count) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n    count,\n  };\n};\n\nexport const fetchMessagesFail = (messages) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}