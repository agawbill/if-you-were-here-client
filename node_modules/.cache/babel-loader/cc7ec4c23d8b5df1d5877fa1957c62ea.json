{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/components/LoadMore/LoadMore.js\";\nimport React, { useState } from \"react\";\n\nconst LoadMore = props => {\n  const [messagesCutoff, setMessagesCutoff] = useState(14);\n  const [filteredCutoff, setFilteredCutoff] = useState(14);\n  loadedMessages = props.filteredMessages.slice(0, 14).map((message, index) => {\n    return React.createElement(MessageSnapshot, {\n      key: index,\n      entry: message,\n      marker: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  });\n  let loadMoreMessages = null;\n  let loadMessages = null;\n\n  if (props.filteredLength > 14) {\n    loadMoreMessages = count => {\n      const marker = props.filteredLength - filteredCutoff >= count ? count : props.filteredLength - filteredCutoff;\n      setFilteredCutoff(prevState => prevState + marker);\n    };\n\n    loadMessages = props.filteredLength - props.filteredCutoff > 0 && props.filteredLength > 14 ? React.createElement(\"div\", {\n      onClick: () => loadMoreMessages(14),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"LOAD MORE\") : null;\n  } else {\n    console.log(\"hello\");\n\n    loadMoreMessages = count => {\n      const marker = props.messagesLength - messagesCutoff >= count ? count : props.messagesLength - messagesCutoff;\n      setMessagesCutoff(prevState => prevState + marker);\n    };\n\n    loadMessages = props.messagesLength - messagesCutoff > 0 && props.messagesLength > 14 ? React.createElement(\"div\", {\n      onClick: () => loadMoreMessages(14),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"LOAD MORE\") : null;\n  }\n\n  return React.createElement(React.Fragment, null, loadMessages);\n};\n\nexport default LoadMore;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/LoadMore/LoadMore.js"],"names":["React","useState","LoadMore","props","messagesCutoff","setMessagesCutoff","filteredCutoff","setFilteredCutoff","loadedMessages","filteredMessages","slice","map","message","index","loadMoreMessages","loadMessages","filteredLength","count","marker","prevState","console","log","messagesLength"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AAEAO,EAAAA,cAAc,GAAGL,KAAK,CAACM,gBAAN,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,EAAoCC,GAApC,CAAwC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3E,WACE,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAED,OAFT;AAGE,MAAA,MAAM,EAAEC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARgB,CAAjB;AAUA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,YAAY,GAAG,IAAnB;;AAEA,MAAIZ,KAAK,CAACa,cAAN,GAAuB,EAA3B,EAA+B;AAC7BF,IAAAA,gBAAgB,GAAIG,KAAD,IAAW;AAC5B,YAAMC,MAAM,GACVf,KAAK,CAACa,cAAN,GAAuBV,cAAvB,IAAyCW,KAAzC,GACIA,KADJ,GAEId,KAAK,CAACa,cAAN,GAAuBV,cAH7B;AAIAC,MAAAA,iBAAiB,CAAEY,SAAD,IAAeA,SAAS,GAAGD,MAA5B,CAAjB;AACD,KAND;;AAQAH,IAAAA,YAAY,GACVZ,KAAK,CAACa,cAAN,GAAuBb,KAAK,CAACG,cAA7B,GAA8C,CAA9C,IACAH,KAAK,CAACa,cAAN,GAAuB,EADvB,GAEE;AAAK,MAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,GAGI,IAJN;AAKD,GAdD,MAcO;AACLM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEAP,IAAAA,gBAAgB,GAAIG,KAAD,IAAW;AAC5B,YAAMC,MAAM,GACVf,KAAK,CAACmB,cAAN,GAAuBlB,cAAvB,IAAyCa,KAAzC,GACIA,KADJ,GAEId,KAAK,CAACmB,cAAN,GAAuBlB,cAH7B;AAIAC,MAAAA,iBAAiB,CAAEc,SAAD,IAAeA,SAAS,GAAGD,MAA5B,CAAjB;AACD,KAND;;AAQAH,IAAAA,YAAY,GACVZ,KAAK,CAACmB,cAAN,GAAuBlB,cAAvB,GAAwC,CAAxC,IAA6CD,KAAK,CAACmB,cAAN,GAAuB,EAApE,GACE;AAAK,MAAA,OAAO,EAAE,MAAMR,gBAAgB,CAAC,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,GAEI,IAHN;AAID;;AAED,SAAO,0CAAGC,YAAH,CAAP;AACD,CAjDD;;AAmDA,eAAeb,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst LoadMore = (props) => {\n  const [messagesCutoff, setMessagesCutoff] = useState(14);\n  const [filteredCutoff, setFilteredCutoff] = useState(14);\n\n  loadedMessages = props.filteredMessages.slice(0, 14).map((message, index) => {\n    return (\n      <MessageSnapshot\n        key={index}\n        entry={message}\n        marker={index}\n      ></MessageSnapshot>\n    );\n  });\n\n  let loadMoreMessages = null;\n  let loadMessages = null;\n\n  if (props.filteredLength > 14) {\n    loadMoreMessages = (count) => {\n      const marker =\n        props.filteredLength - filteredCutoff >= count\n          ? count\n          : props.filteredLength - filteredCutoff;\n      setFilteredCutoff((prevState) => prevState + marker);\n    };\n\n    loadMessages =\n      props.filteredLength - props.filteredCutoff > 0 &&\n      props.filteredLength > 14 ? (\n        <div onClick={() => loadMoreMessages(14)}>LOAD MORE</div>\n      ) : null;\n  } else {\n    console.log(\"hello\");\n\n    loadMoreMessages = (count) => {\n      const marker =\n        props.messagesLength - messagesCutoff >= count\n          ? count\n          : props.messagesLength - messagesCutoff;\n      setMessagesCutoff((prevState) => prevState + marker);\n    };\n\n    loadMessages =\n      props.messagesLength - messagesCutoff > 0 && props.messagesLength > 14 ? (\n        <div onClick={() => loadMoreMessages(14)}>LOAD MORE</div>\n      ) : null;\n  }\n\n  return <>{loadMessages}</>;\n};\n\nexport default LoadMore;\n"]},"metadata":{},"sourceType":"module"}