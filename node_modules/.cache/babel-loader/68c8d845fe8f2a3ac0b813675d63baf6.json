{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport splitReactElement from './splitReactElement';\n\nfunction hasChildren(element) {\n  return React.isValidElement(element) && React.Children.count(element.props.children) > 0;\n}\n\nexport default function getElementHTML(element) {\n  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (typeof element === 'string') {\n    return element;\n  }\n\n  if (React.isValidElement(element)) {\n    if (hasChildren(element)) {\n      return ReactDOMServer.renderToStaticMarkup(element);\n    }\n\n    var tags = splitReactElement(element);\n\n    if (text !== null && _typeof(tags) === 'object') {\n      var start = tags.start,\n          end = tags.end;\n      return start + text + end;\n    }\n\n    return tags;\n  }\n\n  invariant(Object.prototype.hasOwnProperty.call(element, 'start') && Object.prototype.hasOwnProperty.call(element, 'end'), 'convertToHTML: received conversion data without either an HTML string, ReactElement or an object with start/end tags');\n\n  if (text !== null) {\n    var _start = element.start,\n        _end = element.end;\n    return _start + text + _end;\n  }\n\n  return element;\n}","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/node_modules/draft-convert/esm/util/getElementHTML.js"],"names":["_typeof","invariant","React","ReactDOMServer","splitReactElement","hasChildren","element","isValidElement","Children","count","props","children","getElementHTML","text","arguments","length","undefined","renderToStaticMarkup","tags","start","end","Object","prototype","hasOwnProperty","call","_start","_end"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,SAAOJ,KAAK,CAACK,cAAN,CAAqBD,OAArB,KAAiCJ,KAAK,CAACM,QAAN,CAAeC,KAAf,CAAqBH,OAAO,CAACI,KAAR,CAAcC,QAAnC,IAA+C,CAAvF;AACD;;AAED,eAAe,SAASC,cAAT,CAAwBN,OAAxB,EAAiC;AAC9C,MAAIO,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAA/E;;AAEA,MAAIR,OAAO,KAAKU,SAAZ,IAAyBV,OAAO,KAAK,IAAzC,EAA+C;AAC7C,WAAOA,OAAP;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAOA,OAAP;AACD;;AAED,MAAIJ,KAAK,CAACK,cAAN,CAAqBD,OAArB,CAAJ,EAAmC;AACjC,QAAID,WAAW,CAACC,OAAD,CAAf,EAA0B;AACxB,aAAOH,cAAc,CAACc,oBAAf,CAAoCX,OAApC,CAAP;AACD;;AAED,QAAIY,IAAI,GAAGd,iBAAiB,CAACE,OAAD,CAA5B;;AAEA,QAAIO,IAAI,KAAK,IAAT,IAAiBb,OAAO,CAACkB,IAAD,CAAP,KAAkB,QAAvC,EAAiD;AAC/C,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,UACIC,GAAG,GAAGF,IAAI,CAACE,GADf;AAEA,aAAOD,KAAK,GAAGN,IAAR,GAAeO,GAAtB;AACD;;AAED,WAAOF,IAAP;AACD;;AAEDjB,EAAAA,SAAS,CAACoB,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqClB,OAArC,EAA8C,OAA9C,KAA0De,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqClB,OAArC,EAA8C,KAA9C,CAA3D,EAAiH,sHAAjH,CAAT;;AAEA,MAAIO,IAAI,KAAK,IAAb,EAAmB;AACjB,QAAIY,MAAM,GAAGnB,OAAO,CAACa,KAArB;AAAA,QACIO,IAAI,GAAGpB,OAAO,CAACc,GADnB;AAEA,WAAOK,MAAM,GAAGZ,IAAT,GAAgBa,IAAvB;AACD;;AAED,SAAOpB,OAAP;AACD","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport splitReactElement from './splitReactElement';\n\nfunction hasChildren(element) {\n  return React.isValidElement(element) && React.Children.count(element.props.children) > 0;\n}\n\nexport default function getElementHTML(element) {\n  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (typeof element === 'string') {\n    return element;\n  }\n\n  if (React.isValidElement(element)) {\n    if (hasChildren(element)) {\n      return ReactDOMServer.renderToStaticMarkup(element);\n    }\n\n    var tags = splitReactElement(element);\n\n    if (text !== null && _typeof(tags) === 'object') {\n      var start = tags.start,\n          end = tags.end;\n      return start + text + end;\n    }\n\n    return tags;\n  }\n\n  invariant(Object.prototype.hasOwnProperty.call(element, 'start') && Object.prototype.hasOwnProperty.call(element, 'end'), 'convertToHTML: received conversion data without either an HTML string, ReactElement or an object with start/end tags');\n\n  if (text !== null) {\n    var _start = element.start,\n        _end = element.end;\n    return _start + text + _end;\n  }\n\n  return element;\n}"]},"metadata":{},"sourceType":"module"}