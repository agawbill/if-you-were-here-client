{"ast":null,"code":"import _slicedToArray from\"/home/anthony/Desktop/if-you-were-here/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import styles from\"./PostFilter.module.css\";import FilterOptions from\"../../components/FilterOptions/FilterOptions\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faFilter}from\"@fortawesome/free-solid-svg-icons\";var PostFilter=function PostFilter(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),expand=_useState2[0],setExpand=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var filterHandler=function filterHandler(){expandHandler();selectHanlder();};var expandHandler=function expandHandler(){return setExpand(function(prevState){return!prevState;});};var selectHanlder=function selectHanlder(){return setSelected(function(prevState){return!prevState;});};var filterOptions=React.createElement(FilterOptions,{openHandler:filterHandler,expand:expand});return React.createElement(React.Fragment,null,React.createElement(\"div\",{onClick:function onClick(){return filterHandler();}},React.createElement(\"span\",{className:selected?styles.ButtonSelected:styles.Button},\" \",React.createElement(FontAwesomeIcon,{icon:faFilter,size:\"lg\",style:{color:\"orange\"}}),\" \",\"Filter\")),filterOptions);};export default PostFilter;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/containers/PostFilter/PostFilter.js"],"names":["React","useState","styles","FilterOptions","FontAwesomeIcon","faFilter","PostFilter","expand","setExpand","selected","setSelected","filterHandler","expandHandler","selectHanlder","prevState","filterOptions","ButtonSelected","Button","color"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,8CAA1B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,QAAT,KAAyB,mCAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACKL,QAAQ,CAAC,KAAD,CADb,wCAChBM,MADgB,eACRC,SADQ,8BAESP,QAAQ,CAAC,KAAD,CAFjB,yCAEhBQ,QAFgB,eAENC,WAFM,eAIvB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BC,aAAa,GACbC,aAAa,GACd,CAHD,CAKA,GAAMD,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMJ,CAAAA,SAAS,CAAC,SAAAM,SAAS,QAAI,CAACA,SAAL,EAAV,CAAf,EAAtB,CACA,GAAMD,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMH,CAAAA,WAAW,CAAC,SAAAI,SAAS,QAAI,CAACA,SAAL,EAAV,CAAjB,EAAtB,CAEA,GAAMC,CAAAA,aAAa,CACjB,oBAAC,aAAD,EAAe,WAAW,CAAEJ,aAA5B,CAA2C,MAAM,CAAEJ,MAAnD,EADF,CAIA,MACE,yCACE,2BAAK,OAAO,CAAE,yBAAMI,CAAAA,aAAa,EAAnB,EAAd,EACE,4BAAM,SAAS,CAAEF,QAAQ,CAAGP,MAAM,CAACc,cAAV,CAA2Bd,MAAM,CAACe,MAA3D,EACG,GADH,CAEE,oBAAC,eAAD,EACE,IAAI,CAAEZ,QADR,CAEE,IAAI,CAAC,IAFP,CAGE,KAAK,CAAE,CAAEa,KAAK,CAAE,QAAT,CAHT,EAFF,CAMK,GANL,UADF,CADF,CAYGH,aAZH,CADF,CAgBD,CAhCD,CAkCA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./PostFilter.module.css\";\nimport FilterOptions from \"../../components/FilterOptions/FilterOptions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PostFilter = () => {\n  const [expand, setExpand] = useState(false);\n  const [selected, setSelected] = useState(false);\n\n  const filterHandler = () => {\n    expandHandler();\n    selectHanlder();\n  };\n\n  const expandHandler = () => setExpand(prevState => !prevState);\n  const selectHanlder = () => setSelected(prevState => !prevState);\n\n  const filterOptions = (\n    <FilterOptions openHandler={filterHandler} expand={expand} />\n  );\n\n  return (\n    <>\n      <div onClick={() => filterHandler()}>\n        <span className={selected ? styles.ButtonSelected : styles.Button}>\n          {\" \"}\n          <FontAwesomeIcon\n            icon={faFilter}\n            size=\"lg\"\n            style={{ color: \"orange\" }}\n          />{\" \"}\n          Filter\n        </span>\n      </div>\n      {filterOptions}\n    </>\n  );\n};\n\nexport default PostFilter;\n"]},"metadata":{},"sourceType":"module"}