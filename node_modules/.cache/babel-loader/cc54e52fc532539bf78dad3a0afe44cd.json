{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport keys from \"../../config/keys\";\nexport const submitPost = post => {\n  return async dispatch => {\n    try {\n      dispatch(submitPostStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify(post)\n      });\n      const data = await response.json();\n      dispatch(submitPostSuccess(data));\n    } catch (err) {\n      dispatch(submitPostFail(err));\n    }\n  };\n};\nexport const submitPostStart = () => {\n  return {\n    type: actionTypes.SUBMIT_POST_START\n  };\n};\nexport const submitPostSuccess = post => {\n  return {\n    type: actionTypes.SUBMIT_POST_SUCCESS,\n    post\n  };\n};\nexport const submitPostFail = error => {\n  return {\n    type: actionTypes.SUBMIT_POST_FAIL,\n    error\n  };\n};\nexport const submitPostReset = () => {\n  return {\n    type: actionTypes.SUBMIT_POST_RESET\n  };\n};\nexport const setPost = postId => {\n  return {\n    type: actionTypes.FIND_POST,\n    postId\n  };\n};\nexport const resetPost = () => {\n  return {\n    type: actionTypes.RESET_POST\n  };\n};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/posts.js"],"names":["actionTypes","keys","submitPost","post","dispatch","submitPostStart","response","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","data","json","submitPostSuccess","err","submitPostFail","type","SUBMIT_POST_START","SUBMIT_POST_SUCCESS","error","SUBMIT_POST_FAIL","submitPostReset","SUBMIT_POST_RESET","setPost","postId","FIND_POST","resetPost","RESET_POST"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AAC5CC,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,IAAI,EAAE,MAFsC;AAG5CC,QAAAA,KAAK,EAAE,UAHqC;AAI5CC,QAAAA,WAAW,EAAE,aAJ+B;AAK5CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SALmC;AAS5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AATsC,OAAlB,CAA5B;AAWA,YAAMa,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAb,MAAAA,QAAQ,CAACc,iBAAiB,CAACF,IAAD,CAAlB,CAAR;AACD,KAfD,CAeE,OAAOG,GAAP,EAAY;AACZf,MAAAA,QAAQ,CAACgB,cAAc,CAACD,GAAD,CAAf,CAAR;AACD;AACF,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMd,eAAe,GAAG,MAAM;AACnC,SAAO;AACLgB,IAAAA,IAAI,EAAErB,WAAW,CAACsB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMJ,iBAAiB,GAAIf,IAAD,IAAU;AACzC,SAAO;AACLkB,IAAAA,IAAI,EAAErB,WAAW,CAACuB,mBADb;AAELpB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMiB,cAAc,GAAII,KAAD,IAAW;AACvC,SAAO;AACLH,IAAAA,IAAI,EAAErB,WAAW,CAACyB,gBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,eAAe,GAAG,MAAM;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAErB,WAAW,CAAC2B;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY;AACjC,SAAO;AACLR,IAAAA,IAAI,EAAErB,WAAW,CAAC8B,SADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLV,IAAAA,IAAI,EAAErB,WAAW,CAACgC;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport keys from \"../../config/keys\";\n\nexport const submitPost = (post) => {\n  return async (dispatch) => {\n    try {\n      dispatch(submitPostStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(post),\n      });\n      const data = await response.json();\n      dispatch(submitPostSuccess(data));\n    } catch (err) {\n      dispatch(submitPostFail(err));\n    }\n  };\n};\n\nexport const submitPostStart = () => {\n  return {\n    type: actionTypes.SUBMIT_POST_START,\n  };\n};\n\nexport const submitPostSuccess = (post) => {\n  return {\n    type: actionTypes.SUBMIT_POST_SUCCESS,\n    post,\n  };\n};\n\nexport const submitPostFail = (error) => {\n  return {\n    type: actionTypes.SUBMIT_POST_FAIL,\n    error,\n  };\n};\n\nexport const submitPostReset = () => {\n  return {\n    type: actionTypes.SUBMIT_POST_RESET,\n  };\n};\n\nexport const setPost = (postId) => {\n  return {\n    type: actionTypes.FIND_POST,\n    postId,\n  };\n};\n\nexport const resetPost = () => {\n  return {\n    type: actionTypes.RESET_POST,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}