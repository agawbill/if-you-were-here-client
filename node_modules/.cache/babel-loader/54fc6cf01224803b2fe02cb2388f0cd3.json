{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\"; // export let interceptor;\n\nconst withErrorHandler = WrappedComponent => {\n  return props => {\n    // const [error, setError] = useState(false);\n    // const [errorMessage, setErrorMessage] = useState(\"\");\n    const error = useSelector(state => state.messages.error) !== null || // useSelector((state) => state.message.error) !== null ||\n    useSelector(state => state.persons.error) !== null;\n    console.log(error); // interceptor = (response) => {\n    //   setError(true);\n    //   setErrorMessage(`${response}`);\n    // };\n\n    let body = React.createElement(WrappedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n\n    if (error) {\n      body = React.createElement(React.Fragment, null, \"Whoops! An error occured. IT Has been notified. Please try again later.\");\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/hoc/withErrorHandler.js"],"names":["React","useSelector","withErrorHandler","WrappedComponent","props","error","state","messages","persons","console","log","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AAEA,MAAMC,gBAAgB,GAAIC,gBAAD,IAAsB;AAC7C,SAAQC,KAAD,IAAW;AAChB;AACA;AACA,UAAMC,KAAK,GACTJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,KAA3B,CAAX,KAAiD,IAAjD,IACA;AACAJ,IAAAA,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACE,OAAN,CAAcH,KAA1B,CAAX,KAAgD,IAHlD;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EARgB,CAUhB;AACA;AACA;AACA;;AAEA,QAAIM,IAAI,GAAG,oBAAC,gBAAD,oBAAsBP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAEA,QAAIC,KAAJ,EAAW;AACTM,MAAAA,IAAI,GACF,oHADF;AAMD;;AAED,WAAOA,IAAP;AACD,GA3BD;AA4BD,CA7BD;;AA+BA,eAAeT,gBAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// export let interceptor;\n\nconst withErrorHandler = (WrappedComponent) => {\n  return (props) => {\n    // const [error, setError] = useState(false);\n    // const [errorMessage, setErrorMessage] = useState(\"\");\n    const error =\n      useSelector((state) => state.messages.error) !== null ||\n      // useSelector((state) => state.message.error) !== null ||\n      useSelector((state) => state.persons.error) !== null;\n\n    console.log(error);\n\n    // interceptor = (response) => {\n    //   setError(true);\n    //   setErrorMessage(`${response}`);\n    // };\n\n    let body = <WrappedComponent {...props} />;\n\n    if (error) {\n      body = (\n        <>\n          Whoops! An error occured. IT Has been notified. Please try again\n          later.\n        </>\n      );\n    }\n\n    return body;\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}