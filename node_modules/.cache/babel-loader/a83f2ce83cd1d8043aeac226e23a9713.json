{"ast":null,"code":"import*as actionTypes from\"./actionTypes\";export var addSort=function addSort(filter,filtered){return function(dispatch){try{dispatch(sortMessagesStart());dispatch(sortMessagesAdd(filter));dispatch(sortMessages(filtered));}catch(err){dispatch(sortMessagesFail(err));}};};export var removeSort=function removeSort(filter,filtered){return function(dispatch){try{dispatch(sortMessagesStart());dispatch(sortMessagesRemove(filter));dispatch(sortMessages(filtered));}catch(err){dispatch(sortMessagesFail(err));}};};export var sortMessagesAdd=function sortMessagesAdd(filter){return{type:actionTypes.SORT_MESSAGES_ADD,filter:filter};};export var sortMessagesRemove=function sortMessagesRemove(filter){return{type:actionTypes.SORT_MESSAGES_REMOVE,filter:filter};};export var sortMessages=function sortMessages(filtered){return{type:actionTypes.SORT_MESSAGES,filtered:filtered};};export var sortMessagesStart=function sortMessagesStart(){return{type:actionTypes.SORT_MESSAGES_START};};export var sortMessagesFail=function sortMessagesFail(error){return{type:actionTypes.SORT_MESSAGES_FAIL,error:error};};export var sortReset=function sortReset(){return{type:actionTypes.SORT_RESET};};","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/store/actions/sortMessages.js"],"names":["actionTypes","addSort","filter","filtered","dispatch","sortMessagesStart","sortMessagesAdd","sortMessages","err","sortMessagesFail","removeSort","sortMessagesRemove","type","SORT_MESSAGES_ADD","SORT_MESSAGES_REMOVE","SORT_MESSAGES","SORT_MESSAGES_START","error","SORT_MESSAGES_FAIL","sortReset","SORT_RESET"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,CAASC,QAAT,CAAsB,CAC3C,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAI,CACFA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR,CACAD,QAAQ,CAACE,eAAe,CAACJ,MAAD,CAAhB,CAAR,CACAE,QAAQ,CAACG,YAAY,CAACJ,QAAD,CAAb,CAAR,CACD,CAAC,MAAOK,GAAP,CAAY,CACZJ,QAAQ,CAACK,gBAAgB,CAACD,GAAD,CAAjB,CAAR,CACD,CACF,CARD,CASD,CAVM,CAYP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACR,MAAD,CAASC,QAAT,CAAsB,CAC9C,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAI,CACFA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR,CACAD,QAAQ,CAACO,kBAAkB,CAACT,MAAD,CAAnB,CAAR,CACAE,QAAQ,CAACG,YAAY,CAACJ,QAAD,CAAb,CAAR,CACD,CAAC,MAAOK,GAAP,CAAY,CACZJ,QAAQ,CAACK,gBAAgB,CAACD,GAAD,CAAjB,CAAR,CACD,CACF,CARD,CASD,CAVM,CAYP,MAAO,IAAMF,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAJ,MAAM,CAAI,CACvC,MAAO,CACLU,IAAI,CAAEZ,WAAW,CAACa,iBADb,CAELX,MAAM,CAANA,MAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAT,MAAM,CAAI,CAC1C,MAAO,CACLU,IAAI,CAAEZ,WAAW,CAACc,oBADb,CAELZ,MAAM,CAANA,MAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAJ,QAAQ,CAAI,CACtC,MAAO,CACLS,IAAI,CAAEZ,WAAW,CAACe,aADb,CAELZ,QAAQ,CAARA,QAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,MAAO,CACLO,IAAI,CAAEZ,WAAW,CAACgB,mBADb,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMP,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAQ,KAAK,CAAI,CACvC,MAAO,CACLL,IAAI,CAAEZ,WAAW,CAACkB,kBADb,CAELD,KAAK,CAALA,KAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,MAAO,CACLP,IAAI,CAAEZ,WAAW,CAACoB,UADb,CAAP,CAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nexport const addSort = (filter, filtered) => {\n  return dispatch => {\n    try {\n      dispatch(sortMessagesStart());\n      dispatch(sortMessagesAdd(filter));\n      dispatch(sortMessages(filtered));\n    } catch (err) {\n      dispatch(sortMessagesFail(err));\n    }\n  };\n};\n\nexport const removeSort = (filter, filtered) => {\n  return dispatch => {\n    try {\n      dispatch(sortMessagesStart());\n      dispatch(sortMessagesRemove(filter));\n      dispatch(sortMessages(filtered));\n    } catch (err) {\n      dispatch(sortMessagesFail(err));\n    }\n  };\n};\n\nexport const sortMessagesAdd = filter => {\n  return {\n    type: actionTypes.SORT_MESSAGES_ADD,\n    filter\n  };\n};\n\nexport const sortMessagesRemove = filter => {\n  return {\n    type: actionTypes.SORT_MESSAGES_REMOVE,\n    filter\n  };\n};\n\nexport const sortMessages = filtered => {\n  return {\n    type: actionTypes.SORT_MESSAGES,\n    filtered\n  };\n};\n\nexport const sortMessagesStart = () => {\n  return {\n    type: actionTypes.SORT_MESSAGES_START\n  };\n};\n\nexport const sortMessagesFail = error => {\n  return {\n    type: actionTypes.SORT_MESSAGES_FAIL,\n    error\n  };\n};\n\nexport const sortReset = () => {\n  return {\n    type: actionTypes.SORT_RESET\n  };\n};\n"]},"metadata":{},"sourceType":"module"}