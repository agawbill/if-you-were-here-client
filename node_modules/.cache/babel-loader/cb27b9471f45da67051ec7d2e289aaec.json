{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import parse from\"html-react-parser\";import styles from\"./FullPost.module.css\";import{setPost,resetPost}from\"../../store/actions\";import{useParams,withRouter}from\"react-router-dom\";import Spinner from\"../UI/Spinners/FormSpinner/FormSpinner\";var FullPost=function FullPost(props){var post=useSelector(function(state){return state.currentPost;});var setSuccess=useSelector(function(state){return state.setSuccess;});var dispatch=useDispatch();var _useParams=useParams(),id=_useParams.id;useEffect(function(){if(setSuccess===false){dispatch(resetPost());props.history.push(\"/\");}dispatch(setPost(id));return function(){return dispatch(resetPost());};},[dispatch,props.history,id,setSuccess]);var postBody=React.createElement(Spinner,null);if(post){postBody=React.createElement(React.Fragment,null,React.createElement(\"p\",null,React.createElement(\"b\",null,\"To my\",\" \",React.createElement(\"span\",{className:styles.PostAttribute},parse(post.who))),\",\"),React.createElement(\"span\",{className:styles.PostMessage},parse(post.message)),React.createElement(\"p\",null,React.createElement(\"b\",null,\"From your\",\" \",React.createElement(\"span\",{className:styles.PostAttribute},parse(post.identity)))));}return React.createElement(\"div\",null,postBody);};export default withRouter(FullPost);","map":{"version":3,"sources":["/home/anthony/Desktop/if-you-were-here/client/src/components/FullPost/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","parse","styles","setPost","resetPost","useParams","withRouter","Spinner","FullPost","props","post","state","currentPost","setSuccess","dispatch","id","history","push","postBody","PostAttribute","who","PostMessage","message","identity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,qBAAnC,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wCAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAjB,EAAD,CAAxB,CACA,GAAMC,CAAAA,UAAU,CAAGd,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACE,UAAjB,EAAD,CAA9B,CACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAH0B,eAIXK,SAAS,EAJE,CAIlBU,EAJkB,YAIlBA,EAJkB,CAM1BjB,SAAS,CAAC,UAAM,CACd,GAAIe,UAAU,GAAK,KAAnB,CAA0B,CACxBC,QAAQ,CAACV,SAAS,EAAV,CAAR,CACAK,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACD,CACDH,QAAQ,CAACX,OAAO,CAACY,EAAD,CAAR,CAAR,CAEA,MAAO,kBAAMD,CAAAA,QAAQ,CAACV,SAAS,EAAV,CAAd,EAAP,CACD,CARQ,CAQN,CAACU,QAAD,CAAWL,KAAK,CAACO,OAAjB,CAA0BD,EAA1B,CAA8BF,UAA9B,CARM,CAAT,CAUA,GAAIK,CAAAA,QAAQ,CAAG,oBAAC,OAAD,MAAf,CAEA,GAAIR,IAAJ,CAAU,CACRQ,QAAQ,CACN,wCACE,6BACE,qCACQ,GADR,CAEE,4BAAM,SAAS,CAAEhB,MAAM,CAACiB,aAAxB,EAAwClB,KAAK,CAACS,IAAI,CAACU,GAAN,CAA7C,CAFF,CADF,KADF,CAQE,4BAAM,SAAS,CAAElB,MAAM,CAACmB,WAAxB,EAAsCpB,KAAK,CAACS,IAAI,CAACY,OAAN,CAA3C,CARF,CASE,6BACE,yCACY,GADZ,CAEE,4BAAM,SAAS,CAAEpB,MAAM,CAACiB,aAAxB,EAAwClB,KAAK,CAACS,IAAI,CAACa,QAAN,CAA7C,CAFF,CADF,CATF,CADF,CAkBD,CAED,MAAO,gCAAML,QAAN,CAAP,CACD,CAxCD,CA0CA,cAAeZ,CAAAA,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport styles from \"./FullPost.module.css\";\nimport { setPost, resetPost } from \"../../store/actions\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinners/FormSpinner/FormSpinner\";\n\nconst FullPost = (props) => {\n  const post = useSelector((state) => state.currentPost);\n  const setSuccess = useSelector((state) => state.setSuccess);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (setSuccess === false) {\n      dispatch(resetPost());\n      props.history.push(\"/\");\n    }\n    dispatch(setPost(id));\n\n    return () => dispatch(resetPost());\n  }, [dispatch, props.history, id, setSuccess]);\n\n  let postBody = <Spinner />;\n\n  if (post) {\n    postBody = (\n      <>\n        <p>\n          <b>\n            To my{\" \"}\n            <span className={styles.PostAttribute}>{parse(post.who)}</span>\n          </b>\n          ,\n        </p>\n        <span className={styles.PostMessage}>{parse(post.message)}</span>\n        <p>\n          <b>\n            From your{\" \"}\n            <span className={styles.PostAttribute}>{parse(post.identity)}</span>\n          </b>\n        </p>\n      </>\n    );\n  }\n\n  return <div>{postBody}</div>;\n};\n\nexport default withRouter(FullPost);\n"]},"metadata":{},"sourceType":"module"}